2025-02-23 12:50:02,999 - SELECT DATABASE()
2025-02-23 12:50:03,000 - [raw sql] {}
2025-02-23 12:50:03,001 - SELECT @@sql_mode
2025-02-23 12:50:03,002 - [raw sql] {}
2025-02-23 12:50:03,003 - SELECT @@lower_case_table_names
2025-02-23 12:50:03,005 - [raw sql] {}
2025-02-23 12:50:03,007 - BEGIN (implicit)
2025-02-23 12:50:03,026 - SELECT department.department_name AS department_department_name, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s) THEN ledger.amount ELSE %(param_1)s END) - sum(CASE WHEN (ledger.ledger_description = %(ledger_description_2)s) THEN ledger.amount ELSE %(param_2)s END) AS roi 
FROM ledger INNER JOIN department ON ledger.department_id = department.department_id GROUP BY department.department_name ORDER BY sum(ledger.amount) DESC 
 LIMIT %(param_3)s
2025-02-23 12:50:03,028 - [generated in 0.00218s] {'ledger_description_1': 'Revenues', 'param_1': 0, 'ledger_description_2': 'Expenses', 'param_2': 0, 'param_3': 5}
2025-02-23 12:50:10,998 - GET http://127.0.0.1:8000/docs - 0.00 ms
2025-02-23 12:50:11,287 - GET http://127.0.0.1:8000/openapi.json - 0.04 ms
2025-02-23 12:50:18,658 - BEGIN (implicit)
2025-02-23 12:50:18,661 - SELECT department.department_id AS department_department_id, department.department_name AS department_department_name 
FROM department
2025-02-23 12:50:18,662 - [generated in 0.00069s] {}
2025-02-23 12:50:18,666 - SELECT min(ledger.general_ledger_date) AS min_1 
FROM ledger
2025-02-23 12:50:18,667 - [generated in 0.00093s] {}
2025-02-23 12:50:19,314 - SELECT max(ledger.general_ledger_date) AS max_1 
FROM ledger
2025-02-23 12:50:19,314 - [generated in 0.00072s] {}
2025-02-23 12:50:20,057 - ROLLBACK
2025-02-23 12:50:20,059 - GET http://127.0.0.1:8000/api/initialise - 1.41 ms
2025-02-23 12:50:23,156 - BEGIN (implicit)
2025-02-23 12:50:23,157 - SELECT department.department_name AS department_department_name, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s) THEN ledger.amount ELSE %(param_1)s END) - sum(CASE WHEN (ledger.ledger_description = %(ledger_description_2)s) THEN ledger.amount ELSE %(param_2)s END) AS roi 
FROM ledger INNER JOIN department ON ledger.department_id = department.department_id GROUP BY department.department_name ORDER BY sum(ledger.amount) DESC 
 LIMIT %(param_3)s
2025-02-23 12:50:23,158 - [cached since 20.13s ago] {'ledger_description_1': 'Revenues', 'param_1': 0, 'ledger_description_2': 'Expenses', 'param_2': 0, 'param_3': 5}
2025-02-23 12:50:31,470 - ROLLBACK
2025-02-23 12:50:31,472 - GET http://127.0.0.1:8000/api/top-roi/ - 28.50 ms
2025-02-23 12:50:37,282 - BEGIN (implicit)
2025-02-23 12:50:37,284 - SELECT department.department_name AS department_department_name, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s) THEN ledger.amount ELSE %(param_1)s END) - sum(CASE WHEN (ledger.ledger_description = %(ledger_description_2)s) THEN ledger.amount ELSE %(param_2)s END) AS roi 
FROM ledger INNER JOIN department ON ledger.department_id = department.department_id GROUP BY department.department_name ORDER BY sum(ledger.amount) DESC 
 LIMIT %(param_3)s
2025-02-23 12:50:37,285 - [cached since 34.26s ago] {'ledger_description_1': 'Revenues', 'param_1': 0, 'ledger_description_2': 'Expenses', 'param_2': 0, 'param_3': 5}
2025-02-23 12:50:57,333 - ROLLBACK
2025-02-23 12:50:57,336 - GET http://127.0.0.1:8000/api/top-roi/ - 34.18 ms
2025-02-23 12:51:10,078 - ROLLBACK
2025-02-23 12:51:10,079 - GET http://127.0.0.1:8000/api/top-roi/ - 32.80 ms
2025-02-23 12:51:16,416 - BEGIN (implicit)
2025-02-23 12:51:16,418 - SELECT department.department_name AS department_department_name, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s) THEN ledger.amount ELSE %(param_1)s END) - sum(CASE WHEN (ledger.ledger_description = %(ledger_description_2)s) THEN ledger.amount ELSE %(param_2)s END) AS roi 
FROM ledger INNER JOIN department ON ledger.department_id = department.department_id GROUP BY department.department_name ORDER BY sum(ledger.amount) DESC 
 LIMIT %(param_3)s
2025-02-23 12:51:16,418 - [cached since 73.39s ago] {'ledger_description_1': 'Revenues', 'param_1': 0, 'ledger_description_2': 'Expenses', 'param_2': 0, 'param_3': 5}
2025-02-23 12:51:42,444 - ROLLBACK
2025-02-23 12:51:42,445 - GET http://127.0.0.1:8000/api/top-roi/ - 26.03 ms
2025-02-23 13:10:49,608 - BEGIN (implicit)
2025-02-23 13:10:49,635 - SELECT cost_center.cost_center_description AS cost_center_cost_center_description, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s) THEN ledger.amount ELSE %(param_1)s END) - sum(CASE WHEN (ledger.ledger_description = %(ledger_description_2)s) THEN ledger.amount ELSE %(param_2)s END) AS roi 
FROM ledger INNER JOIN cost_center ON ledger.cost_center_id = cost_center.cost_center_id 
WHERE ledger.department_id = %(department_id_1)s GROUP BY cost_center.cost_center_description ORDER BY sum(ledger.amount) DESC 
 LIMIT %(param_3)s
2025-02-23 13:10:49,686 - [generated in 0.05021s] {'ledger_description_1': 'Revenues', 'param_1': 0, 'ledger_description_2': 'Expenses', 'param_2': 0, 'department_id_1': 107, 'param_3': 5}
2025-02-23 13:10:53,482 - ROLLBACK
2025-02-23 13:10:53,485 - GET http://127.0.0.1:8000/api/top-roi/?department=107 - 3.88 ms
2025-02-23 13:11:29,854 - BEGIN (implicit)
2025-02-23 13:11:29,859 - SELECT cost_center.cost_center_description AS cost_center_cost_center_description, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s) THEN ledger.amount ELSE %(param_1)s END) - sum(CASE WHEN (ledger.ledger_description = %(ledger_description_2)s) THEN ledger.amount ELSE %(param_2)s END) AS roi 
FROM ledger INNER JOIN cost_center ON ledger.cost_center_id = cost_center.cost_center_id 
WHERE ledger.department_id = %(department_id_1)s GROUP BY cost_center.cost_center_description ORDER BY sum(ledger.amount) DESC 
 LIMIT %(param_3)s
2025-02-23 13:11:29,861 - [cached since 40.23s ago] {'ledger_description_1': 'Revenues', 'param_1': 0, 'ledger_description_2': 'Expenses', 'param_2': 0, 'department_id_1': 107, 'param_3': 5}
2025-02-23 13:11:32,703 - ROLLBACK
2025-02-23 13:11:32,704 - GET http://127.0.0.1:8000/api/top-roi/?department=107&start_date=2017-08-01 - 2.85 ms
2025-02-23 13:20:13,060 - GET http://127.0.0.1:8000/api/initialise/ - 0.00 ms
2025-02-23 13:20:13,166 - BEGIN (implicit)
2025-02-23 13:20:13,167 - SELECT department.department_name AS department_department_name, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s) THEN ledger.amount ELSE %(param_1)s END) - sum(CASE WHEN (ledger.ledger_description = %(ledger_description_2)s) THEN ledger.amount ELSE %(param_2)s END) AS roi 
FROM ledger INNER JOIN department ON ledger.department_id = department.department_id GROUP BY department.department_name ORDER BY sum(ledger.amount) DESC 
 LIMIT %(param_3)s
2025-02-23 13:20:13,168 - [cached since 1810s ago] {'ledger_description_1': 'Revenues', 'param_1': 0, 'ledger_description_2': 'Expenses', 'param_2': 0, 'param_3': 5}
2025-02-23 13:20:13,171 - GET http://127.0.0.1:8000/api/initialise/ - 0.00 ms
2025-02-23 13:20:13,383 - BEGIN (implicit)
2025-02-23 13:20:13,384 - SELECT department.department_id AS department_department_id, department.department_name AS department_department_name 
FROM department
2025-02-23 13:20:13,384 - [cached since 1795s ago] {}
2025-02-23 13:20:13,387 - SELECT min(ledger.general_ledger_date) AS min_1 
FROM ledger
2025-02-23 13:20:13,388 - [cached since 1795s ago] {}
2025-02-23 13:20:13,814 - SELECT max(ledger.general_ledger_date) AS max_1 
FROM ledger
2025-02-23 13:20:13,814 - [cached since 1795s ago] {}
2025-02-23 13:20:14,297 - ROLLBACK
2025-02-23 13:20:14,299 - GET http://127.0.0.1:8000/api/initialise - 0.92 ms
2025-02-23 13:20:14,304 - BEGIN (implicit)
2025-02-23 13:20:14,305 - SELECT department.department_id AS department_department_id, department.department_name AS department_department_name 
FROM department
2025-02-23 13:20:14,305 - [cached since 1796s ago] {}
2025-02-23 13:20:14,309 - SELECT min(ledger.general_ledger_date) AS min_1 
FROM ledger
2025-02-23 13:20:14,310 - [cached since 1796s ago] {}
2025-02-23 13:20:14,687 - SELECT max(ledger.general_ledger_date) AS max_1 
FROM ledger
2025-02-23 13:20:14,689 - [cached since 1795s ago] {}
2025-02-23 13:20:14,971 - ROLLBACK
2025-02-23 13:20:14,972 - GET http://127.0.0.1:8000/api/initialise - 0.67 ms
2025-02-23 13:20:31,322 - ROLLBACK
2025-02-23 13:20:31,323 - GET http://127.0.0.1:8000/api/top-roi/ - 18.16 ms
2025-02-23 13:20:31,330 - BEGIN (implicit)
2025-02-23 13:20:31,331 - SELECT department.department_name AS department_department_name, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s) THEN ledger.amount ELSE %(param_1)s END) - sum(CASE WHEN (ledger.ledger_description = %(ledger_description_2)s) THEN ledger.amount ELSE %(param_2)s END) AS roi 
FROM ledger INNER JOIN department ON ledger.department_id = department.department_id GROUP BY department.department_name ORDER BY sum(ledger.amount) DESC 
 LIMIT %(param_3)s
2025-02-23 13:20:31,331 - [cached since 1828s ago] {'ledger_description_1': 'Revenues', 'param_1': 0, 'ledger_description_2': 'Expenses', 'param_2': 0, 'param_3': 5}
2025-02-23 13:20:34,754 - GET http://127.0.0.1:8000/api/initialise/ - 0.00 ms
2025-02-23 13:20:34,918 - BEGIN (implicit)
2025-02-23 13:20:34,919 - SELECT department.department_name AS department_department_name, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s) THEN ledger.amount ELSE %(param_1)s END) - sum(CASE WHEN (ledger.ledger_description = %(ledger_description_2)s) THEN ledger.amount ELSE %(param_2)s END) AS roi 
FROM ledger INNER JOIN department ON ledger.department_id = department.department_id GROUP BY department.department_name ORDER BY sum(ledger.amount) DESC 
 LIMIT %(param_3)s
2025-02-23 13:20:34,920 - [cached since 1832s ago] {'ledger_description_1': 'Revenues', 'param_1': 0, 'ledger_description_2': 'Expenses', 'param_2': 0, 'param_3': 5}
2025-02-23 13:20:34,928 - GET http://127.0.0.1:8000/api/initialise/ - 0.00 ms
2025-02-23 13:20:35,744 - BEGIN (implicit)
2025-02-23 13:20:35,744 - SELECT department.department_id AS department_department_id, department.department_name AS department_department_name 
FROM department
2025-02-23 13:20:35,746 - [cached since 1817s ago] {}
2025-02-23 13:20:35,755 - SELECT min(ledger.general_ledger_date) AS min_1 
FROM ledger
2025-02-23 13:20:35,756 - [cached since 1817s ago] {}
2025-02-23 13:20:36,540 - SELECT max(ledger.general_ledger_date) AS max_1 
FROM ledger
2025-02-23 13:20:36,540 - [cached since 1817s ago] {}
2025-02-23 13:20:37,070 - ROLLBACK
2025-02-23 13:20:37,071 - GET http://127.0.0.1:8000/api/initialise - 1.33 ms
2025-02-23 13:20:37,076 - BEGIN (implicit)
2025-02-23 13:20:37,077 - SELECT department.department_id AS department_department_id, department.department_name AS department_department_name 
FROM department
2025-02-23 13:20:37,077 - [cached since 1818s ago] {}
2025-02-23 13:20:37,081 - SELECT min(ledger.general_ledger_date) AS min_1 
FROM ledger
2025-02-23 13:20:37,081 - [cached since 1818s ago] {}
2025-02-23 13:20:37,753 - SELECT max(ledger.general_ledger_date) AS max_1 
FROM ledger
2025-02-23 13:20:37,753 - [cached since 1818s ago] {}
2025-02-23 13:20:38,143 - ROLLBACK
2025-02-23 13:20:38,144 - GET http://127.0.0.1:8000/api/initialise - 1.07 ms
2025-02-23 13:20:55,046 - BEGIN (implicit)
2025-02-23 13:20:55,047 - SELECT department.department_name AS department_department_name, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s) THEN ledger.amount ELSE %(param_1)s END) - sum(CASE WHEN (ledger.ledger_description = %(ledger_description_2)s) THEN ledger.amount ELSE %(param_2)s END) AS roi 
FROM ledger INNER JOIN department ON ledger.department_id = department.department_id GROUP BY department.department_name ORDER BY sum(ledger.amount) DESC 
 LIMIT %(param_3)s
2025-02-23 13:20:55,047 - [cached since 1852s ago] {'ledger_description_1': 'Revenues', 'param_1': 0, 'ledger_description_2': 'Expenses', 'param_2': 0, 'param_3': 5}
2025-02-23 13:20:55,142 - ROLLBACK
2025-02-23 13:20:55,143 - GET http://127.0.0.1:8000/api/top-roi/ - 23.82 ms
2025-02-23 13:21:01,756 - ROLLBACK
2025-02-23 13:21:01,757 - GET http://127.0.0.1:8000/api/top-roi/ - 26.84 ms
2025-02-23 13:21:20,199 - ROLLBACK
2025-02-23 13:21:20,200 - GET http://127.0.0.1:8000/api/top-roi/ - 25.16 ms
2025-02-23 13:23:37,839 - GET http://127.0.0.1:8000/api/initialise/ - 0.00 ms
2025-02-23 13:23:37,980 - BEGIN (implicit)
2025-02-23 13:23:37,980 - SELECT department.department_name AS department_department_name, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s) THEN ledger.amount ELSE %(param_1)s END) - sum(CASE WHEN (ledger.ledger_description = %(ledger_description_2)s) THEN ledger.amount ELSE %(param_2)s END) AS roi 
FROM ledger INNER JOIN department ON ledger.department_id = department.department_id GROUP BY department.department_name ORDER BY sum(ledger.amount) DESC 
 LIMIT %(param_3)s
2025-02-23 13:23:37,981 - [cached since 2015s ago] {'ledger_description_1': 'Revenues', 'param_1': 0, 'ledger_description_2': 'Expenses', 'param_2': 0, 'param_3': 5}
2025-02-23 13:23:37,985 - GET http://127.0.0.1:8000/api/initialise/ - 0.00 ms
2025-02-23 13:23:53,723 - ROLLBACK
2025-02-23 13:23:53,724 - GET http://127.0.0.1:8000/api/top-roi/ - 15.75 ms
2025-02-23 13:24:19,133 - GET http://127.0.0.1:8000/api/initialise/ - 0.00 ms
2025-02-23 13:24:19,138 - GET http://127.0.0.1:8000/api/initialise/ - 0.00 ms
2025-02-23 13:24:19,432 - GET http://127.0.0.1:8000/api/initialise/ - 0.00 ms
2025-02-23 13:24:19,441 - SELECT DATABASE()
2025-02-23 13:24:19,442 - [raw sql] {}
2025-02-23 13:24:19,444 - SELECT @@sql_mode
2025-02-23 13:24:19,444 - [raw sql] {}
2025-02-23 13:24:19,446 - SELECT @@lower_case_table_names
2025-02-23 13:24:19,446 - [raw sql] {}
2025-02-23 13:24:19,448 - BEGIN (implicit)
2025-02-23 13:24:19,468 - SELECT department.department_name AS department_department_name, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s) THEN ledger.amount ELSE %(param_1)s END) - sum(CASE WHEN (ledger.ledger_description = %(ledger_description_2)s) THEN ledger.amount ELSE %(param_2)s END) AS roi 
FROM ledger INNER JOIN department ON ledger.department_id = department.department_id GROUP BY department.department_name ORDER BY sum(ledger.amount) DESC 
 LIMIT %(param_3)s
2025-02-23 13:24:19,469 - [generated in 0.00098s] {'ledger_description_1': 'Revenues', 'param_1': 0, 'ledger_description_2': 'Expenses', 'param_2': 0, 'param_3': 5}
2025-02-23 13:24:19,567 - GET http://127.0.0.1:8000/api/initialise/ - 0.00 ms
2025-02-23 13:24:21,280 - BEGIN (implicit)
2025-02-23 13:24:21,282 - SELECT department.department_id AS department_department_id, department.department_name AS department_department_name 
FROM department
2025-02-23 13:24:21,283 - [generated in 0.00107s] {}
2025-02-23 13:24:21,291 - SELECT min(ledger.general_ledger_date) AS min_1 
FROM ledger
2025-02-23 13:24:21,291 - [generated in 0.00069s] {}
2025-02-23 13:24:22,077 - SELECT max(ledger.general_ledger_date) AS max_1 
FROM ledger
2025-02-23 13:24:22,078 - [generated in 0.00067s] {}
2025-02-23 13:24:22,688 - ROLLBACK
2025-02-23 13:24:22,691 - GET http://127.0.0.1:8000/api/initialise - 1.43 ms
2025-02-23 13:24:22,695 - BEGIN (implicit)
2025-02-23 13:24:22,696 - SELECT department.department_id AS department_department_id, department.department_name AS department_department_name 
FROM department
2025-02-23 13:24:22,697 - [cached since 1.416s ago] {}
2025-02-23 13:24:22,704 - SELECT min(ledger.general_ledger_date) AS min_1 
FROM ledger
2025-02-23 13:24:22,705 - [cached since 1.415s ago] {}
2025-02-23 13:24:23,255 - SELECT max(ledger.general_ledger_date) AS max_1 
FROM ledger
2025-02-23 13:24:23,256 - [cached since 1.178s ago] {}
2025-02-23 13:24:23,748 - ROLLBACK
2025-02-23 13:24:23,749 - GET http://127.0.0.1:8000/api/initialise - 1.06 ms
2025-02-23 13:24:23,753 - BEGIN (implicit)
2025-02-23 13:24:23,754 - SELECT department.department_id AS department_department_id, department.department_name AS department_department_name 
FROM department
2025-02-23 13:24:23,754 - [cached since 2.473s ago] {}
2025-02-23 13:24:23,770 - SELECT min(ledger.general_ledger_date) AS min_1 
FROM ledger
2025-02-23 13:24:23,770 - [cached since 2.48s ago] {}
2025-02-23 13:24:24,270 - SELECT max(ledger.general_ledger_date) AS max_1 
FROM ledger
2025-02-23 13:24:24,270 - [cached since 2.193s ago] {}
2025-02-23 13:24:24,567 - ROLLBACK
2025-02-23 13:24:24,569 - GET http://127.0.0.1:8000/api/initialise - 0.82 ms
2025-02-23 13:24:24,572 - BEGIN (implicit)
2025-02-23 13:24:24,573 - SELECT department.department_id AS department_department_id, department.department_name AS department_department_name 
FROM department
2025-02-23 13:24:24,573 - [cached since 3.292s ago] {}
2025-02-23 13:24:24,576 - SELECT min(ledger.general_ledger_date) AS min_1 
FROM ledger
2025-02-23 13:24:24,577 - [cached since 3.286s ago] {}
2025-02-23 13:24:24,985 - SELECT max(ledger.general_ledger_date) AS max_1 
FROM ledger
2025-02-23 13:24:24,986 - [cached since 2.908s ago] {}
2025-02-23 13:24:25,281 - ROLLBACK
2025-02-23 13:24:25,282 - GET http://127.0.0.1:8000/api/initialise - 0.71 ms
2025-02-23 13:24:36,117 - ROLLBACK
2025-02-23 13:24:36,118 - GET http://127.0.0.1:8000/api/top-roi/ - 16.70 ms
2025-02-23 13:24:36,123 - BEGIN (implicit)
2025-02-23 13:24:36,124 - SELECT department.department_name AS department_department_name, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s) THEN ledger.amount ELSE %(param_1)s END) - sum(CASE WHEN (ledger.ledger_description = %(ledger_description_2)s) THEN ledger.amount ELSE %(param_2)s END) AS roi 
FROM ledger INNER JOIN department ON ledger.department_id = department.department_id GROUP BY department.department_name ORDER BY sum(ledger.amount) DESC 
 LIMIT %(param_3)s
2025-02-23 13:24:36,125 - [cached since 16.66s ago] {'ledger_description_1': 'Revenues', 'param_1': 0, 'ledger_description_2': 'Expenses', 'param_2': 0, 'param_3': 5}
2025-02-23 13:24:39,602 - BEGIN (implicit)
2025-02-23 13:24:39,603 - SELECT department.department_name AS department_department_name, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s) THEN ledger.amount ELSE %(param_1)s END) - sum(CASE WHEN (ledger.ledger_description = %(ledger_description_2)s) THEN ledger.amount ELSE %(param_2)s END) AS roi 
FROM ledger INNER JOIN department ON ledger.department_id = department.department_id GROUP BY department.department_name ORDER BY sum(ledger.amount) DESC 
 LIMIT %(param_3)s
2025-02-23 13:24:39,604 - [cached since 20.14s ago] {'ledger_description_1': 'Revenues', 'param_1': 0, 'ledger_description_2': 'Expenses', 'param_2': 0, 'param_3': 5}
2025-02-23 13:24:40,012 - BEGIN (implicit)
2025-02-23 13:24:40,013 - SELECT department.department_name AS department_department_name, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s) THEN ledger.amount ELSE %(param_1)s END) - sum(CASE WHEN (ledger.ledger_description = %(ledger_description_2)s) THEN ledger.amount ELSE %(param_2)s END) AS roi 
FROM ledger INNER JOIN department ON ledger.department_id = department.department_id GROUP BY department.department_name ORDER BY sum(ledger.amount) DESC 
 LIMIT %(param_3)s
2025-02-23 13:24:40,013 - [cached since 20.54s ago] {'ledger_description_1': 'Revenues', 'param_1': 0, 'ledger_description_2': 'Expenses', 'param_2': 0, 'param_3': 5}
2025-02-23 13:25:12,955 - ROLLBACK
2025-02-23 13:25:12,957 - GET http://127.0.0.1:8000/api/top-roi/ - 36.84 ms
2025-02-23 13:25:19,009 - ROLLBACK
2025-02-23 13:25:19,010 - GET http://127.0.0.1:8000/api/top-roi/ - 39.41 ms
2025-02-23 13:25:19,518 - ROLLBACK
2025-02-23 13:25:19,519 - GET http://127.0.0.1:8000/api/top-roi/ - 39.51 ms
2025-02-23 13:27:34,330 - GET http://127.0.0.1:8000/api/initialise/ - 0.00 ms
2025-02-23 13:27:34,461 - BEGIN (implicit)
2025-02-23 13:27:34,462 - SELECT department.department_name AS department_department_name, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s) THEN ledger.amount ELSE %(param_1)s END) - sum(CASE WHEN (ledger.ledger_description = %(ledger_description_2)s) THEN ledger.amount ELSE %(param_2)s END) AS roi 
FROM ledger INNER JOIN department ON ledger.department_id = department.department_id GROUP BY department.department_name ORDER BY sum(ledger.amount) DESC 
 LIMIT %(param_3)s
2025-02-23 13:27:34,463 - [cached since 195s ago] {'ledger_description_1': 'Revenues', 'param_1': 0, 'ledger_description_2': 'Expenses', 'param_2': 0, 'param_3': 5}
2025-02-23 13:27:34,467 - GET http://127.0.0.1:8000/api/initialise/ - 0.00 ms
2025-02-23 13:27:35,252 - BEGIN (implicit)
2025-02-23 13:27:35,253 - SELECT department.department_id AS department_department_id, department.department_name AS department_department_name 
FROM department
2025-02-23 13:27:35,254 - [cached since 194s ago] {}
2025-02-23 13:27:35,256 - SELECT min(ledger.general_ledger_date) AS min_1 
FROM ledger
2025-02-23 13:27:35,257 - [cached since 194s ago] {}
2025-02-23 13:27:35,809 - SELECT max(ledger.general_ledger_date) AS max_1 
FROM ledger
2025-02-23 13:27:35,809 - [cached since 193.7s ago] {}
2025-02-23 13:27:36,128 - ROLLBACK
2025-02-23 13:27:36,130 - GET http://127.0.0.1:8000/api/initialise - 0.89 ms
2025-02-23 13:27:36,134 - BEGIN (implicit)
2025-02-23 13:27:36,135 - SELECT department.department_id AS department_department_id, department.department_name AS department_department_name 
FROM department
2025-02-23 13:27:36,136 - [cached since 194.9s ago] {}
2025-02-23 13:27:36,139 - SELECT min(ledger.general_ledger_date) AS min_1 
FROM ledger
2025-02-23 13:27:36,139 - [cached since 194.8s ago] {}
2025-02-23 13:27:36,593 - SELECT max(ledger.general_ledger_date) AS max_1 
FROM ledger
2025-02-23 13:27:36,594 - [cached since 194.5s ago] {}
2025-02-23 13:27:37,129 - ROLLBACK
2025-02-23 13:27:37,131 - GET http://127.0.0.1:8000/api/initialise - 1.00 ms
2025-02-23 13:27:54,367 - ROLLBACK
2025-02-23 13:27:54,368 - GET http://127.0.0.1:8000/api/top-roi/ - 19.91 ms
2025-02-23 13:27:54,374 - BEGIN (implicit)
2025-02-23 13:27:54,374 - SELECT department.department_name AS department_department_name, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s) THEN ledger.amount ELSE %(param_1)s END) - sum(CASE WHEN (ledger.ledger_description = %(ledger_description_2)s) THEN ledger.amount ELSE %(param_2)s END) AS roi 
FROM ledger INNER JOIN department ON ledger.department_id = department.department_id GROUP BY department.department_name ORDER BY sum(ledger.amount) DESC 
 LIMIT %(param_3)s
2025-02-23 13:27:54,375 - [cached since 214.9s ago] {'ledger_description_1': 'Revenues', 'param_1': 0, 'ledger_description_2': 'Expenses', 'param_2': 0, 'param_3': 5}
2025-02-23 13:28:11,666 - ROLLBACK
2025-02-23 13:28:11,667 - GET http://127.0.0.1:8000/api/top-roi/ - 17.30 ms
2025-02-23 13:28:31,141 - BEGIN (implicit)
2025-02-23 13:28:31,144 - SELECT cost_center.cost_center_description AS cost_center_cost_center_description, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s) THEN ledger.amount ELSE %(param_1)s END) - sum(CASE WHEN (ledger.ledger_description = %(ledger_description_2)s) THEN ledger.amount ELSE %(param_2)s END) AS roi 
FROM ledger INNER JOIN cost_center ON ledger.cost_center_id = cost_center.cost_center_id 
WHERE ledger.department_id = %(department_id_1)s GROUP BY cost_center.cost_center_description ORDER BY sum(ledger.amount) DESC 
 LIMIT %(param_3)s
2025-02-23 13:28:31,145 - [generated in 0.00074s] {'ledger_description_1': 'Revenues', 'param_1': 0, 'ledger_description_2': 'Expenses', 'param_2': 0, 'department_id_1': 102, 'param_3': 5}
2025-02-23 13:28:31,669 - ROLLBACK
2025-02-23 13:28:31,671 - GET http://127.0.0.1:8000/api/top-roi/?department=102&startDate=2012-01-29 - 0.53 ms
2025-02-23 13:28:39,570 - BEGIN (implicit)
2025-02-23 13:28:39,571 - SELECT cost_center.cost_center_description AS cost_center_cost_center_description, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s) THEN ledger.amount ELSE %(param_1)s END) - sum(CASE WHEN (ledger.ledger_description = %(ledger_description_2)s) THEN ledger.amount ELSE %(param_2)s END) AS roi 
FROM ledger INNER JOIN cost_center ON ledger.cost_center_id = cost_center.cost_center_id 
WHERE ledger.department_id = %(department_id_1)s GROUP BY cost_center.cost_center_description ORDER BY sum(ledger.amount) DESC 
 LIMIT %(param_3)s
2025-02-23 13:28:39,572 - [cached since 8.428s ago] {'ledger_description_1': 'Revenues', 'param_1': 0, 'ledger_description_2': 'Expenses', 'param_2': 0, 'department_id_1': 101, 'param_3': 5}
2025-02-23 13:28:39,897 - ROLLBACK
2025-02-23 13:28:39,897 - GET http://127.0.0.1:8000/api/top-roi/?department=101&startDate=2012-01-29 - 0.33 ms
2025-02-23 13:32:46,093 - GET http://127.0.0.1:8000/api/initialise/ - 0.00 ms
2025-02-23 13:32:46,195 - GET http://127.0.0.1:8000/api/initialise/ - 0.00 ms
2025-02-23 13:32:46,205 - SELECT DATABASE()
2025-02-23 13:32:46,206 - [raw sql] {}
2025-02-23 13:32:46,207 - SELECT @@sql_mode
2025-02-23 13:32:46,208 - [raw sql] {}
2025-02-23 13:32:46,208 - SELECT @@lower_case_table_names
2025-02-23 13:32:46,209 - [raw sql] {}
2025-02-23 13:32:46,211 - BEGIN (implicit)
2025-02-23 13:32:46,225 - SELECT department.department_name AS department_department_name, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s) THEN ledger.amount ELSE %(param_1)s END) - sum(CASE WHEN (ledger.ledger_description = %(ledger_description_2)s) THEN ledger.amount ELSE %(param_2)s END) AS roi 
FROM ledger INNER JOIN department ON ledger.department_id = department.department_id GROUP BY department.department_name ORDER BY sum(ledger.amount) DESC 
 LIMIT %(param_3)s
2025-02-23 13:32:46,226 - [generated in 0.00073s] {'ledger_description_1': 'Revenues', 'param_1': 0, 'ledger_description_2': 'Expenses', 'param_2': 0, 'param_3': 5}
2025-02-23 13:32:46,821 - BEGIN (implicit)
2025-02-23 13:32:46,823 - SELECT department.department_id AS department_department_id, department.department_name AS department_department_name 
FROM department
2025-02-23 13:32:46,823 - [generated in 0.00059s] {}
2025-02-23 13:32:46,826 - SELECT min(ledger.general_ledger_date) AS min_1 
FROM ledger
2025-02-23 13:32:46,827 - [generated in 0.00061s] {}
2025-02-23 13:32:47,334 - SELECT max(ledger.general_ledger_date) AS max_1 
FROM ledger
2025-02-23 13:32:47,334 - [generated in 0.00049s] {}
2025-02-23 13:32:47,698 - ROLLBACK
2025-02-23 13:32:47,699 - GET http://127.0.0.1:8000/api/initialise - 0.88 ms
2025-02-23 13:32:47,703 - BEGIN (implicit)
2025-02-23 13:32:47,703 - SELECT department.department_id AS department_department_id, department.department_name AS department_department_name 
FROM department
2025-02-23 13:32:47,703 - [cached since 0.8818s ago] {}
2025-02-23 13:32:47,705 - SELECT min(ledger.general_ledger_date) AS min_1 
FROM ledger
2025-02-23 13:32:47,705 - [cached since 0.8798s ago] {}
2025-02-23 13:32:48,057 - SELECT max(ledger.general_ledger_date) AS max_1 
FROM ledger
2025-02-23 13:32:48,059 - [cached since 0.724s ago] {}
2025-02-23 13:32:48,394 - ROLLBACK
2025-02-23 13:32:48,395 - GET http://127.0.0.1:8000/api/initialise - 0.69 ms
2025-02-23 13:33:04,436 - ROLLBACK
2025-02-23 13:33:04,437 - GET http://127.0.0.1:8000/api/top-roi/ - 18.25 ms
2025-02-23 13:33:04,442 - BEGIN (implicit)
2025-02-23 13:33:04,443 - SELECT department.department_name AS department_department_name, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s) THEN ledger.amount ELSE %(param_1)s END) - sum(CASE WHEN (ledger.ledger_description = %(ledger_description_2)s) THEN ledger.amount ELSE %(param_2)s END) AS roi 
FROM ledger INNER JOIN department ON ledger.department_id = department.department_id GROUP BY department.department_name ORDER BY sum(ledger.amount) DESC 
 LIMIT %(param_3)s
2025-02-23 13:33:04,443 - [cached since 18.22s ago] {'ledger_description_1': 'Revenues', 'param_1': 0, 'ledger_description_2': 'Expenses', 'param_2': 0, 'param_3': 5}
2025-02-23 13:33:21,713 - ROLLBACK
2025-02-23 13:33:21,714 - GET http://127.0.0.1:8000/api/top-roi/ - 17.27 ms
2025-02-23 13:33:45,691 - BEGIN (implicit)
2025-02-23 13:33:45,693 - SELECT department.department_name AS department_department_name, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s) THEN ledger.amount ELSE %(param_1)s END) - sum(CASE WHEN (ledger.ledger_description = %(ledger_description_2)s) THEN ledger.amount ELSE %(param_2)s END) AS roi 
FROM ledger INNER JOIN department ON ledger.department_id = department.department_id GROUP BY department.department_name ORDER BY sum(ledger.amount) DESC 
 LIMIT %(param_3)s
2025-02-23 13:33:45,693 - [cached since 59.47s ago] {'ledger_description_1': 'Revenues', 'param_1': 0, 'ledger_description_2': 'Expenses', 'param_2': 0, 'param_3': 5}
2025-02-23 13:34:02,647 - ROLLBACK
2025-02-23 13:34:02,649 - GET http://127.0.0.1:8000/api/top-roi/?startDate=2012-02-22&endDate=2013-01-17 - 16.96 ms
2025-02-23 13:34:26,196 - BEGIN (implicit)
2025-02-23 13:34:26,198 - SELECT cost_center.cost_center_description AS cost_center_cost_center_description, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s) THEN ledger.amount ELSE %(param_1)s END) - sum(CASE WHEN (ledger.ledger_description = %(ledger_description_2)s) THEN ledger.amount ELSE %(param_2)s END) AS roi 
FROM ledger INNER JOIN cost_center ON ledger.cost_center_id = cost_center.cost_center_id 
WHERE ledger.department_id = %(department_id_1)s GROUP BY cost_center.cost_center_description ORDER BY sum(ledger.amount) DESC 
 LIMIT %(param_3)s
2025-02-23 13:34:26,198 - [generated in 0.00058s] {'ledger_description_1': 'Revenues', 'param_1': 0, 'ledger_description_2': 'Expenses', 'param_2': 0, 'department_id_1': 102, 'param_3': 5}
2025-02-23 13:34:26,708 - ROLLBACK
2025-02-23 13:34:26,709 - GET http://127.0.0.1:8000/api/top-roi/?department=102&startDate=2012-02-22&endDate=2013-01-17 - 0.52 ms
2025-02-23 13:34:45,480 - BEGIN (implicit)
2025-02-23 13:34:45,481 - SELECT cost_center.cost_center_description AS cost_center_cost_center_description, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s) THEN ledger.amount ELSE %(param_1)s END) - sum(CASE WHEN (ledger.ledger_description = %(ledger_description_2)s) THEN ledger.amount ELSE %(param_2)s END) AS roi 
FROM ledger INNER JOIN cost_center ON ledger.cost_center_id = cost_center.cost_center_id 
WHERE ledger.department_id = %(department_id_1)s GROUP BY cost_center.cost_center_description ORDER BY sum(ledger.amount) DESC 
 LIMIT %(param_3)s
2025-02-23 13:34:45,482 - [cached since 19.28s ago] {'ledger_description_1': 'Revenues', 'param_1': 0, 'ledger_description_2': 'Expenses', 'param_2': 0, 'department_id_1': 102, 'param_3': 5}
2025-02-23 13:34:45,892 - ROLLBACK
2025-02-23 13:34:45,893 - GET http://127.0.0.1:8000/api/top-roi/?department=102&startDate=2012-12-12&endDate=2013-01-17 - 0.41 ms
2025-02-23 13:34:55,087 - GET http://127.0.0.1:8000/docs - 0.00 ms
2025-02-23 13:34:55,337 - GET http://127.0.0.1:8000/openapi.json - 0.03 ms
2025-02-23 13:35:24,135 - BEGIN (implicit)
2025-02-23 13:35:24,141 - SELECT cost_center.cost_center_description AS cost_center_cost_center_description, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s) THEN ledger.amount ELSE %(param_1)s END) - sum(CASE WHEN (ledger.ledger_description = %(ledger_description_2)s) THEN ledger.amount ELSE %(param_2)s END) AS roi 
FROM ledger INNER JOIN cost_center ON ledger.cost_center_id = cost_center.cost_center_id 
WHERE ledger.department_id = %(department_id_1)s AND ledger.general_ledger_date BETWEEN %(general_ledger_date_1)s AND %(general_ledger_date_2)s GROUP BY cost_center.cost_center_description ORDER BY sum(ledger.amount) DESC 
 LIMIT %(param_3)s
2025-02-23 13:35:24,145 - [generated in 0.00344s] {'ledger_description_1': 'Revenues', 'param_1': 0, 'ledger_description_2': 'Expenses', 'param_2': 0, 'department_id_1': 108, 'general_ledger_date_1': '2013-01-23', 'general_ledger_date_2': '2015-01-23', 'param_3': 5}
2025-02-23 13:35:24,525 - ROLLBACK
2025-02-23 13:35:24,526 - GET http://127.0.0.1:8000/api/top-roi/?department=108&start_date=2013-01-23&end_date=2015-01-23 - 0.39 ms
2025-02-23 13:35:42,082 - BEGIN (implicit)
2025-02-23 13:35:42,083 - SELECT cost_center.cost_center_description AS cost_center_cost_center_description, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s) THEN ledger.amount ELSE %(param_1)s END) - sum(CASE WHEN (ledger.ledger_description = %(ledger_description_2)s) THEN ledger.amount ELSE %(param_2)s END) AS roi 
FROM ledger INNER JOIN cost_center ON ledger.cost_center_id = cost_center.cost_center_id 
WHERE ledger.department_id = %(department_id_1)s AND ledger.general_ledger_date BETWEEN %(general_ledger_date_1)s AND %(general_ledger_date_2)s GROUP BY cost_center.cost_center_description ORDER BY sum(ledger.amount) DESC 
 LIMIT %(param_3)s
2025-02-23 13:35:42,086 - [cached since 17.94s ago] {'ledger_description_1': 'Revenues', 'param_1': 0, 'ledger_description_2': 'Expenses', 'param_2': 0, 'department_id_1': 108, 'general_ledger_date_1': '2013-01-23', 'general_ledger_date_2': '2017-01-23', 'param_3': 5}
2025-02-23 13:35:42,394 - ROLLBACK
2025-02-23 13:35:42,395 - GET http://127.0.0.1:8000/api/top-roi/?department=108&start_date=2013-01-23&end_date=2017-01-23 - 0.31 ms
2025-02-23 13:36:14,607 - GET http://127.0.0.1:8000/api/initialise/ - 0.00 ms
2025-02-23 13:36:14,732 - BEGIN (implicit)
2025-02-23 13:36:14,734 - SELECT department.department_name AS department_department_name, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s) THEN ledger.amount ELSE %(param_1)s END) - sum(CASE WHEN (ledger.ledger_description = %(ledger_description_2)s) THEN ledger.amount ELSE %(param_2)s END) AS roi 
FROM ledger INNER JOIN department ON ledger.department_id = department.department_id GROUP BY department.department_name ORDER BY sum(ledger.amount) DESC 
 LIMIT %(param_3)s
2025-02-23 13:36:14,734 - [cached since 208.5s ago] {'ledger_description_1': 'Revenues', 'param_1': 0, 'ledger_description_2': 'Expenses', 'param_2': 0, 'param_3': 5}
2025-02-23 13:36:14,739 - GET http://127.0.0.1:8000/api/initialise/ - 0.00 ms
2025-02-23 13:36:15,402 - BEGIN (implicit)
2025-02-23 13:36:15,403 - SELECT department.department_id AS department_department_id, department.department_name AS department_department_name 
FROM department
2025-02-23 13:36:15,403 - [cached since 208.6s ago] {}
2025-02-23 13:36:15,406 - SELECT min(ledger.general_ledger_date) AS min_1 
FROM ledger
2025-02-23 13:36:15,406 - [cached since 208.6s ago] {}
2025-02-23 13:36:15,943 - SELECT max(ledger.general_ledger_date) AS max_1 
FROM ledger
2025-02-23 13:36:15,944 - [cached since 208.6s ago] {}
2025-02-23 13:36:16,388 - ROLLBACK
2025-02-23 13:36:16,390 - GET http://127.0.0.1:8000/api/initialise - 0.99 ms
2025-02-23 13:36:16,395 - BEGIN (implicit)
2025-02-23 13:36:16,396 - SELECT department.department_id AS department_department_id, department.department_name AS department_department_name 
FROM department
2025-02-23 13:36:16,396 - [cached since 209.6s ago] {}
2025-02-23 13:36:16,400 - SELECT min(ledger.general_ledger_date) AS min_1 
FROM ledger
2025-02-23 13:36:16,400 - [cached since 209.6s ago] {}
2025-02-23 13:36:16,783 - SELECT max(ledger.general_ledger_date) AS max_1 
FROM ledger
2025-02-23 13:36:16,783 - [cached since 209.4s ago] {}
2025-02-23 13:36:17,456 - ROLLBACK
2025-02-23 13:36:17,457 - GET http://127.0.0.1:8000/api/initialise - 1.06 ms
2025-02-23 13:36:31,825 - ROLLBACK
2025-02-23 13:36:31,826 - GET http://127.0.0.1:8000/api/top-roi/ - 17.10 ms
2025-02-23 13:36:32,305 - BEGIN (implicit)
2025-02-23 13:36:32,306 - SELECT cost_center.cost_center_description AS cost_center_cost_center_description, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s) THEN ledger.amount ELSE %(param_1)s END) - sum(CASE WHEN (ledger.ledger_description = %(ledger_description_2)s) THEN ledger.amount ELSE %(param_2)s END) AS roi 
FROM ledger INNER JOIN cost_center ON ledger.cost_center_id = cost_center.cost_center_id 
WHERE ledger.department_id = %(department_id_1)s GROUP BY cost_center.cost_center_description ORDER BY sum(ledger.amount) DESC 
 LIMIT %(param_3)s
2025-02-23 13:36:32,306 - [cached since 126.1s ago] {'ledger_description_1': 'Revenues', 'param_1': 0, 'ledger_description_2': 'Expenses', 'param_2': 0, 'department_id_1': 107, 'param_3': 5}
2025-02-23 13:36:34,202 - ROLLBACK
2025-02-23 13:36:34,203 - GET http://127.0.0.1:8000/api/top-roi/?department=107&startDate=2012-12-12&endDate=2013-01-17 - 1.90 ms
2025-02-23 13:36:45,233 - BEGIN (implicit)
2025-02-23 13:36:45,234 - SELECT cost_center.cost_center_description AS cost_center_cost_center_description, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s) THEN ledger.amount ELSE %(param_1)s END) - sum(CASE WHEN (ledger.ledger_description = %(ledger_description_2)s) THEN ledger.amount ELSE %(param_2)s END) AS roi 
FROM ledger INNER JOIN cost_center ON ledger.cost_center_id = cost_center.cost_center_id 
WHERE ledger.department_id = %(department_id_1)s GROUP BY cost_center.cost_center_description ORDER BY sum(ledger.amount) DESC 
 LIMIT %(param_3)s
2025-02-23 13:36:45,235 - [cached since 139s ago] {'ledger_description_1': 'Revenues', 'param_1': 0, 'ledger_description_2': 'Expenses', 'param_2': 0, 'department_id_1': 107, 'param_3': 5}
2025-02-23 13:36:46,975 - ROLLBACK
2025-02-23 13:36:46,976 - GET http://127.0.0.1:8000/api/top-roi/?department=107&startDate=2012-12-12&endDate=2014-02-17 - 1.74 ms
2025-02-23 13:37:00,639 - BEGIN (implicit)
2025-02-23 13:37:00,641 - SELECT cost_center.cost_center_description AS cost_center_cost_center_description, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s) THEN ledger.amount ELSE %(param_1)s END) - sum(CASE WHEN (ledger.ledger_description = %(ledger_description_2)s) THEN ledger.amount ELSE %(param_2)s END) AS roi 
FROM ledger INNER JOIN cost_center ON ledger.cost_center_id = cost_center.cost_center_id 
WHERE ledger.department_id = %(department_id_1)s GROUP BY cost_center.cost_center_description ORDER BY sum(ledger.amount) DESC 
 LIMIT %(param_3)s
2025-02-23 13:37:00,642 - [cached since 154.4s ago] {'ledger_description_1': 'Revenues', 'param_1': 0, 'ledger_description_2': 'Expenses', 'param_2': 0, 'department_id_1': 107, 'param_3': 5}
2025-02-23 13:37:02,341 - ROLLBACK
2025-02-23 13:37:02,342 - GET http://127.0.0.1:8000/api/top-roi/?department=107 - 1.71 ms
2025-02-23 13:38:32,231 - GET http://127.0.0.1:8000/api/initialise/ - 0.00 ms
2025-02-23 13:38:32,420 - BEGIN (implicit)
2025-02-23 13:38:32,421 - SELECT department.department_name AS department_department_name, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s) THEN ledger.amount ELSE %(param_1)s END) - sum(CASE WHEN (ledger.ledger_description = %(ledger_description_2)s) THEN ledger.amount ELSE %(param_2)s END) AS roi 
FROM ledger INNER JOIN department ON ledger.department_id = department.department_id GROUP BY department.department_name ORDER BY sum(ledger.amount) DESC 
 LIMIT %(param_3)s
2025-02-23 13:38:32,422 - [cached since 346.2s ago] {'ledger_description_1': 'Revenues', 'param_1': 0, 'ledger_description_2': 'Expenses', 'param_2': 0, 'param_3': 5}
2025-02-23 13:38:32,429 - GET http://127.0.0.1:8000/api/initialise/ - 0.00 ms
2025-02-23 13:38:33,264 - BEGIN (implicit)
2025-02-23 13:38:33,265 - SELECT department.department_id AS department_department_id, department.department_name AS department_department_name 
FROM department
2025-02-23 13:38:33,266 - [cached since 346.4s ago] {}
2025-02-23 13:38:33,269 - SELECT min(ledger.general_ledger_date) AS min_1 
FROM ledger
2025-02-23 13:38:33,270 - [cached since 346.4s ago] {}
2025-02-23 13:38:34,025 - SELECT max(ledger.general_ledger_date) AS max_1 
FROM ledger
2025-02-23 13:38:34,025 - [cached since 346.7s ago] {}
2025-02-23 13:38:34,513 - ROLLBACK
2025-02-23 13:38:34,515 - GET http://127.0.0.1:8000/api/initialise - 1.26 ms
2025-02-23 13:38:34,522 - BEGIN (implicit)
2025-02-23 13:38:34,523 - SELECT department.department_id AS department_department_id, department.department_name AS department_department_name 
FROM department
2025-02-23 13:38:34,524 - [cached since 347.7s ago] {}
2025-02-23 13:38:34,528 - SELECT min(ledger.general_ledger_date) AS min_1 
FROM ledger
2025-02-23 13:38:34,530 - [cached since 347.7s ago] {}
2025-02-23 13:38:35,337 - SELECT max(ledger.general_ledger_date) AS max_1 
FROM ledger
2025-02-23 13:38:35,338 - [cached since 348s ago] {}
2025-02-23 13:38:36,187 - ROLLBACK
2025-02-23 13:38:36,189 - GET http://127.0.0.1:8000/api/initialise - 1.67 ms
2025-02-23 13:38:52,575 - BEGIN (implicit)
2025-02-23 13:38:52,576 - SELECT department.department_name AS department_department_name, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s) THEN ledger.amount ELSE %(param_1)s END) - sum(CASE WHEN (ledger.ledger_description = %(ledger_description_2)s) THEN ledger.amount ELSE %(param_2)s END) AS roi 
FROM ledger INNER JOIN department ON ledger.department_id = department.department_id GROUP BY department.department_name ORDER BY sum(ledger.amount) DESC 
 LIMIT %(param_3)s
2025-02-23 13:38:52,576 - [cached since 366.4s ago] {'ledger_description_1': 'Revenues', 'param_1': 0, 'ledger_description_2': 'Expenses', 'param_2': 0, 'param_3': 5}
2025-02-23 13:38:54,111 - ROLLBACK
2025-02-23 13:38:54,113 - GET http://127.0.0.1:8000/api/top-roi/ - 21.70 ms
2025-02-23 13:39:15,041 - ROLLBACK
2025-02-23 13:39:15,042 - GET http://127.0.0.1:8000/api/top-roi/ - 22.47 ms
2025-02-23 13:39:15,452 - BEGIN (implicit)
2025-02-23 13:39:15,454 - SELECT cost_center.cost_center_description AS cost_center_cost_center_description, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s) THEN ledger.amount ELSE %(param_1)s END) - sum(CASE WHEN (ledger.ledger_description = %(ledger_description_2)s) THEN ledger.amount ELSE %(param_2)s END) AS roi 
FROM ledger INNER JOIN cost_center ON ledger.cost_center_id = cost_center.cost_center_id 
WHERE ledger.department_id = %(department_id_1)s GROUP BY cost_center.cost_center_description ORDER BY sum(ledger.amount) DESC 
 LIMIT %(param_3)s
2025-02-23 13:39:15,455 - [cached since 289.3s ago] {'ledger_description_1': 'Revenues', 'param_1': 0, 'ledger_description_2': 'Expenses', 'param_2': 0, 'department_id_1': 102, 'param_3': 5}
2025-02-23 13:39:16,182 - ROLLBACK
2025-02-23 13:39:16,183 - GET http://127.0.0.1:8000/api/top-roi/?department=102 - 0.73 ms
2025-02-23 13:39:42,188 - BEGIN (implicit)
2025-02-23 13:39:42,188 - SELECT cost_center.cost_center_description AS cost_center_cost_center_description, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s) THEN ledger.amount ELSE %(param_1)s END) - sum(CASE WHEN (ledger.ledger_description = %(ledger_description_2)s) THEN ledger.amount ELSE %(param_2)s END) AS roi 
FROM ledger INNER JOIN cost_center ON ledger.cost_center_id = cost_center.cost_center_id 
WHERE ledger.department_id = %(department_id_1)s GROUP BY cost_center.cost_center_description ORDER BY sum(ledger.amount) DESC 
 LIMIT %(param_3)s
2025-02-23 13:39:42,189 - [cached since 316s ago] {'ledger_description_1': 'Revenues', 'param_1': 0, 'ledger_description_2': 'Expenses', 'param_2': 0, 'department_id_1': 102, 'param_3': 5}
2025-02-23 13:39:42,753 - ROLLBACK
2025-02-23 13:39:42,755 - GET http://127.0.0.1:8000/api/top-roi/?department=102&startDate=2017-07-24 - 0.57 ms
2025-02-23 13:40:41,749 - BEGIN (implicit)
2025-02-23 13:40:41,749 - SELECT cost_center.cost_center_description AS cost_center_cost_center_description, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s) THEN ledger.amount ELSE %(param_1)s END) - sum(CASE WHEN (ledger.ledger_description = %(ledger_description_2)s) THEN ledger.amount ELSE %(param_2)s END) AS roi 
FROM ledger INNER JOIN cost_center ON ledger.cost_center_id = cost_center.cost_center_id 
WHERE ledger.department_id = %(department_id_1)s GROUP BY cost_center.cost_center_description ORDER BY sum(ledger.amount) DESC 
 LIMIT %(param_3)s
2025-02-23 13:40:41,750 - [cached since 375.6s ago] {'ledger_description_1': 'Revenues', 'param_1': 0, 'ledger_description_2': 'Expenses', 'param_2': 0, 'department_id_1': 102, 'param_3': 5}
2025-02-23 13:40:42,319 - ROLLBACK
2025-02-23 13:40:42,320 - GET http://127.0.0.1:8000/api/top-roi/?department=102&startDate=2017-07-24&endDate=2020-07-17 - 0.57 ms
2025-02-23 13:41:42,504 - BEGIN (implicit)
2025-02-23 13:41:42,504 - SELECT cost_center.cost_center_description AS cost_center_cost_center_description, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s) THEN ledger.amount ELSE %(param_1)s END) - sum(CASE WHEN (ledger.ledger_description = %(ledger_description_2)s) THEN ledger.amount ELSE %(param_2)s END) AS roi 
FROM ledger INNER JOIN cost_center ON ledger.cost_center_id = cost_center.cost_center_id 
WHERE ledger.department_id = %(department_id_1)s AND ledger.general_ledger_date BETWEEN %(general_ledger_date_1)s AND %(general_ledger_date_2)s GROUP BY cost_center.cost_center_description ORDER BY sum(ledger.amount) DESC 
 LIMIT %(param_3)s
2025-02-23 13:41:42,504 - [cached since 378.4s ago] {'ledger_description_1': 'Revenues', 'param_1': 0, 'ledger_description_2': 'Expenses', 'param_2': 0, 'department_id_1': 102, 'general_ledger_date_1': '2017-07-24', 'general_ledger_date_2': '2020-07-17', 'param_3': 5}
2025-02-23 13:41:42,860 - ROLLBACK
2025-02-23 13:41:42,861 - GET http://127.0.0.1:8000/api/top-roi/?department=102&start_date=2017-07-24&end_date=2020-07-17 - 0.36 ms
2025-02-23 13:44:54,697 - GET http://127.0.0.1:8000/api/initialise/ - 0.00 ms
2025-02-23 13:44:55,326 - BEGIN (implicit)
2025-02-23 13:44:55,328 - SELECT department.department_name AS department_department_name, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s) THEN ledger.amount ELSE %(param_1)s END) - sum(CASE WHEN (ledger.ledger_description = %(ledger_description_2)s) THEN ledger.amount ELSE %(param_2)s END) AS roi 
FROM ledger INNER JOIN department ON ledger.department_id = department.department_id GROUP BY department.department_name ORDER BY sum(ledger.amount) DESC 
 LIMIT %(param_3)s
2025-02-23 13:44:55,329 - [cached since 729.1s ago] {'ledger_description_1': 'Revenues', 'param_1': 0, 'ledger_description_2': 'Expenses', 'param_2': 0, 'param_3': 5}
2025-02-23 13:44:55,453 - BEGIN (implicit)
2025-02-23 13:44:55,454 - SELECT department.department_id AS department_department_id, department.department_name AS department_department_name 
FROM department
2025-02-23 13:44:55,455 - [cached since 728.6s ago] {}
2025-02-23 13:44:55,459 - SELECT min(ledger.general_ledger_date) AS min_1 
FROM ledger
2025-02-23 13:44:55,460 - [cached since 728.6s ago] {}
2025-02-23 13:44:55,997 - SELECT max(ledger.general_ledger_date) AS max_1 
FROM ledger
2025-02-23 13:44:55,999 - [cached since 728.7s ago] {}
2025-02-23 13:44:56,511 - ROLLBACK
2025-02-23 13:44:56,512 - GET http://127.0.0.1:8000/api/initialise - 1.06 ms
2025-02-23 13:44:57,646 - GET http://127.0.0.1:8000/api/initialise/ - 0.00 ms
2025-02-23 13:44:58,040 - BEGIN (implicit)
2025-02-23 13:44:58,042 - SELECT department.department_id AS department_department_id, department.department_name AS department_department_name 
FROM department
2025-02-23 13:44:58,043 - [cached since 731.2s ago] {}
2025-02-23 13:44:58,049 - SELECT min(ledger.general_ledger_date) AS min_1 
FROM ledger
2025-02-23 13:44:58,050 - [cached since 731.2s ago] {}
2025-02-23 13:44:58,641 - SELECT max(ledger.general_ledger_date) AS max_1 
FROM ledger
2025-02-23 13:44:58,641 - [cached since 731.3s ago] {}
2025-02-23 13:44:59,533 - ROLLBACK
2025-02-23 13:44:59,534 - GET http://127.0.0.1:8000/api/initialise - 1.50 ms
2025-02-23 13:45:14,539 - ROLLBACK
2025-02-23 13:45:14,540 - GET http://127.0.0.1:8000/api/top-roi/ - 19.22 ms
2025-02-23 13:45:14,548 - BEGIN (implicit)
2025-02-23 13:45:14,549 - SELECT department.department_name AS department_department_name, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s) THEN ledger.amount ELSE %(param_1)s END) - sum(CASE WHEN (ledger.ledger_description = %(ledger_description_2)s) THEN ledger.amount ELSE %(param_2)s END) AS roi 
FROM ledger INNER JOIN department ON ledger.department_id = department.department_id GROUP BY department.department_name ORDER BY sum(ledger.amount) DESC 
 LIMIT %(param_3)s
2025-02-23 13:45:14,549 - [cached since 748.3s ago] {'ledger_description_1': 'Revenues', 'param_1': 0, 'ledger_description_2': 'Expenses', 'param_2': 0, 'param_3': 5}
2025-02-23 13:45:38,629 - GET http://127.0.0.1:8000/api/initialise/ - 0.00 ms
2025-02-23 13:45:38,649 - BEGIN (implicit)
2025-02-23 13:45:38,650 - SELECT department.department_id AS department_department_id, department.department_name AS department_department_name 
FROM department
2025-02-23 13:45:38,651 - [cached since 771.8s ago] {}
2025-02-23 13:45:38,654 - SELECT min(ledger.general_ledger_date) AS min_1 
FROM ledger
2025-02-23 13:45:38,655 - [cached since 771.8s ago] {}
2025-02-23 13:45:39,235 - SELECT max(ledger.general_ledger_date) AS max_1 
FROM ledger
2025-02-23 13:45:39,236 - [cached since 771.9s ago] {}
2025-02-23 13:45:40,283 - ROLLBACK
2025-02-23 13:45:40,284 - GET http://127.0.0.1:8000/api/initialise - 1.64 ms
2025-02-23 13:45:43,833 - ROLLBACK
2025-02-23 13:45:43,835 - GET http://127.0.0.1:8000/api/top-roi/ - 29.29 ms
2025-02-23 13:45:56,291 - GET http://127.0.0.1:8000/api/initialise/ - 0.00 ms
2025-02-23 13:45:56,434 - BEGIN (implicit)
2025-02-23 13:45:56,435 - SELECT department.department_name AS department_department_name, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s) THEN ledger.amount ELSE %(param_1)s END) - sum(CASE WHEN (ledger.ledger_description = %(ledger_description_2)s) THEN ledger.amount ELSE %(param_2)s END) AS roi 
FROM ledger INNER JOIN department ON ledger.department_id = department.department_id GROUP BY department.department_name ORDER BY sum(ledger.amount) DESC 
 LIMIT %(param_3)s
2025-02-23 13:45:56,436 - [cached since 790.2s ago] {'ledger_description_1': 'Revenues', 'param_1': 0, 'ledger_description_2': 'Expenses', 'param_2': 0, 'param_3': 5}
2025-02-23 13:45:56,444 - GET http://127.0.0.1:8000/api/initialise/ - 0.00 ms
2025-02-23 13:45:57,844 - BEGIN (implicit)
2025-02-23 13:45:57,845 - SELECT department.department_id AS department_department_id, department.department_name AS department_department_name 
FROM department
2025-02-23 13:45:57,845 - [cached since 791s ago] {}
2025-02-23 13:45:57,847 - SELECT min(ledger.general_ledger_date) AS min_1 
FROM ledger
2025-02-23 13:45:57,848 - [cached since 791s ago] {}
2025-02-23 13:45:58,448 - SELECT max(ledger.general_ledger_date) AS max_1 
FROM ledger
2025-02-23 13:45:58,448 - [cached since 791.1s ago] {}
2025-02-23 13:45:59,022 - ROLLBACK
2025-02-23 13:45:59,023 - GET http://127.0.0.1:8000/api/initialise - 1.18 ms
2025-02-23 13:45:59,028 - BEGIN (implicit)
2025-02-23 13:45:59,028 - SELECT department.department_id AS department_department_id, department.department_name AS department_department_name 
FROM department
2025-02-23 13:45:59,028 - [cached since 792.2s ago] {}
2025-02-23 13:45:59,032 - SELECT min(ledger.general_ledger_date) AS min_1 
FROM ledger
2025-02-23 13:45:59,032 - [cached since 792.2s ago] {}
2025-02-23 13:45:59,585 - SELECT max(ledger.general_ledger_date) AS max_1 
FROM ledger
2025-02-23 13:45:59,585 - [cached since 792.3s ago] {}
2025-02-23 13:46:00,084 - ROLLBACK
2025-02-23 13:46:00,086 - GET http://127.0.0.1:8000/api/initialise - 1.06 ms
2025-02-23 13:46:12,412 - ROLLBACK
2025-02-23 13:46:12,413 - GET http://127.0.0.1:8000/api/top-roi/ - 15.98 ms
2025-02-23 13:46:12,418 - BEGIN (implicit)
2025-02-23 13:46:12,418 - SELECT department.department_name AS department_department_name, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s) THEN ledger.amount ELSE %(param_1)s END) - sum(CASE WHEN (ledger.ledger_description = %(ledger_description_2)s) THEN ledger.amount ELSE %(param_2)s END) AS roi 
FROM ledger INNER JOIN department ON ledger.department_id = department.department_id GROUP BY department.department_name ORDER BY sum(ledger.amount) DESC 
 LIMIT %(param_3)s
2025-02-23 13:46:12,419 - [cached since 806.2s ago] {'ledger_description_1': 'Revenues', 'param_1': 0, 'ledger_description_2': 'Expenses', 'param_2': 0, 'param_3': 5}
2025-02-23 13:46:18,934 - BEGIN (implicit)
2025-02-23 13:46:18,935 - SELECT cost_center.cost_center_description AS cost_center_cost_center_description, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s) THEN ledger.amount ELSE %(param_1)s END) - sum(CASE WHEN (ledger.ledger_description = %(ledger_description_2)s) THEN ledger.amount ELSE %(param_2)s END) AS roi 
FROM ledger INNER JOIN cost_center ON ledger.cost_center_id = cost_center.cost_center_id 
WHERE ledger.department_id = %(department_id_1)s GROUP BY cost_center.cost_center_description ORDER BY sum(ledger.amount) DESC 
 LIMIT %(param_3)s
2025-02-23 13:46:18,936 - [cached since 712.7s ago] {'ledger_description_1': 'Revenues', 'param_1': 0, 'ledger_description_2': 'Expenses', 'param_2': 0, 'department_id_1': 102, 'param_3': 5}
2025-02-23 13:46:19,980 - ROLLBACK
2025-02-23 13:46:19,981 - GET http://127.0.0.1:8000/api/top-roi/?department=102 - 1.05 ms
2025-02-23 13:46:30,163 - ROLLBACK
2025-02-23 13:46:30,164 - GET http://127.0.0.1:8000/api/top-roi/ - 17.75 ms
2025-02-23 13:46:34,791 - BEGIN (implicit)
2025-02-23 13:46:34,794 - SELECT cost_center.cost_center_description AS cost_center_cost_center_description, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s) THEN ledger.amount ELSE %(param_1)s END) - sum(CASE WHEN (ledger.ledger_description = %(ledger_description_2)s) THEN ledger.amount ELSE %(param_2)s END) AS roi 
FROM ledger INNER JOIN cost_center ON ledger.cost_center_id = cost_center.cost_center_id 
WHERE ledger.department_id = %(department_id_1)s AND ledger.general_ledger_date >= %(general_ledger_date_1)s GROUP BY cost_center.cost_center_description ORDER BY sum(ledger.amount) DESC 
 LIMIT %(param_3)s
2025-02-23 13:46:34,794 - [generated in 0.00065s] {'ledger_description_1': 'Revenues', 'param_1': 0, 'ledger_description_2': 'Expenses', 'param_2': 0, 'department_id_1': 102, 'general_ledger_date_1': '2016-02-16', 'param_3': 5}
2025-02-23 13:46:35,313 - ROLLBACK
2025-02-23 13:46:35,314 - GET http://127.0.0.1:8000/api/top-roi/?department=102&start_date=2016-02-16 - 0.53 ms
2025-02-23 13:46:50,714 - BEGIN (implicit)
2025-02-23 13:46:50,715 - SELECT cost_center.cost_center_description AS cost_center_cost_center_description, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s) THEN ledger.amount ELSE %(param_1)s END) - sum(CASE WHEN (ledger.ledger_description = %(ledger_description_2)s) THEN ledger.amount ELSE %(param_2)s END) AS roi 
FROM ledger INNER JOIN cost_center ON ledger.cost_center_id = cost_center.cost_center_id 
WHERE ledger.department_id = %(department_id_1)s AND ledger.general_ledger_date >= %(general_ledger_date_1)s GROUP BY cost_center.cost_center_description ORDER BY sum(ledger.amount) DESC 
 LIMIT %(param_3)s
2025-02-23 13:46:50,715 - [cached since 15.92s ago] {'ledger_description_1': 'Revenues', 'param_1': 0, 'ledger_description_2': 'Expenses', 'param_2': 0, 'department_id_1': 103, 'general_ledger_date_1': '2016-02-24', 'param_3': 5}
2025-02-23 13:46:51,302 - ROLLBACK
2025-02-23 13:46:51,303 - GET http://127.0.0.1:8000/api/top-roi/?department=103&start_date=2016-02-24 - 0.59 ms
2025-02-23 13:46:58,441 - BEGIN (implicit)
2025-02-23 13:46:58,441 - SELECT cost_center.cost_center_description AS cost_center_cost_center_description, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s) THEN ledger.amount ELSE %(param_1)s END) - sum(CASE WHEN (ledger.ledger_description = %(ledger_description_2)s) THEN ledger.amount ELSE %(param_2)s END) AS roi 
FROM ledger INNER JOIN cost_center ON ledger.cost_center_id = cost_center.cost_center_id 
WHERE ledger.department_id = %(department_id_1)s GROUP BY cost_center.cost_center_description ORDER BY sum(ledger.amount) DESC 
 LIMIT %(param_3)s
2025-02-23 13:46:58,442 - [cached since 752.2s ago] {'ledger_description_1': 'Revenues', 'param_1': 0, 'ledger_description_2': 'Expenses', 'param_2': 0, 'department_id_1': 103, 'param_3': 5}
2025-02-23 13:46:58,975 - ROLLBACK
2025-02-23 13:46:58,977 - GET http://127.0.0.1:8000/api/top-roi/?department=103 - 0.54 ms
2025-02-23 14:24:51,452 - BEGIN (implicit)
2025-02-23 14:24:51,454 - SELECT cost_center.cost_center_description AS cost_center_cost_center_description, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s) THEN ledger.amount ELSE %(param_1)s END) - sum(CASE WHEN (ledger.ledger_description = %(ledger_description_2)s) THEN ledger.amount ELSE %(param_2)s END) AS roi 
FROM ledger INNER JOIN cost_center ON ledger.cost_center_id = cost_center.cost_center_id 
WHERE ledger.department_id = %(department_id_1)s GROUP BY cost_center.cost_center_description ORDER BY sum(ledger.amount) DESC 
 LIMIT %(param_3)s
2025-02-23 14:24:51,454 - [cached since 3025s ago] {'ledger_description_1': 'Revenues', 'param_1': 0, 'ledger_description_2': 'Expenses', 'param_2': 0, 'department_id_1': 102, 'param_3': 5}
2025-02-23 14:24:52,114 - ROLLBACK
2025-02-23 14:24:52,116 - GET http://127.0.0.1:8000/api/top-roi/?department=102 - 0.67 ms
2025-02-23 14:24:55,518 - BEGIN (implicit)
2025-02-23 14:24:55,520 - SELECT cost_center.cost_center_description AS cost_center_cost_center_description, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s) THEN ledger.amount ELSE %(param_1)s END) - sum(CASE WHEN (ledger.ledger_description = %(ledger_description_2)s) THEN ledger.amount ELSE %(param_2)s END) AS roi 
FROM ledger INNER JOIN cost_center ON ledger.cost_center_id = cost_center.cost_center_id 
WHERE ledger.department_id = %(department_id_1)s GROUP BY cost_center.cost_center_description ORDER BY sum(ledger.amount) DESC 
 LIMIT %(param_3)s
2025-02-23 14:24:55,521 - [cached since 3029s ago] {'ledger_description_1': 'Revenues', 'param_1': 0, 'ledger_description_2': 'Expenses', 'param_2': 0, 'department_id_1': 101, 'param_3': 5}
2025-02-23 14:24:56,022 - ROLLBACK
2025-02-23 14:24:56,024 - GET http://127.0.0.1:8000/api/top-roi/?department=101 - 0.51 ms
2025-02-23 14:25:00,502 - BEGIN (implicit)
2025-02-23 14:25:00,503 - SELECT cost_center.cost_center_description AS cost_center_cost_center_description, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s) THEN ledger.amount ELSE %(param_1)s END) - sum(CASE WHEN (ledger.ledger_description = %(ledger_description_2)s) THEN ledger.amount ELSE %(param_2)s END) AS roi 
FROM ledger INNER JOIN cost_center ON ledger.cost_center_id = cost_center.cost_center_id 
WHERE ledger.department_id = %(department_id_1)s GROUP BY cost_center.cost_center_description ORDER BY sum(ledger.amount) DESC 
 LIMIT %(param_3)s
2025-02-23 14:25:00,504 - [cached since 3034s ago] {'ledger_description_1': 'Revenues', 'param_1': 0, 'ledger_description_2': 'Expenses', 'param_2': 0, 'department_id_1': 108, 'param_3': 5}
2025-02-23 14:25:01,064 - ROLLBACK
2025-02-23 14:25:01,066 - GET http://127.0.0.1:8000/api/top-roi/?department=108 - 0.57 ms
2025-02-23 14:25:19,917 - BEGIN (implicit)
2025-02-23 14:25:19,919 - SELECT cost_center.cost_center_description AS cost_center_cost_center_description, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s) THEN ledger.amount ELSE %(param_1)s END) - sum(CASE WHEN (ledger.ledger_description = %(ledger_description_2)s) THEN ledger.amount ELSE %(param_2)s END) AS roi 
FROM ledger INNER JOIN cost_center ON ledger.cost_center_id = cost_center.cost_center_id 
WHERE ledger.department_id = %(department_id_1)s GROUP BY cost_center.cost_center_description ORDER BY sum(ledger.amount) DESC 
 LIMIT %(param_3)s
2025-02-23 14:25:19,919 - [cached since 3054s ago] {'ledger_description_1': 'Revenues', 'param_1': 0, 'ledger_description_2': 'Expenses', 'param_2': 0, 'department_id_1': 109, 'param_3': 5}
2025-02-23 14:25:20,998 - ROLLBACK
2025-02-23 14:25:21,000 - GET http://127.0.0.1:8000/api/top-roi/?department=109 - 1.08 ms
2025-02-23 14:29:12,936 - BEGIN (implicit)
2025-02-23 14:29:12,949 - SELECT fund.fund_description AS fund_fund_description, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s) THEN ledger.amount ELSE %(param_1)s END) AS total_revenue, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_2)s) THEN ledger.amount ELSE %(param_2)s END) AS total_expenses, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s) THEN ledger.amount ELSE %(param_1)s END) / nullif(sum(CASE WHEN (ledger.ledger_description = %(ledger_description_2)s) THEN ledger.amount ELSE %(param_2)s END), %(nullif_1)s) AS ratio, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s) THEN ledger.amount ELSE %(param_1)s END) - sum(CASE WHEN (ledger.ledger_description = %(ledger_description_2)s) THEN ledger.amount ELSE %(param_2)s END) AS roi 
FROM ledger INNER JOIN fund ON ledger.fund_id = fund.fund_id GROUP BY fund.fund_description ORDER BY roi DESC
2025-02-23 14:29:12,950 - [generated in 0.00135s] {'ledger_description_1': 'Revenues', 'param_1': 0, 'ledger_description_2': 'Expenses', 'param_2': 0, 'nullif_1': 0}
2025-02-23 14:29:28,169 - ROLLBACK
2025-02-23 14:29:28,172 - GET http://127.0.0.1:8000/api/fund-table/?sort_by=roi&order=desc - 15.24 ms
2025-02-23 14:30:59,701 - BEGIN (implicit)
2025-02-23 14:30:59,704 - SELECT year(ledger.general_ledger_date) AS time, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s) THEN ledger.amount ELSE %(param_1)s END) - sum(CASE WHEN (ledger.ledger_description = %(ledger_description_2)s) THEN ledger.amount ELSE %(param_2)s END) AS net_profit 
FROM ledger GROUP BY year(ledger.general_ledger_date) ORDER BY year(ledger.general_ledger_date)
2025-02-23 14:30:59,705 - [generated in 0.00112s] {'ledger_description_1': 'Revenues', 'param_1': 0, 'ledger_description_2': 'Expenses', 'param_2': 0}
2025-02-23 14:31:01,083 - ROLLBACK
2025-02-23 14:31:01,085 - GET http://127.0.0.1:8000/api/net-profit/?time_unit=year - 1.39 ms
2025-02-23 14:31:19,215 - BEGIN (implicit)
2025-02-23 14:31:19,218 - SELECT month(ledger.general_ledger_date) AS time, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s) THEN ledger.amount ELSE %(param_1)s END) - sum(CASE WHEN (ledger.ledger_description = %(ledger_description_2)s) THEN ledger.amount ELSE %(param_2)s END) AS net_profit 
FROM ledger GROUP BY month(ledger.general_ledger_date) ORDER BY month(ledger.general_ledger_date)
2025-02-23 14:31:19,218 - [generated in 0.00077s] {'ledger_description_1': 'Revenues', 'param_1': 0, 'ledger_description_2': 'Expenses', 'param_2': 0}
2025-02-23 14:31:20,253 - ROLLBACK
2025-02-23 14:31:20,254 - GET http://127.0.0.1:8000/api/net-profit/?time_unit=month - 1.04 ms
2025-02-23 14:43:21,029 - BEGIN (implicit)
2025-02-23 14:43:21,030 - SELECT cost_center.cost_center_description AS cost_center_cost_center_description, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s) THEN ledger.amount ELSE %(param_1)s END) - sum(CASE WHEN (ledger.ledger_description = %(ledger_description_2)s) THEN ledger.amount ELSE %(param_2)s END) AS roi 
FROM ledger INNER JOIN cost_center ON ledger.cost_center_id = cost_center.cost_center_id 
WHERE ledger.department_id = %(department_id_1)s GROUP BY cost_center.cost_center_description ORDER BY sum(ledger.amount) DESC 
 LIMIT %(param_3)s
2025-02-23 14:43:21,030 - [cached since 4135s ago] {'ledger_description_1': 'Revenues', 'param_1': 0, 'ledger_description_2': 'Expenses', 'param_2': 0, 'department_id_1': 106, 'param_3': 5}
2025-02-23 14:43:21,406 - ROLLBACK
2025-02-23 14:43:21,408 - GET http://127.0.0.1:8000/api/top-roi/?department=106 - 0.38 ms
2025-02-23 14:43:25,862 - BEGIN (implicit)
2025-02-23 14:43:25,863 - SELECT cost_center.cost_center_description AS cost_center_cost_center_description, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s) THEN ledger.amount ELSE %(param_1)s END) - sum(CASE WHEN (ledger.ledger_description = %(ledger_description_2)s) THEN ledger.amount ELSE %(param_2)s END) AS roi 
FROM ledger INNER JOIN cost_center ON ledger.cost_center_id = cost_center.cost_center_id 
WHERE ledger.department_id = %(department_id_1)s GROUP BY cost_center.cost_center_description ORDER BY sum(ledger.amount) DESC 
 LIMIT %(param_3)s
2025-02-23 14:43:25,864 - [cached since 4140s ago] {'ledger_description_1': 'Revenues', 'param_1': 0, 'ledger_description_2': 'Expenses', 'param_2': 0, 'department_id_1': 112, 'param_3': 5}
2025-02-23 14:43:26,345 - ROLLBACK
2025-02-23 14:43:26,348 - GET http://127.0.0.1:8000/api/top-roi/?department=112 - 0.49 ms
2025-02-23 14:43:33,925 - GET http://127.0.0.1:8000/api/initialise/ - 0.00 ms
2025-02-23 14:43:34,161 - BEGIN (implicit)
2025-02-23 14:43:34,163 - SELECT department.department_name AS department_department_name, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s) THEN ledger.amount ELSE %(param_1)s END) - sum(CASE WHEN (ledger.ledger_description = %(ledger_description_2)s) THEN ledger.amount ELSE %(param_2)s END) AS roi 
FROM ledger INNER JOIN department ON ledger.department_id = department.department_id GROUP BY department.department_name ORDER BY sum(ledger.amount) DESC 
 LIMIT %(param_3)s
2025-02-23 14:43:34,164 - [cached since 4248s ago] {'ledger_description_1': 'Revenues', 'param_1': 0, 'ledger_description_2': 'Expenses', 'param_2': 0, 'param_3': 5}
2025-02-23 14:43:34,177 - GET http://127.0.0.1:8000/api/initialise/ - 0.00 ms
2025-02-23 14:43:35,310 - BEGIN (implicit)
2025-02-23 14:43:35,311 - SELECT department.department_id AS department_department_id, department.department_name AS department_department_name 
FROM department
2025-02-23 14:43:35,312 - [cached since 4248s ago] {}
2025-02-23 14:43:35,317 - SELECT min(ledger.general_ledger_date) AS min_1 
FROM ledger
2025-02-23 14:43:35,318 - [cached since 4248s ago] {}
2025-02-23 14:43:36,110 - SELECT max(ledger.general_ledger_date) AS max_1 
FROM ledger
2025-02-23 14:43:36,110 - [cached since 4249s ago] {}
2025-02-23 14:43:36,576 - ROLLBACK
2025-02-23 14:43:36,578 - GET http://127.0.0.1:8000/api/initialise - 1.28 ms
2025-02-23 14:43:36,585 - BEGIN (implicit)
2025-02-23 14:43:36,586 - SELECT department.department_id AS department_department_id, department.department_name AS department_department_name 
FROM department
2025-02-23 14:43:36,586 - [cached since 4250s ago] {}
2025-02-23 14:43:36,592 - SELECT min(ledger.general_ledger_date) AS min_1 
FROM ledger
2025-02-23 14:43:36,593 - [cached since 4250s ago] {}
2025-02-23 14:43:37,153 - SELECT max(ledger.general_ledger_date) AS max_1 
FROM ledger
2025-02-23 14:43:37,155 - [cached since 4250s ago] {}
2025-02-23 14:43:37,686 - ROLLBACK
2025-02-23 14:43:37,688 - GET http://127.0.0.1:8000/api/initialise - 1.11 ms
2025-02-23 14:43:54,370 - BEGIN (implicit)
2025-02-23 14:43:54,371 - SELECT department.department_name AS department_department_name, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s) THEN ledger.amount ELSE %(param_1)s END) - sum(CASE WHEN (ledger.ledger_description = %(ledger_description_2)s) THEN ledger.amount ELSE %(param_2)s END) AS roi 
FROM ledger INNER JOIN department ON ledger.department_id = department.department_id GROUP BY department.department_name ORDER BY sum(ledger.amount) DESC 
 LIMIT %(param_3)s
2025-02-23 14:43:54,372 - [cached since 4268s ago] {'ledger_description_1': 'Revenues', 'param_1': 0, 'ledger_description_2': 'Expenses', 'param_2': 0, 'param_3': 5}
2025-02-23 14:44:03,209 - ROLLBACK
2025-02-23 14:44:03,210 - GET http://127.0.0.1:8000/api/top-roi/ - 29.05 ms
2025-02-23 14:44:20,168 - ROLLBACK
2025-02-23 14:44:20,169 - GET http://127.0.0.1:8000/api/top-roi/ - 25.80 ms
2025-02-23 14:47:54,163 - BEGIN (implicit)
2025-02-23 14:47:54,167 - SELECT department.department_name AS department_department_name, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount ELSE %(param_1)s END + CASE WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_2)s END) AS total_expenditure 
FROM ledger INNER JOIN department ON ledger.department_id = department.department_id GROUP BY department.department_name ORDER BY sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount ELSE %(param_1)s END + CASE WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_2)s END) DESC 
 LIMIT %(param_3)s
2025-02-23 14:47:54,167 - [generated in 0.00094s] {'ledger_description_1': 'Expenses', 'amount_1': 0, 'param_1': 0, 'ledger_description_2': 'Revenues', 'amount_2': 0, 'param_2': 0, 'param_3': 10}
2025-02-23 14:48:14,036 - ROLLBACK
2025-02-23 14:48:14,037 - GET http://127.0.0.1:8000/api/top-budget/ - 19.88 ms
2025-02-23 14:48:35,757 - BEGIN (implicit)
2025-02-23 14:48:35,761 - SELECT department.department_name AS department_department_name, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount ELSE %(param_1)s END + CASE WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_2)s END) AS total_expenditure 
FROM ledger INNER JOIN department ON ledger.department_id = department.department_id 
WHERE ledger.department_id = %(department_id_1)s GROUP BY department.department_name ORDER BY sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount ELSE %(param_1)s END + CASE WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_2)s END) DESC 
 LIMIT %(param_3)s
2025-02-23 14:48:35,763 - [generated in 0.00118s] {'ledger_description_1': 'Expenses', 'amount_1': 0, 'param_1': 0, 'ledger_description_2': 'Revenues', 'amount_2': 0, 'param_2': 0, 'department_id_1': 108, 'param_3': 10}
2025-02-23 14:48:36,249 - ROLLBACK
2025-02-23 14:48:36,250 - GET http://127.0.0.1:8000/api/top-budget/?department=108 - 0.50 ms
2025-02-23 14:48:41,975 - BEGIN (implicit)
2025-02-23 14:48:41,976 - SELECT department.department_name AS department_department_name, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount ELSE %(param_1)s END + CASE WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_2)s END) AS total_expenditure 
FROM ledger INNER JOIN department ON ledger.department_id = department.department_id 
WHERE ledger.department_id = %(department_id_1)s GROUP BY department.department_name ORDER BY sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount ELSE %(param_1)s END + CASE WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_2)s END) DESC 
 LIMIT %(param_3)s
2025-02-23 14:48:41,977 - [cached since 6.216s ago] {'ledger_description_1': 'Expenses', 'amount_1': 0, 'param_1': 0, 'ledger_description_2': 'Revenues', 'amount_2': 0, 'param_2': 0, 'department_id_1': 108, 'param_3': 10}
2025-02-23 14:48:42,308 - ROLLBACK
2025-02-23 14:48:42,309 - GET http://127.0.0.1:8000/api/top-budget/?department=108 - 0.34 ms
2025-02-23 14:50:14,715 - BEGIN (implicit)
2025-02-23 14:50:14,718 - SELECT year(ledger.general_ledger_date) AS year, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s) THEN ledger.amount ELSE %(param_1)s END) AS total_revenue, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_2)s) THEN ledger.amount ELSE %(param_2)s END) AS total_expenses 
FROM ledger 
WHERE true = 1 GROUP BY year(ledger.general_ledger_date) ORDER BY year(ledger.general_ledger_date)
2025-02-23 14:50:14,719 - [generated in 0.00081s] {'ledger_description_1': 'Revenues', 'param_1': 0, 'ledger_description_2': 'Expenses', 'param_2': 0}
2025-02-23 14:50:15,526 - ROLLBACK
2025-02-23 14:50:15,527 - GET http://127.0.0.1:8000/api/revenue-expenses/ - 0.82 ms
2025-02-23 14:59:45,666 - GET http://127.0.0.1:8000/api/initialise/ - 0.00 ms
2025-02-23 14:59:45,935 - BEGIN (implicit)
2025-02-23 14:59:45,935 - SELECT department.department_name AS department_department_name, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s) THEN ledger.amount ELSE %(param_1)s END) - sum(CASE WHEN (ledger.ledger_description = %(ledger_description_2)s) THEN ledger.amount ELSE %(param_2)s END) AS roi 
FROM ledger INNER JOIN department ON ledger.department_id = department.department_id GROUP BY department.department_name ORDER BY sum(ledger.amount) DESC 
 LIMIT %(param_3)s
2025-02-23 14:59:45,935 - [cached since 5220s ago] {'ledger_description_1': 'Revenues', 'param_1': 0, 'ledger_description_2': 'Expenses', 'param_2': 0, 'param_3': 5}
2025-02-23 14:59:45,975 - BEGIN (implicit)
2025-02-23 14:59:45,976 - SELECT department.department_id AS department_department_id, department.department_name AS department_department_name 
FROM department
2025-02-23 14:59:45,976 - [cached since 5219s ago] {}
2025-02-23 14:59:45,978 - SELECT min(ledger.general_ledger_date) AS min_1 
FROM ledger
2025-02-23 14:59:45,978 - [cached since 5219s ago] {}
2025-02-23 14:59:46,347 - SELECT max(ledger.general_ledger_date) AS max_1 
FROM ledger
2025-02-23 14:59:46,348 - [cached since 5219s ago] {}
2025-02-23 14:59:46,674 - ROLLBACK
2025-02-23 14:59:46,675 - GET http://127.0.0.1:8000/api/initialise - 0.70 ms
2025-02-23 15:00:03,852 - ROLLBACK
2025-02-23 15:00:03,854 - GET http://127.0.0.1:8000/api/top-roi/ - 17.92 ms
2025-02-23 15:07:43,754 - GET http://127.0.0.1:8000/api/initialise/ - 0.00 ms
2025-02-23 15:07:44,141 - BEGIN (implicit)
2025-02-23 15:07:44,142 - SELECT department.department_name AS department_department_name, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s) THEN ledger.amount ELSE %(param_1)s END) - sum(CASE WHEN (ledger.ledger_description = %(ledger_description_2)s) THEN ledger.amount ELSE %(param_2)s END) AS roi 
FROM ledger INNER JOIN department ON ledger.department_id = department.department_id GROUP BY department.department_name ORDER BY sum(ledger.amount) DESC 
 LIMIT %(param_3)s
2025-02-23 15:07:44,143 - [cached since 5698s ago] {'ledger_description_1': 'Revenues', 'param_1': 0, 'ledger_description_2': 'Expenses', 'param_2': 0, 'param_3': 5}
2025-02-23 15:07:44,213 - BEGIN (implicit)
2025-02-23 15:07:44,214 - SELECT department.department_id AS department_department_id, department.department_name AS department_department_name 
FROM department
2025-02-23 15:07:44,215 - [cached since 5697s ago] {}
2025-02-23 15:07:44,217 - SELECT min(ledger.general_ledger_date) AS min_1 
FROM ledger
2025-02-23 15:07:44,218 - [cached since 5697s ago] {}
2025-02-23 15:07:44,819 - SELECT max(ledger.general_ledger_date) AS max_1 
FROM ledger
2025-02-23 15:07:44,821 - [cached since 5697s ago] {}
2025-02-23 15:07:45,172 - ROLLBACK
2025-02-23 15:07:45,173 - GET http://127.0.0.1:8000/api/initialise - 0.96 ms
2025-02-23 15:08:08,853 - ROLLBACK
2025-02-23 15:08:08,854 - GET http://127.0.0.1:8000/api/top-roi/ - 24.71 ms
2025-02-23 15:08:08,868 - BEGIN (implicit)
2025-02-23 15:08:08,869 - SELECT department.department_name AS department_department_name, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount ELSE %(param_1)s END + CASE WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_2)s END) AS total_expenditure 
FROM ledger INNER JOIN department ON ledger.department_id = department.department_id GROUP BY department.department_name ORDER BY sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount ELSE %(param_1)s END + CASE WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_2)s END) DESC 
 LIMIT %(param_3)s
2025-02-23 15:08:08,870 - BEGIN (implicit)
2025-02-23 15:08:08,871 - [cached since 1215s ago] {'ledger_description_1': 'Expenses', 'amount_1': 0, 'param_1': 0, 'ledger_description_2': 'Revenues', 'amount_2': 0, 'param_2': 0, 'param_3': 10}
2025-02-23 15:08:08,871 - SELECT department.department_name AS department_department_name, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s) THEN ledger.amount ELSE %(param_1)s END) - sum(CASE WHEN (ledger.ledger_description = %(ledger_description_2)s) THEN ledger.amount ELSE %(param_2)s END) AS roi 
FROM ledger INNER JOIN department ON ledger.department_id = department.department_id GROUP BY department.department_name ORDER BY sum(ledger.amount) DESC 
 LIMIT %(param_3)s
2025-02-23 15:08:08,872 - [cached since 5723s ago] {'ledger_description_1': 'Revenues', 'param_1': 0, 'ledger_description_2': 'Expenses', 'param_2': 0, 'param_3': 5}
2025-02-23 15:08:37,132 - ROLLBACK
2025-02-23 15:08:37,134 - ROLLBACK
2025-02-23 15:08:37,136 - GET http://127.0.0.1:8000/api/top-roi/ - 28.27 ms
2025-02-23 15:08:37,137 - GET http://127.0.0.1:8000/api/top-budget/ - 28.27 ms
2025-02-23 15:13:23,495 - GET http://127.0.0.1:8000/api/initialise/ - 0.00 ms
2025-02-23 15:13:23,628 - BEGIN (implicit)
2025-02-23 15:13:23,629 - SELECT department.department_name AS department_department_name, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s) THEN ledger.amount ELSE %(param_1)s END) - sum(CASE WHEN (ledger.ledger_description = %(ledger_description_2)s) THEN ledger.amount ELSE %(param_2)s END) AS roi 
FROM ledger INNER JOIN department ON ledger.department_id = department.department_id GROUP BY department.department_name ORDER BY sum(ledger.amount) DESC 
 LIMIT %(param_3)s
2025-02-23 15:13:23,629 - [cached since 6037s ago] {'ledger_description_1': 'Revenues', 'param_1': 0, 'ledger_description_2': 'Expenses', 'param_2': 0, 'param_3': 5}
2025-02-23 15:13:23,634 - GET http://127.0.0.1:8000/api/initialise/ - 0.00 ms
2025-02-23 15:13:24,847 - BEGIN (implicit)
2025-02-23 15:13:24,848 - SELECT department.department_id AS department_department_id, department.department_name AS department_department_name 
FROM department
2025-02-23 15:13:24,849 - [cached since 6038s ago] {}
2025-02-23 15:13:24,852 - SELECT min(ledger.general_ledger_date) AS min_1 
FROM ledger
2025-02-23 15:13:24,853 - [cached since 6038s ago] {}
2025-02-23 15:13:25,429 - SELECT max(ledger.general_ledger_date) AS max_1 
FROM ledger
2025-02-23 15:13:25,430 - [cached since 6038s ago] {}
2025-02-23 15:13:25,762 - ROLLBACK
2025-02-23 15:13:25,763 - GET http://127.0.0.1:8000/api/initialise - 0.92 ms
2025-02-23 15:13:25,768 - BEGIN (implicit)
2025-02-23 15:13:25,768 - SELECT department.department_id AS department_department_id, department.department_name AS department_department_name 
FROM department
2025-02-23 15:13:25,769 - [cached since 6039s ago] {}
2025-02-23 15:13:25,771 - SELECT min(ledger.general_ledger_date) AS min_1 
FROM ledger
2025-02-23 15:13:25,772 - [cached since 6039s ago] {}
2025-02-23 15:13:26,249 - SELECT max(ledger.general_ledger_date) AS max_1 
FROM ledger
2025-02-23 15:13:26,249 - [cached since 6039s ago] {}
2025-02-23 15:13:26,683 - ROLLBACK
2025-02-23 15:13:26,684 - GET http://127.0.0.1:8000/api/initialise - 0.92 ms
2025-02-23 15:13:40,144 - ROLLBACK
2025-02-23 15:13:40,145 - GET http://127.0.0.1:8000/api/top-roi/ - 16.52 ms
2025-02-23 15:13:40,152 - BEGIN (implicit)
2025-02-23 15:13:40,153 - SELECT department.department_name AS department_department_name, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s) THEN ledger.amount ELSE %(param_1)s END) - sum(CASE WHEN (ledger.ledger_description = %(ledger_description_2)s) THEN ledger.amount ELSE %(param_2)s END) AS roi 
FROM ledger INNER JOIN department ON ledger.department_id = department.department_id GROUP BY department.department_name ORDER BY sum(ledger.amount) DESC 
 LIMIT %(param_3)s
2025-02-23 15:13:40,155 - [cached since 6054s ago] {'ledger_description_1': 'Revenues', 'param_1': 0, 'ledger_description_2': 'Expenses', 'param_2': 0, 'param_3': 5}
2025-02-23 15:13:40,157 - BEGIN (implicit)
2025-02-23 15:13:40,158 - SELECT department.department_name AS department_department_name, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount ELSE %(param_1)s END + CASE WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_2)s END) AS total_expenditure 
FROM ledger INNER JOIN department ON ledger.department_id = department.department_id GROUP BY department.department_name ORDER BY sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount ELSE %(param_1)s END + CASE WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_2)s END) DESC 
 LIMIT %(param_3)s
2025-02-23 15:13:40,159 - [cached since 1546s ago] {'ledger_description_1': 'Expenses', 'amount_1': 0, 'param_1': 0, 'ledger_description_2': 'Revenues', 'amount_2': 0, 'param_2': 0, 'param_3': 10}
2025-02-23 15:14:00,183 - BEGIN (implicit)
2025-02-23 15:14:00,184 - SELECT department.department_name AS department_department_name, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s) THEN ledger.amount ELSE %(param_1)s END) - sum(CASE WHEN (ledger.ledger_description = %(ledger_description_2)s) THEN ledger.amount ELSE %(param_2)s END) AS roi 
FROM ledger INNER JOIN department ON ledger.department_id = department.department_id GROUP BY department.department_name ORDER BY sum(ledger.amount) DESC 
 LIMIT %(param_3)s
2025-02-23 15:14:00,184 - [cached since 6074s ago] {'ledger_description_1': 'Revenues', 'param_1': 0, 'ledger_description_2': 'Expenses', 'param_2': 0, 'param_3': 5}
2025-02-23 15:14:03,896 - ROLLBACK
2025-02-23 15:14:03,896 - ROLLBACK
2025-02-23 15:14:03,898 - GET http://127.0.0.1:8000/api/top-budget/ - 23.74 ms
2025-02-23 15:14:03,899 - GET http://127.0.0.1:8000/api/top-roi/ - 23.75 ms
2025-02-23 15:14:03,906 - BEGIN (implicit)
2025-02-23 15:14:03,907 - BEGIN (implicit)
2025-02-23 15:14:03,908 - SELECT department.department_name AS department_department_name, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s) THEN ledger.amount ELSE %(param_1)s END) - sum(CASE WHEN (ledger.ledger_description = %(ledger_description_2)s) THEN ledger.amount ELSE %(param_2)s END) AS roi 
FROM ledger INNER JOIN department ON ledger.department_id = department.department_id GROUP BY department.department_name ORDER BY sum(ledger.amount) DESC 
 LIMIT %(param_3)s
2025-02-23 15:14:03,909 - SELECT department.department_name AS department_department_name, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount ELSE %(param_1)s END + CASE WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_2)s END) AS total_expenditure 
FROM ledger INNER JOIN department ON ledger.department_id = department.department_id GROUP BY department.department_name ORDER BY sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount ELSE %(param_1)s END + CASE WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_2)s END) DESC 
 LIMIT %(param_3)s
2025-02-23 15:14:03,910 - [cached since 6078s ago] {'ledger_description_1': 'Revenues', 'param_1': 0, 'ledger_description_2': 'Expenses', 'param_2': 0, 'param_3': 5}
2025-02-23 15:14:03,910 - [cached since 1570s ago] {'ledger_description_1': 'Expenses', 'amount_1': 0, 'param_1': 0, 'ledger_description_2': 'Revenues', 'amount_2': 0, 'param_2': 0, 'param_3': 10}
2025-02-23 15:14:36,250 - ROLLBACK
2025-02-23 15:14:36,252 - GET http://127.0.0.1:8000/api/top-roi/ - 36.09 ms
2025-02-23 15:14:37,565 - ROLLBACK
2025-02-23 15:14:37,565 - ROLLBACK
2025-02-23 15:14:37,566 - GET http://127.0.0.1:8000/api/top-roi/ - 33.66 ms
2025-02-23 15:14:37,569 - GET http://127.0.0.1:8000/api/top-budget/ - 33.66 ms
2025-02-23 15:16:33,570 - BEGIN (implicit)
2025-02-23 15:16:33,571 - SELECT cost_center.cost_center_description AS cost_center_cost_center_description, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s) THEN ledger.amount ELSE %(param_1)s END) - sum(CASE WHEN (ledger.ledger_description = %(ledger_description_2)s) THEN ledger.amount ELSE %(param_2)s END) AS roi 
FROM ledger INNER JOIN cost_center ON ledger.cost_center_id = cost_center.cost_center_id 
WHERE ledger.department_id = %(department_id_1)s GROUP BY cost_center.cost_center_description ORDER BY sum(ledger.amount) DESC 
 LIMIT %(param_3)s
2025-02-23 15:16:33,572 - [cached since 6127s ago] {'ledger_description_1': 'Revenues', 'param_1': 0, 'ledger_description_2': 'Expenses', 'param_2': 0, 'department_id_1': 103, 'param_3': 5}
2025-02-23 15:16:34,260 - ROLLBACK
2025-02-23 15:16:34,261 - GET http://127.0.0.1:8000/api/top-roi/?department=103 - 0.69 ms
2025-02-23 15:16:34,271 - BEGIN (implicit)
2025-02-23 15:16:34,273 - BEGIN (implicit)
2025-02-23 15:16:34,274 - SELECT cost_center.cost_center_description AS cost_center_cost_center_description, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s) THEN ledger.amount ELSE %(param_1)s END) - sum(CASE WHEN (ledger.ledger_description = %(ledger_description_2)s) THEN ledger.amount ELSE %(param_2)s END) AS roi 
FROM ledger INNER JOIN cost_center ON ledger.cost_center_id = cost_center.cost_center_id 
WHERE ledger.department_id = %(department_id_1)s GROUP BY cost_center.cost_center_description ORDER BY sum(ledger.amount) DESC 
 LIMIT %(param_3)s
2025-02-23 15:16:34,275 - SELECT department.department_name AS department_department_name, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount ELSE %(param_1)s END + CASE WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_2)s END) AS total_expenditure 
FROM ledger INNER JOIN department ON ledger.department_id = department.department_id 
WHERE ledger.department_id = %(department_id_1)s GROUP BY department.department_name ORDER BY sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount ELSE %(param_1)s END + CASE WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_2)s END) DESC 
 LIMIT %(param_3)s
2025-02-23 15:16:34,275 - [cached since 6128s ago] {'ledger_description_1': 'Revenues', 'param_1': 0, 'ledger_description_2': 'Expenses', 'param_2': 0, 'department_id_1': 103, 'param_3': 5}
2025-02-23 15:16:34,276 - [cached since 1679s ago] {'ledger_description_1': 'Expenses', 'amount_1': 0, 'param_1': 0, 'ledger_description_2': 'Revenues', 'amount_2': 0, 'param_2': 0, 'department_id_1': 103, 'param_3': 10}
2025-02-23 15:16:35,007 - ROLLBACK
2025-02-23 15:16:35,008 - ROLLBACK
2025-02-23 15:16:35,009 - GET http://127.0.0.1:8000/api/top-budget/?department=103 - 0.74 ms
2025-02-23 15:16:35,010 - GET http://127.0.0.1:8000/api/top-roi/?department=103 - 0.74 ms
2025-02-23 15:20:46,384 - BEGIN (implicit)
2025-02-23 15:20:46,387 - SELECT cost_center.cost_center_description AS cost_center_cost_center_description, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s) THEN ledger.amount ELSE %(param_1)s END) - sum(CASE WHEN (ledger.ledger_description = %(ledger_description_2)s) THEN ledger.amount ELSE %(param_2)s END) AS roi 
FROM ledger INNER JOIN cost_center ON ledger.cost_center_id = cost_center.cost_center_id 
WHERE ledger.department_id = %(department_id_1)s GROUP BY cost_center.cost_center_description ORDER BY sum(ledger.amount) DESC 
 LIMIT %(param_3)s
2025-02-23 15:20:46,388 - [cached since 6380s ago] {'ledger_description_1': 'Revenues', 'param_1': 0, 'ledger_description_2': 'Expenses', 'param_2': 0, 'department_id_1': 101, 'param_3': 5}
2025-02-23 15:20:46,746 - ROLLBACK
2025-02-23 15:20:46,748 - GET http://127.0.0.1:8000/api/top-roi/?department=101 - 0.37 ms
2025-02-23 15:20:46,759 - BEGIN (implicit)
2025-02-23 15:20:46,761 - BEGIN (implicit)
2025-02-23 15:20:46,762 - SELECT cost_center.cost_center_description AS cost_center_cost_center_description, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s) THEN ledger.amount ELSE %(param_1)s END) - sum(CASE WHEN (ledger.ledger_description = %(ledger_description_2)s) THEN ledger.amount ELSE %(param_2)s END) AS roi 
FROM ledger INNER JOIN cost_center ON ledger.cost_center_id = cost_center.cost_center_id 
WHERE ledger.department_id = %(department_id_1)s GROUP BY cost_center.cost_center_description ORDER BY sum(ledger.amount) DESC 
 LIMIT %(param_3)s
2025-02-23 15:20:46,764 - SELECT department.department_name AS department_department_name, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount ELSE %(param_1)s END + CASE WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_2)s END) AS total_expenditure 
FROM ledger INNER JOIN department ON ledger.department_id = department.department_id 
WHERE ledger.department_id = %(department_id_1)s GROUP BY department.department_name ORDER BY sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount ELSE %(param_1)s END + CASE WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_2)s END) DESC 
 LIMIT %(param_3)s
2025-02-23 15:20:46,764 - [cached since 6381s ago] {'ledger_description_1': 'Revenues', 'param_1': 0, 'ledger_description_2': 'Expenses', 'param_2': 0, 'department_id_1': 101, 'param_3': 5}
2025-02-23 15:20:46,765 - [cached since 1931s ago] {'ledger_description_1': 'Expenses', 'amount_1': 0, 'param_1': 0, 'ledger_description_2': 'Revenues', 'amount_2': 0, 'param_2': 0, 'department_id_1': 101, 'param_3': 10}
2025-02-23 15:20:46,945 - ROLLBACK
2025-02-23 15:20:46,946 - ROLLBACK
2025-02-23 15:20:46,947 - GET http://127.0.0.1:8000/api/top-budget/?department=101 - 0.19 ms
2025-02-23 15:20:46,948 - GET http://127.0.0.1:8000/api/top-roi/?department=101 - 0.19 ms
2025-02-23 15:20:52,852 - BEGIN (implicit)
2025-02-23 15:20:52,855 - SELECT cost_center.cost_center_description AS cost_center_cost_center_description, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s) THEN ledger.amount ELSE %(param_1)s END) - sum(CASE WHEN (ledger.ledger_description = %(ledger_description_2)s) THEN ledger.amount ELSE %(param_2)s END) AS roi 
FROM ledger INNER JOIN cost_center ON ledger.cost_center_id = cost_center.cost_center_id 
WHERE ledger.department_id = %(department_id_1)s GROUP BY cost_center.cost_center_description ORDER BY sum(ledger.amount) DESC 
 LIMIT %(param_3)s
2025-02-23 15:20:52,856 - [cached since 6387s ago] {'ledger_description_1': 'Revenues', 'param_1': 0, 'ledger_description_2': 'Expenses', 'param_2': 0, 'department_id_1': 109, 'param_3': 5}
2025-02-23 15:20:53,451 - ROLLBACK
2025-02-23 15:20:53,453 - GET http://127.0.0.1:8000/api/top-roi/?department=109 - 0.60 ms
2025-02-23 15:20:53,461 - BEGIN (implicit)
2025-02-23 15:20:53,462 - SELECT cost_center.cost_center_description AS cost_center_cost_center_description, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s) THEN ledger.amount ELSE %(param_1)s END) - sum(CASE WHEN (ledger.ledger_description = %(ledger_description_2)s) THEN ledger.amount ELSE %(param_2)s END) AS roi 
FROM ledger INNER JOIN cost_center ON ledger.cost_center_id = cost_center.cost_center_id 
WHERE ledger.department_id = %(department_id_1)s GROUP BY cost_center.cost_center_description ORDER BY sum(ledger.amount) DESC 
 LIMIT %(param_3)s
2025-02-23 15:20:53,464 - BEGIN (implicit)
2025-02-23 15:20:53,464 - [cached since 6387s ago] {'ledger_description_1': 'Revenues', 'param_1': 0, 'ledger_description_2': 'Expenses', 'param_2': 0, 'department_id_1': 109, 'param_3': 5}
2025-02-23 15:20:53,465 - SELECT department.department_name AS department_department_name, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount ELSE %(param_1)s END + CASE WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_2)s END) AS total_expenditure 
FROM ledger INNER JOIN department ON ledger.department_id = department.department_id 
WHERE ledger.department_id = %(department_id_1)s GROUP BY department.department_name ORDER BY sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount ELSE %(param_1)s END + CASE WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_2)s END) DESC 
 LIMIT %(param_3)s
2025-02-23 15:20:53,465 - [cached since 1938s ago] {'ledger_description_1': 'Expenses', 'amount_1': 0, 'param_1': 0, 'ledger_description_2': 'Revenues', 'amount_2': 0, 'param_2': 0, 'department_id_1': 109, 'param_3': 10}
2025-02-23 15:20:54,154 - ROLLBACK
2025-02-23 15:20:54,156 - GET http://127.0.0.1:8000/api/top-budget/?department=109 - 0.70 ms
2025-02-23 15:20:54,277 - ROLLBACK
2025-02-23 15:20:54,278 - GET http://127.0.0.1:8000/api/top-roi/?department=109 - 0.82 ms
2025-02-23 15:23:01,688 - GET http://127.0.0.1:8000/api/initialise/ - 0.00 ms
2025-02-23 15:23:02,419 - BEGIN (implicit)
2025-02-23 15:23:02,423 - SELECT department.department_name AS department_department_name, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s) THEN ledger.amount ELSE %(param_1)s END) - sum(CASE WHEN (ledger.ledger_description = %(ledger_description_2)s) THEN ledger.amount ELSE %(param_2)s END) AS roi 
FROM ledger INNER JOIN department ON ledger.department_id = department.department_id GROUP BY department.department_name ORDER BY sum(ledger.amount) DESC 
 LIMIT %(param_3)s
2025-02-23 15:23:02,443 - [cached since 6616s ago] {'ledger_description_1': 'Revenues', 'param_1': 0, 'ledger_description_2': 'Expenses', 'param_2': 0, 'param_3': 5}
2025-02-23 15:23:02,465 - BEGIN (implicit)
2025-02-23 15:23:02,470 - SELECT department.department_name AS department_department_name, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount ELSE %(param_1)s END + CASE WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_2)s END) AS total_expenditure 
FROM ledger INNER JOIN department ON ledger.department_id = department.department_id GROUP BY department.department_name ORDER BY sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount ELSE %(param_1)s END + CASE WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_2)s END) DESC 
 LIMIT %(param_3)s
2025-02-23 15:23:02,544 - [cached since 2108s ago] {'ledger_description_1': 'Expenses', 'amount_1': 0, 'param_1': 0, 'ledger_description_2': 'Revenues', 'amount_2': 0, 'param_2': 0, 'param_3': 10}
2025-02-23 15:23:02,590 - BEGIN (implicit)
2025-02-23 15:23:02,598 - SELECT department.department_id AS department_department_id, department.department_name AS department_department_name 
FROM department
2025-02-23 15:23:02,602 - [cached since 6616s ago] {}
2025-02-23 15:23:02,610 - SELECT min(ledger.general_ledger_date) AS min_1 
FROM ledger
2025-02-23 15:23:02,611 - [cached since 6616s ago] {}
2025-02-23 15:23:03,595 - SELECT max(ledger.general_ledger_date) AS max_1 
FROM ledger
2025-02-23 15:23:03,595 - [cached since 6616s ago] {}
2025-02-23 15:23:04,344 - ROLLBACK
2025-02-23 15:23:04,345 - GET http://127.0.0.1:8000/api/initialise - 1.79 ms
2025-02-23 15:23:34,333 - ROLLBACK
2025-02-23 15:23:34,335 - ROLLBACK
2025-02-23 15:23:34,336 - GET http://127.0.0.1:8000/api/top-roi/ - 31.92 ms
2025-02-23 15:23:34,337 - GET http://127.0.0.1:8000/api/top-budget/ - 31.92 ms
2025-02-23 15:27:03,643 - GET http://127.0.0.1:8000/api/initialise/ - 0.00 ms
2025-02-23 15:27:03,790 - BEGIN (implicit)
2025-02-23 15:27:03,791 - SELECT department.department_name AS department_department_name, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s) THEN ledger.amount ELSE %(param_1)s END) - sum(CASE WHEN (ledger.ledger_description = %(ledger_description_2)s) THEN ledger.amount ELSE %(param_2)s END) AS roi 
FROM ledger INNER JOIN department ON ledger.department_id = department.department_id GROUP BY department.department_name ORDER BY sum(ledger.amount) DESC 
 LIMIT %(param_3)s
2025-02-23 15:27:03,792 - [cached since 6858s ago] {'ledger_description_1': 'Revenues', 'param_1': 0, 'ledger_description_2': 'Expenses', 'param_2': 0, 'param_3': 5}
2025-02-23 15:27:03,794 - BEGIN (implicit)
2025-02-23 15:27:03,795 - SELECT department.department_name AS department_department_name, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount ELSE %(param_1)s END + CASE WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_2)s END) AS total_expenditure 
FROM ledger INNER JOIN department ON ledger.department_id = department.department_id GROUP BY department.department_name ORDER BY sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount ELSE %(param_1)s END + CASE WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_2)s END) DESC 
 LIMIT %(param_3)s
2025-02-23 15:27:03,796 - [cached since 2350s ago] {'ledger_description_1': 'Expenses', 'amount_1': 0, 'param_1': 0, 'ledger_description_2': 'Revenues', 'amount_2': 0, 'param_2': 0, 'param_3': 10}
2025-02-23 15:27:03,798 - BEGIN (implicit)
2025-02-23 15:27:03,799 - SELECT year(ledger.general_ledger_date) AS year, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s) THEN ledger.amount ELSE %(param_1)s END) AS total_revenue, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_2)s) THEN ledger.amount ELSE %(param_2)s END) AS total_expenses 
FROM ledger 
WHERE true = 1 GROUP BY year(ledger.general_ledger_date) ORDER BY year(ledger.general_ledger_date)
2025-02-23 15:27:03,800 - [cached since 2209s ago] {'ledger_description_1': 'Revenues', 'param_1': 0, 'ledger_description_2': 'Expenses', 'param_2': 0}
2025-02-23 15:27:03,822 - BEGIN (implicit)
2025-02-23 15:27:03,823 - SELECT department.department_id AS department_department_id, department.department_name AS department_department_name 
FROM department
2025-02-23 15:27:03,824 - [cached since 6857s ago] {}
2025-02-23 15:27:03,827 - SELECT min(ledger.general_ledger_date) AS min_1 
FROM ledger
2025-02-23 15:27:03,828 - [cached since 6857s ago] {}
2025-02-23 15:27:04,248 - SELECT max(ledger.general_ledger_date) AS max_1 
FROM ledger
2025-02-23 15:27:04,249 - [cached since 6857s ago] {}
2025-02-23 15:27:04,867 - ROLLBACK
2025-02-23 15:27:04,869 - GET http://127.0.0.1:8000/api/initialise - 1.05 ms
2025-02-23 15:27:05,219 - ROLLBACK
2025-02-23 15:27:05,220 - GET http://127.0.0.1:8000/api/revenue-expenses/ - 1.43 ms
2025-02-23 15:27:29,153 - ROLLBACK
2025-02-23 15:27:29,155 - ROLLBACK
2025-02-23 15:27:29,156 - GET http://127.0.0.1:8000/api/top-roi/ - 25.37 ms
2025-02-23 15:27:29,157 - GET http://127.0.0.1:8000/api/top-budget/ - 25.37 ms
2025-02-23 15:28:31,960 - GET http://127.0.0.1:8000/api/initialise/ - 0.00 ms
2025-02-23 15:28:32,081 - BEGIN (implicit)
2025-02-23 15:28:32,083 - SELECT department.department_name AS department_department_name, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s) THEN ledger.amount ELSE %(param_1)s END) - sum(CASE WHEN (ledger.ledger_description = %(ledger_description_2)s) THEN ledger.amount ELSE %(param_2)s END) AS roi 
FROM ledger INNER JOIN department ON ledger.department_id = department.department_id GROUP BY department.department_name ORDER BY sum(ledger.amount) DESC 
 LIMIT %(param_3)s
2025-02-23 15:28:32,084 - [cached since 6946s ago] {'ledger_description_1': 'Revenues', 'param_1': 0, 'ledger_description_2': 'Expenses', 'param_2': 0, 'param_3': 5}
2025-02-23 15:28:32,089 - BEGIN (implicit)
2025-02-23 15:28:32,091 - SELECT department.department_name AS department_department_name, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount ELSE %(param_1)s END + CASE WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_2)s END) AS total_expenditure 
FROM ledger INNER JOIN department ON ledger.department_id = department.department_id GROUP BY department.department_name ORDER BY sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount ELSE %(param_1)s END + CASE WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_2)s END) DESC 
 LIMIT %(param_3)s
2025-02-23 15:28:32,092 - [cached since 2438s ago] {'ledger_description_1': 'Expenses', 'amount_1': 0, 'param_1': 0, 'ledger_description_2': 'Revenues', 'amount_2': 0, 'param_2': 0, 'param_3': 10}
2025-02-23 15:28:32,093 - BEGIN (implicit)
2025-02-23 15:28:32,096 - GET http://127.0.0.1:8000/api/initialise/ - 0.00 ms
2025-02-23 15:28:32,096 - SELECT year(ledger.general_ledger_date) AS year, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s) THEN ledger.amount ELSE %(param_1)s END) AS total_revenue, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_2)s) THEN ledger.amount ELSE %(param_2)s END) AS total_expenses 
FROM ledger 
WHERE true = 1 GROUP BY year(ledger.general_ledger_date) ORDER BY year(ledger.general_ledger_date)
2025-02-23 15:28:32,097 - [cached since 2297s ago] {'ledger_description_1': 'Revenues', 'param_1': 0, 'ledger_description_2': 'Expenses', 'param_2': 0}
2025-02-23 15:28:32,870 - BEGIN (implicit)
2025-02-23 15:28:32,871 - SELECT department.department_id AS department_department_id, department.department_name AS department_department_name 
FROM department
2025-02-23 15:28:32,872 - [cached since 6946s ago] {}
2025-02-23 15:28:32,878 - SELECT min(ledger.general_ledger_date) AS min_1 
FROM ledger
2025-02-23 15:28:32,878 - [cached since 6946s ago] {}
2025-02-23 15:28:33,611 - ROLLBACK
2025-02-23 15:28:33,613 - GET http://127.0.0.1:8000/api/revenue-expenses/ - 1.53 ms
2025-02-23 15:28:33,618 - BEGIN (implicit)
2025-02-23 15:28:33,619 - SELECT year(ledger.general_ledger_date) AS year, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s) THEN ledger.amount ELSE %(param_1)s END) AS total_revenue, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_2)s) THEN ledger.amount ELSE %(param_2)s END) AS total_expenses 
FROM ledger 
WHERE true = 1 GROUP BY year(ledger.general_ledger_date) ORDER BY year(ledger.general_ledger_date)
2025-02-23 15:28:33,619 - [cached since 2299s ago] {'ledger_description_1': 'Revenues', 'param_1': 0, 'ledger_description_2': 'Expenses', 'param_2': 0}
2025-02-23 15:28:33,645 - SELECT max(ledger.general_ledger_date) AS max_1 
FROM ledger
2025-02-23 15:28:33,645 - [cached since 6946s ago] {}
2025-02-23 15:28:34,209 - ROLLBACK
2025-02-23 15:28:34,211 - GET http://127.0.0.1:8000/api/initialise - 1.34 ms
2025-02-23 15:28:34,219 - BEGIN (implicit)
2025-02-23 15:28:34,220 - SELECT department.department_id AS department_department_id, department.department_name AS department_department_name 
FROM department
2025-02-23 15:28:34,220 - [cached since 6947s ago] {}
2025-02-23 15:28:34,222 - SELECT min(ledger.general_ledger_date) AS min_1 
FROM ledger
2025-02-23 15:28:34,222 - [cached since 6947s ago] {}
2025-02-23 15:28:34,649 - SELECT max(ledger.general_ledger_date) AS max_1 
FROM ledger
2025-02-23 15:28:34,649 - [cached since 6947s ago] {}
2025-02-23 15:28:34,812 - ROLLBACK
2025-02-23 15:28:34,814 - GET http://127.0.0.1:8000/api/revenue-expenses/ - 1.20 ms
2025-02-23 15:28:35,067 - ROLLBACK
2025-02-23 15:28:35,068 - GET http://127.0.0.1:8000/api/initialise - 0.85 ms
2025-02-23 15:28:52,207 - BEGIN (implicit)
2025-02-23 15:28:52,208 - BEGIN (implicit)
2025-02-23 15:28:52,208 - SELECT department.department_name AS department_department_name, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s) THEN ledger.amount ELSE %(param_1)s END) - sum(CASE WHEN (ledger.ledger_description = %(ledger_description_2)s) THEN ledger.amount ELSE %(param_2)s END) AS roi 
FROM ledger INNER JOIN department ON ledger.department_id = department.department_id GROUP BY department.department_name ORDER BY sum(ledger.amount) DESC 
 LIMIT %(param_3)s
2025-02-23 15:28:52,209 - SELECT department.department_name AS department_department_name, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount ELSE %(param_1)s END + CASE WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_2)s END) AS total_expenditure 
FROM ledger INNER JOIN department ON ledger.department_id = department.department_id GROUP BY department.department_name ORDER BY sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount ELSE %(param_1)s END + CASE WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_2)s END) DESC 
 LIMIT %(param_3)s
2025-02-23 15:28:52,209 - [cached since 6966s ago] {'ledger_description_1': 'Revenues', 'param_1': 0, 'ledger_description_2': 'Expenses', 'param_2': 0, 'param_3': 5}
2025-02-23 15:28:52,209 - [cached since 2458s ago] {'ledger_description_1': 'Expenses', 'amount_1': 0, 'param_1': 0, 'ledger_description_2': 'Revenues', 'amount_2': 0, 'param_2': 0, 'param_3': 10}
2025-02-23 15:28:59,166 - ROLLBACK
2025-02-23 15:28:59,166 - ROLLBACK
2025-02-23 15:28:59,168 - GET http://127.0.0.1:8000/api/top-roi/ - 27.09 ms
2025-02-23 15:28:59,170 - GET http://127.0.0.1:8000/api/top-budget/ - 27.09 ms
2025-02-23 15:29:21,207 - ROLLBACK
2025-02-23 15:29:21,207 - ROLLBACK
2025-02-23 15:29:21,208 - GET http://127.0.0.1:8000/api/top-roi/ - 29.01 ms
2025-02-23 15:29:21,209 - GET http://127.0.0.1:8000/api/top-budget/ - 29.00 ms
2025-02-23 15:38:25,568 - GET http://127.0.0.1:8000/api/initialise/ - 0.00 ms
2025-02-23 15:38:25,697 - BEGIN (implicit)
2025-02-23 15:38:25,698 - SELECT department.department_name AS department_department_name, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s) THEN ledger.amount ELSE %(param_1)s END) - sum(CASE WHEN (ledger.ledger_description = %(ledger_description_2)s) THEN ledger.amount ELSE %(param_2)s END) AS roi 
FROM ledger INNER JOIN department ON ledger.department_id = department.department_id GROUP BY department.department_name ORDER BY sum(ledger.amount) DESC 
 LIMIT %(param_3)s
2025-02-23 15:38:25,699 - [cached since 7539s ago] {'ledger_description_1': 'Revenues', 'param_1': 0, 'ledger_description_2': 'Expenses', 'param_2': 0, 'param_3': 5}
2025-02-23 15:38:25,703 - BEGIN (implicit)
2025-02-23 15:38:25,704 - SELECT department.department_name AS department_department_name, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount ELSE %(param_1)s END + CASE WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_2)s END) AS total_expenditure 
FROM ledger INNER JOIN department ON ledger.department_id = department.department_id GROUP BY department.department_name ORDER BY sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount ELSE %(param_1)s END + CASE WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_2)s END) DESC 
 LIMIT %(param_3)s
2025-02-23 15:38:25,705 - BEGIN (implicit)
2025-02-23 15:38:25,706 - [cached since 3032s ago] {'ledger_description_1': 'Expenses', 'amount_1': 0, 'param_1': 0, 'ledger_description_2': 'Revenues', 'amount_2': 0, 'param_2': 0, 'param_3': 10}
2025-02-23 15:38:25,707 - SELECT year(ledger.general_ledger_date) AS year, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s) THEN ledger.amount ELSE %(param_1)s END) AS total_revenue, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_2)s) THEN ledger.amount ELSE %(param_2)s END) AS total_expenses 
FROM ledger 
WHERE true = 1 GROUP BY year(ledger.general_ledger_date) ORDER BY year(ledger.general_ledger_date)
2025-02-23 15:38:25,707 - [cached since 2891s ago] {'ledger_description_1': 'Revenues', 'param_1': 0, 'ledger_description_2': 'Expenses', 'param_2': 0}
2025-02-23 15:38:25,709 - GET http://127.0.0.1:8000/api/initialise/ - 0.00 ms
2025-02-23 15:38:26,496 - BEGIN (implicit)
2025-02-23 15:38:26,498 - SELECT department.department_id AS department_department_id, department.department_name AS department_department_name 
FROM department
2025-02-23 15:38:26,500 - [cached since 7540s ago] {}
2025-02-23 15:38:26,505 - SELECT min(ledger.general_ledger_date) AS min_1 
FROM ledger
2025-02-23 15:38:26,505 - [cached since 7540s ago] {}
2025-02-23 15:38:27,214 - ROLLBACK
2025-02-23 15:38:27,216 - GET http://127.0.0.1:8000/api/revenue-expenses/ - 1.52 ms
2025-02-23 15:38:27,222 - BEGIN (implicit)
2025-02-23 15:38:27,223 - SELECT year(ledger.general_ledger_date) AS year, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s) THEN ledger.amount ELSE %(param_1)s END) AS total_revenue, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_2)s) THEN ledger.amount ELSE %(param_2)s END) AS total_expenses 
FROM ledger 
WHERE true = 1 GROUP BY year(ledger.general_ledger_date) ORDER BY year(ledger.general_ledger_date)
2025-02-23 15:38:27,223 - [cached since 2893s ago] {'ledger_description_1': 'Revenues', 'param_1': 0, 'ledger_description_2': 'Expenses', 'param_2': 0}
2025-02-23 15:38:27,272 - SELECT max(ledger.general_ledger_date) AS max_1 
FROM ledger
2025-02-23 15:38:27,272 - [cached since 7540s ago] {}
2025-02-23 15:38:27,802 - ROLLBACK
2025-02-23 15:38:27,804 - GET http://127.0.0.1:8000/api/initialise - 1.31 ms
2025-02-23 15:38:27,807 - BEGIN (implicit)
2025-02-23 15:38:27,808 - SELECT department.department_id AS department_department_id, department.department_name AS department_department_name 
FROM department
2025-02-23 15:38:27,808 - [cached since 7541s ago] {}
2025-02-23 15:38:27,811 - SELECT min(ledger.general_ledger_date) AS min_1 
FROM ledger
2025-02-23 15:38:27,812 - [cached since 7541s ago] {}
2025-02-23 15:38:28,222 - SELECT max(ledger.general_ledger_date) AS max_1 
FROM ledger
2025-02-23 15:38:28,222 - [cached since 7541s ago] {}
2025-02-23 15:38:28,414 - ROLLBACK
2025-02-23 15:38:28,415 - GET http://127.0.0.1:8000/api/revenue-expenses/ - 1.19 ms
2025-02-23 15:38:28,743 - ROLLBACK
2025-02-23 15:38:28,745 - GET http://127.0.0.1:8000/api/initialise - 0.94 ms
2025-02-23 15:38:45,844 - BEGIN (implicit)
2025-02-23 15:38:45,845 - BEGIN (implicit)
2025-02-23 15:38:45,845 - SELECT department.department_name AS department_department_name, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s) THEN ledger.amount ELSE %(param_1)s END) - sum(CASE WHEN (ledger.ledger_description = %(ledger_description_2)s) THEN ledger.amount ELSE %(param_2)s END) AS roi 
FROM ledger INNER JOIN department ON ledger.department_id = department.department_id GROUP BY department.department_name ORDER BY sum(ledger.amount) DESC 
 LIMIT %(param_3)s
2025-02-23 15:38:45,846 - SELECT department.department_name AS department_department_name, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount ELSE %(param_1)s END + CASE WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_2)s END) AS total_expenditure 
FROM ledger INNER JOIN department ON ledger.department_id = department.department_id GROUP BY department.department_name ORDER BY sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount ELSE %(param_1)s END + CASE WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_2)s END) DESC 
 LIMIT %(param_3)s
2025-02-23 15:38:45,846 - [cached since 7560s ago] {'ledger_description_1': 'Revenues', 'param_1': 0, 'ledger_description_2': 'Expenses', 'param_2': 0, 'param_3': 5}
2025-02-23 15:38:45,848 - [cached since 3052s ago] {'ledger_description_1': 'Expenses', 'amount_1': 0, 'param_1': 0, 'ledger_description_2': 'Revenues', 'amount_2': 0, 'param_2': 0, 'param_3': 10}
2025-02-23 15:38:57,972 - ROLLBACK
2025-02-23 15:38:57,974 - ROLLBACK
2025-02-23 15:38:57,975 - GET http://127.0.0.1:8000/api/top-roi/ - 32.28 ms
2025-02-23 15:38:57,976 - GET http://127.0.0.1:8000/api/top-budget/ - 32.28 ms
2025-02-23 15:39:24,052 - ROLLBACK
2025-02-23 15:39:24,053 - ROLLBACK
2025-02-23 15:39:24,054 - GET http://127.0.0.1:8000/api/top-budget/ - 38.21 ms
2025-02-23 15:39:24,056 - GET http://127.0.0.1:8000/api/top-roi/ - 38.22 ms
2025-02-23 15:41:23,550 - GET http://127.0.0.1:8000/api/initialise/ - 0.00 ms
2025-02-23 15:41:23,690 - BEGIN (implicit)
2025-02-23 15:41:23,691 - SELECT department.department_name AS department_department_name, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s) THEN ledger.amount ELSE %(param_1)s END) - sum(CASE WHEN (ledger.ledger_description = %(ledger_description_2)s) THEN ledger.amount ELSE %(param_2)s END) AS roi 
FROM ledger INNER JOIN department ON ledger.department_id = department.department_id GROUP BY department.department_name ORDER BY sum(ledger.amount) DESC 
 LIMIT %(param_3)s
2025-02-23 15:41:23,692 - [cached since 7717s ago] {'ledger_description_1': 'Revenues', 'param_1': 0, 'ledger_description_2': 'Expenses', 'param_2': 0, 'param_3': 5}
2025-02-23 15:41:23,693 - BEGIN (implicit)
2025-02-23 15:41:23,694 - SELECT department.department_name AS department_department_name, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount ELSE %(param_1)s END + CASE WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_2)s END) AS total_expenditure 
FROM ledger INNER JOIN department ON ledger.department_id = department.department_id GROUP BY department.department_name ORDER BY sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount ELSE %(param_1)s END + CASE WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_2)s END) DESC 
 LIMIT %(param_3)s
2025-02-23 15:41:23,697 - BEGIN (implicit)
2025-02-23 15:41:23,697 - [cached since 3210s ago] {'ledger_description_1': 'Expenses', 'amount_1': 0, 'param_1': 0, 'ledger_description_2': 'Revenues', 'amount_2': 0, 'param_2': 0, 'param_3': 10}
2025-02-23 15:41:23,699 - GET http://127.0.0.1:8000/api/initialise/ - 0.00 ms
2025-02-23 15:41:23,698 - SELECT year(ledger.general_ledger_date) AS year, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s) THEN ledger.amount ELSE %(param_1)s END) AS total_revenue, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_2)s) THEN ledger.amount ELSE %(param_2)s END) AS total_expenses 
FROM ledger 
WHERE true = 1 GROUP BY year(ledger.general_ledger_date) ORDER BY year(ledger.general_ledger_date)
2025-02-23 15:41:23,699 - [cached since 3069s ago] {'ledger_description_1': 'Revenues', 'param_1': 0, 'ledger_description_2': 'Expenses', 'param_2': 0}
2025-02-23 15:41:24,520 - BEGIN (implicit)
2025-02-23 15:41:24,521 - SELECT department.department_id AS department_department_id, department.department_name AS department_department_name 
FROM department
2025-02-23 15:41:24,522 - [cached since 7718s ago] {}
2025-02-23 15:41:24,525 - SELECT min(ledger.general_ledger_date) AS min_1 
FROM ledger
2025-02-23 15:41:24,526 - [cached since 7718s ago] {}
2025-02-23 15:41:25,268 - ROLLBACK
2025-02-23 15:41:25,270 - GET http://127.0.0.1:8000/api/revenue-expenses/ - 1.58 ms
2025-02-23 15:41:25,277 - BEGIN (implicit)
2025-02-23 15:41:25,278 - SELECT year(ledger.general_ledger_date) AS year, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s) THEN ledger.amount ELSE %(param_1)s END) AS total_revenue, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_2)s) THEN ledger.amount ELSE %(param_2)s END) AS total_expenses 
FROM ledger 
WHERE true = 1 GROUP BY year(ledger.general_ledger_date) ORDER BY year(ledger.general_ledger_date)
2025-02-23 15:41:25,279 - [cached since 3071s ago] {'ledger_description_1': 'Revenues', 'param_1': 0, 'ledger_description_2': 'Expenses', 'param_2': 0}
2025-02-23 15:41:25,495 - SELECT max(ledger.general_ledger_date) AS max_1 
FROM ledger
2025-02-23 15:41:25,496 - [cached since 7718s ago] {}
2025-02-23 15:41:25,998 - ROLLBACK
2025-02-23 15:41:26,000 - GET http://127.0.0.1:8000/api/initialise - 1.48 ms
2025-02-23 15:41:26,004 - BEGIN (implicit)
2025-02-23 15:41:26,004 - SELECT department.department_id AS department_department_id, department.department_name AS department_department_name 
FROM department
2025-02-23 15:41:26,006 - [cached since 7719s ago] {}
2025-02-23 15:41:26,011 - SELECT min(ledger.general_ledger_date) AS min_1 
FROM ledger
2025-02-23 15:41:26,012 - [cached since 7719s ago] {}
2025-02-23 15:41:26,477 - SELECT max(ledger.general_ledger_date) AS max_1 
FROM ledger
2025-02-23 15:41:26,477 - [cached since 7719s ago] {}
2025-02-23 15:41:26,622 - ROLLBACK
2025-02-23 15:41:26,623 - GET http://127.0.0.1:8000/api/revenue-expenses/ - 1.35 ms
2025-02-23 15:41:26,839 - ROLLBACK
2025-02-23 15:41:26,840 - GET http://127.0.0.1:8000/api/initialise - 0.84 ms
2025-02-23 15:41:43,803 - BEGIN (implicit)
2025-02-23 15:41:43,804 - BEGIN (implicit)
2025-02-23 15:41:43,806 - SELECT department.department_name AS department_department_name, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s) THEN ledger.amount ELSE %(param_1)s END) - sum(CASE WHEN (ledger.ledger_description = %(ledger_description_2)s) THEN ledger.amount ELSE %(param_2)s END) AS roi 
FROM ledger INNER JOIN department ON ledger.department_id = department.department_id GROUP BY department.department_name ORDER BY sum(ledger.amount) DESC 
 LIMIT %(param_3)s
2025-02-23 15:41:43,808 - SELECT department.department_name AS department_department_name, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount ELSE %(param_1)s END + CASE WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_2)s END) AS total_expenditure 
FROM ledger INNER JOIN department ON ledger.department_id = department.department_id GROUP BY department.department_name ORDER BY sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount ELSE %(param_1)s END + CASE WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_2)s END) DESC 
 LIMIT %(param_3)s
2025-02-23 15:41:43,808 - [cached since 7738s ago] {'ledger_description_1': 'Revenues', 'param_1': 0, 'ledger_description_2': 'Expenses', 'param_2': 0, 'param_3': 5}
2025-02-23 15:41:43,809 - [cached since 3230s ago] {'ledger_description_1': 'Expenses', 'amount_1': 0, 'param_1': 0, 'ledger_description_2': 'Revenues', 'amount_2': 0, 'param_2': 0, 'param_3': 10}
2025-02-23 15:42:06,732 - ROLLBACK
2025-02-23 15:42:06,732 - ROLLBACK
2025-02-23 15:42:06,733 - GET http://127.0.0.1:8000/api/top-roi/ - 43.05 ms
2025-02-23 15:42:06,735 - GET http://127.0.0.1:8000/api/top-budget/ - 43.05 ms
2025-02-23 15:42:32,004 - ROLLBACK
2025-02-23 15:42:32,004 - ROLLBACK
2025-02-23 15:42:32,005 - GET http://127.0.0.1:8000/api/top-budget/ - 48.21 ms
2025-02-23 15:42:32,006 - GET http://127.0.0.1:8000/api/top-roi/ - 48.21 ms
2025-02-23 15:42:32,722 - GET http://127.0.0.1:8000/api/initialise/ - 0.00 ms
2025-02-23 15:42:32,830 - BEGIN (implicit)
2025-02-23 15:42:32,833 - BEGIN (implicit)
2025-02-23 15:42:32,834 - SELECT department.department_name AS department_department_name, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s) THEN ledger.amount ELSE %(param_1)s END) - sum(CASE WHEN (ledger.ledger_description = %(ledger_description_2)s) THEN ledger.amount ELSE %(param_2)s END) AS roi 
FROM ledger INNER JOIN department ON ledger.department_id = department.department_id GROUP BY department.department_name ORDER BY sum(ledger.amount) DESC 
 LIMIT %(param_3)s
2025-02-23 15:42:32,835 - SELECT department.department_name AS department_department_name, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount ELSE %(param_1)s END + CASE WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_2)s END) AS total_expenditure 
FROM ledger INNER JOIN department ON ledger.department_id = department.department_id GROUP BY department.department_name ORDER BY sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount ELSE %(param_1)s END + CASE WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_2)s END) DESC 
 LIMIT %(param_3)s
2025-02-23 15:42:32,836 - [cached since 7787s ago] {'ledger_description_1': 'Revenues', 'param_1': 0, 'ledger_description_2': 'Expenses', 'param_2': 0, 'param_3': 5}
2025-02-23 15:42:32,840 - GET http://127.0.0.1:8000/api/initialise/ - 0.00 ms
2025-02-23 15:42:32,838 - [cached since 3279s ago] {'ledger_description_1': 'Expenses', 'amount_1': 0, 'param_1': 0, 'ledger_description_2': 'Revenues', 'amount_2': 0, 'param_2': 0, 'param_3': 10}
2025-02-23 15:42:32,839 - BEGIN (implicit)
2025-02-23 15:42:32,842 - SELECT year(ledger.general_ledger_date) AS year, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s) THEN ledger.amount ELSE %(param_1)s END) AS total_revenue, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_2)s) THEN ledger.amount ELSE %(param_2)s END) AS total_expenses 
FROM ledger 
WHERE true = 1 GROUP BY year(ledger.general_ledger_date) ORDER BY year(ledger.general_ledger_date)
2025-02-23 15:42:32,843 - [cached since 3138s ago] {'ledger_description_1': 'Revenues', 'param_1': 0, 'ledger_description_2': 'Expenses', 'param_2': 0}
2025-02-23 15:42:33,323 - BEGIN (implicit)
2025-02-23 15:42:33,323 - SELECT department.department_id AS department_department_id, department.department_name AS department_department_name 
FROM department
2025-02-23 15:42:33,324 - [cached since 7787s ago] {}
2025-02-23 15:42:33,327 - SELECT min(ledger.general_ledger_date) AS min_1 
FROM ledger
2025-02-23 15:42:33,327 - [cached since 7787s ago] {}
2025-02-23 15:42:34,158 - SELECT max(ledger.general_ledger_date) AS max_1 
FROM ledger
2025-02-23 15:42:34,158 - [cached since 7787s ago] {}
2025-02-23 15:42:34,417 - ROLLBACK
2025-02-23 15:42:34,419 - GET http://127.0.0.1:8000/api/revenue-expenses/ - 1.59 ms
2025-02-23 15:42:34,425 - BEGIN (implicit)
2025-02-23 15:42:34,426 - SELECT year(ledger.general_ledger_date) AS year, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s) THEN ledger.amount ELSE %(param_1)s END) AS total_revenue, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_2)s) THEN ledger.amount ELSE %(param_2)s END) AS total_expenses 
FROM ledger 
WHERE true = 1 GROUP BY year(ledger.general_ledger_date) ORDER BY year(ledger.general_ledger_date)
2025-02-23 15:42:34,427 - [cached since 3140s ago] {'ledger_description_1': 'Revenues', 'param_1': 0, 'ledger_description_2': 'Expenses', 'param_2': 0}
2025-02-23 15:42:34,754 - ROLLBACK
2025-02-23 15:42:34,756 - GET http://127.0.0.1:8000/api/initialise - 1.44 ms
2025-02-23 15:42:34,761 - BEGIN (implicit)
2025-02-23 15:42:34,762 - SELECT department.department_id AS department_department_id, department.department_name AS department_department_name 
FROM department
2025-02-23 15:42:34,762 - [cached since 7788s ago] {}
2025-02-23 15:42:34,766 - SELECT min(ledger.general_ledger_date) AS min_1 
FROM ledger
2025-02-23 15:42:34,766 - [cached since 7788s ago] {}
2025-02-23 15:42:35,387 - SELECT max(ledger.general_ledger_date) AS max_1 
FROM ledger
2025-02-23 15:42:35,389 - [cached since 7788s ago] {}
2025-02-23 15:42:35,870 - ROLLBACK
2025-02-23 15:42:35,871 - GET http://127.0.0.1:8000/api/revenue-expenses/ - 1.45 ms
2025-02-23 15:42:35,885 - ROLLBACK
2025-02-23 15:42:35,886 - GET http://127.0.0.1:8000/api/initialise - 1.13 ms
2025-02-23 15:42:52,926 - BEGIN (implicit)
2025-02-23 15:42:52,928 - BEGIN (implicit)
2025-02-23 15:42:52,928 - SELECT department.department_name AS department_department_name, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s) THEN ledger.amount ELSE %(param_1)s END) - sum(CASE WHEN (ledger.ledger_description = %(ledger_description_2)s) THEN ledger.amount ELSE %(param_2)s END) AS roi 
FROM ledger INNER JOIN department ON ledger.department_id = department.department_id GROUP BY department.department_name ORDER BY sum(ledger.amount) DESC 
 LIMIT %(param_3)s
2025-02-23 15:42:52,929 - SELECT department.department_name AS department_department_name, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount ELSE %(param_1)s END + CASE WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_2)s END) AS total_expenditure 
FROM ledger INNER JOIN department ON ledger.department_id = department.department_id GROUP BY department.department_name ORDER BY sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount ELSE %(param_1)s END + CASE WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_2)s END) DESC 
 LIMIT %(param_3)s
2025-02-23 15:42:52,929 - [cached since 7807s ago] {'ledger_description_1': 'Revenues', 'param_1': 0, 'ledger_description_2': 'Expenses', 'param_2': 0, 'param_3': 5}
2025-02-23 15:42:52,930 - [cached since 3299s ago] {'ledger_description_1': 'Expenses', 'amount_1': 0, 'param_1': 0, 'ledger_description_2': 'Revenues', 'amount_2': 0, 'param_2': 0, 'param_3': 10}
2025-02-23 15:43:03,695 - ROLLBACK
2025-02-23 15:43:03,695 - ROLLBACK
2025-02-23 15:43:03,696 - GET http://127.0.0.1:8000/api/top-roi/ - 30.87 ms
2025-02-23 15:43:03,697 - GET http://127.0.0.1:8000/api/top-budget/ - 30.87 ms
2025-02-23 15:43:24,956 - ROLLBACK
2025-02-23 15:43:24,956 - ROLLBACK
2025-02-23 15:43:24,957 - GET http://127.0.0.1:8000/api/top-budget/ - 32.03 ms
2025-02-23 15:43:24,958 - GET http://127.0.0.1:8000/api/top-roi/ - 32.04 ms
2025-02-23 16:30:09,096 - BEGIN (implicit)
2025-02-23 16:30:09,097 - BEGIN (implicit)
2025-02-23 16:30:09,100 - BEGIN (implicit)
2025-02-23 16:30:09,119 - SELECT year(ledger.general_ledger_date) AS year, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s) THEN ledger.amount ELSE %(param_1)s END) AS total_revenue, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_2)s) THEN ledger.amount ELSE %(param_2)s END) AS total_expenses 
FROM ledger 
WHERE ledger.department_id = %(department_id_1)s GROUP BY year(ledger.general_ledger_date) ORDER BY year(ledger.general_ledger_date)
2025-02-23 16:30:09,121 - SELECT cost_center.cost_center_description AS cost_center_cost_center_description, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s) THEN ledger.amount ELSE %(param_1)s END) - sum(CASE WHEN (ledger.ledger_description = %(ledger_description_2)s) THEN ledger.amount ELSE %(param_2)s END) AS roi 
FROM ledger INNER JOIN cost_center ON ledger.cost_center_id = cost_center.cost_center_id 
WHERE ledger.department_id = %(department_id_1)s GROUP BY cost_center.cost_center_description ORDER BY sum(ledger.amount) DESC 
 LIMIT %(param_3)s
2025-02-23 16:30:09,125 - SELECT department.department_name AS department_department_name, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount ELSE %(param_1)s END + CASE WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_2)s END) AS total_expenditure 
FROM ledger INNER JOIN department ON ledger.department_id = department.department_id 
WHERE ledger.department_id = %(department_id_1)s GROUP BY department.department_name ORDER BY sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount ELSE %(param_1)s END + CASE WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_2)s END) DESC 
 LIMIT %(param_3)s
2025-02-23 16:30:09,126 - [generated in 0.00654s] {'ledger_description_1': 'Revenues', 'param_1': 0, 'ledger_description_2': 'Expenses', 'param_2': 0, 'department_id_1': 106}
2025-02-23 16:30:09,126 - [cached since 1.054e+04s ago] {'ledger_description_1': 'Revenues', 'param_1': 0, 'ledger_description_2': 'Expenses', 'param_2': 0, 'department_id_1': 106, 'param_3': 5}
2025-02-23 16:30:09,132 - [cached since 6093s ago] {'ledger_description_1': 'Expenses', 'amount_1': 0, 'param_1': 0, 'ledger_description_2': 'Revenues', 'amount_2': 0, 'param_2': 0, 'department_id_1': 106, 'param_3': 10}
2025-02-23 16:30:09,563 - ROLLBACK
2025-02-23 16:30:09,564 - ROLLBACK
2025-02-23 16:30:09,564 - ROLLBACK
2025-02-23 16:30:09,566 - GET http://127.0.0.1:8000/api/top-budget/?department=106 - 0.51 ms
2025-02-23 16:30:09,568 - GET http://127.0.0.1:8000/api/top-roi/?department=106 - 0.51 ms
2025-02-23 16:30:09,570 - GET http://127.0.0.1:8000/api/revenue-expenses/?department=106 - 0.51 ms
2025-02-23 16:30:12,902 - BEGIN (implicit)
2025-02-23 16:30:12,903 - BEGIN (implicit)
2025-02-23 16:30:12,905 - BEGIN (implicit)
2025-02-23 16:30:12,906 - SELECT cost_center.cost_center_description AS cost_center_cost_center_description, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s) THEN ledger.amount ELSE %(param_1)s END) - sum(CASE WHEN (ledger.ledger_description = %(ledger_description_2)s) THEN ledger.amount ELSE %(param_2)s END) AS roi 
FROM ledger INNER JOIN cost_center ON ledger.cost_center_id = cost_center.cost_center_id 
WHERE ledger.department_id = %(department_id_1)s GROUP BY cost_center.cost_center_description ORDER BY sum(ledger.amount) DESC 
 LIMIT %(param_3)s
2025-02-23 16:30:12,907 - SELECT department.department_name AS department_department_name, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount ELSE %(param_1)s END + CASE WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_2)s END) AS total_expenditure 
FROM ledger INNER JOIN department ON ledger.department_id = department.department_id 
WHERE ledger.department_id = %(department_id_1)s GROUP BY department.department_name ORDER BY sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount ELSE %(param_1)s END + CASE WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_2)s END) DESC 
 LIMIT %(param_3)s
2025-02-23 16:30:12,908 - SELECT year(ledger.general_ledger_date) AS year, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s) THEN ledger.amount ELSE %(param_1)s END) AS total_revenue, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_2)s) THEN ledger.amount ELSE %(param_2)s END) AS total_expenses 
FROM ledger 
WHERE ledger.department_id = %(department_id_1)s GROUP BY year(ledger.general_ledger_date) ORDER BY year(ledger.general_ledger_date)
2025-02-23 16:30:12,908 - [cached since 1.055e+04s ago] {'ledger_description_1': 'Revenues', 'param_1': 0, 'ledger_description_2': 'Expenses', 'param_2': 0, 'department_id_1': 109, 'param_3': 5}
2025-02-23 16:30:12,910 - [cached since 6097s ago] {'ledger_description_1': 'Expenses', 'amount_1': 0, 'param_1': 0, 'ledger_description_2': 'Revenues', 'amount_2': 0, 'param_2': 0, 'department_id_1': 109, 'param_3': 10}
2025-02-23 16:30:12,910 - [cached since 3.791s ago] {'ledger_description_1': 'Revenues', 'param_1': 0, 'ledger_description_2': 'Expenses', 'param_2': 0, 'department_id_1': 109}
2025-02-23 16:30:14,196 - ROLLBACK
2025-02-23 16:30:14,196 - ROLLBACK
2025-02-23 16:30:14,197 - GET http://127.0.0.1:8000/api/top-budget/?department=109 - 1.30 ms
2025-02-23 16:30:14,199 - GET http://127.0.0.1:8000/api/revenue-expenses/?department=109 - 1.30 ms
2025-02-23 16:30:14,411 - ROLLBACK
2025-02-23 16:30:14,412 - GET http://127.0.0.1:8000/api/top-roi/?department=109 - 1.51 ms
2025-02-23 16:30:30,709 - BEGIN (implicit)
2025-02-23 16:30:30,710 - BEGIN (implicit)
2025-02-23 16:30:30,712 - SELECT cost_center.cost_center_description AS cost_center_cost_center_description, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s) THEN ledger.amount ELSE %(param_1)s END) - sum(CASE WHEN (ledger.ledger_description = %(ledger_description_2)s) THEN ledger.amount ELSE %(param_2)s END) AS roi 
FROM ledger INNER JOIN cost_center ON ledger.cost_center_id = cost_center.cost_center_id 
WHERE ledger.department_id = %(department_id_1)s AND ledger.general_ledger_date >= %(general_ledger_date_1)s GROUP BY cost_center.cost_center_description ORDER BY sum(ledger.amount) DESC 
 LIMIT %(param_3)s
2025-02-23 16:30:30,714 - SELECT department.department_name AS department_department_name, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount ELSE %(param_1)s END + CASE WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_2)s END) AS total_expenditure 
FROM ledger INNER JOIN department ON ledger.department_id = department.department_id 
WHERE ledger.department_id = %(department_id_1)s GROUP BY department.department_name ORDER BY sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount ELSE %(param_1)s END + CASE WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_2)s END) DESC 
 LIMIT %(param_3)s
2025-02-23 16:30:30,715 - [cached since 9836s ago] {'ledger_description_1': 'Revenues', 'param_1': 0, 'ledger_description_2': 'Expenses', 'param_2': 0, 'department_id_1': 109, 'general_ledger_date_1': '2016-06-30', 'param_3': 5}
2025-02-23 16:30:30,716 - BEGIN (implicit)
2025-02-23 16:30:30,716 - [cached since 6115s ago] {'ledger_description_1': 'Expenses', 'amount_1': 0, 'param_1': 0, 'ledger_description_2': 'Revenues', 'amount_2': 0, 'param_2': 0, 'department_id_1': 109, 'param_3': 10}
2025-02-23 16:30:30,718 - SELECT year(ledger.general_ledger_date) AS year, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s) THEN ledger.amount ELSE %(param_1)s END) AS total_revenue, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_2)s) THEN ledger.amount ELSE %(param_2)s END) AS total_expenses 
FROM ledger 
WHERE ledger.department_id = %(department_id_1)s GROUP BY year(ledger.general_ledger_date) ORDER BY year(ledger.general_ledger_date)
2025-02-23 16:30:30,720 - [cached since 21.6s ago] {'ledger_description_1': 'Revenues', 'param_1': 0, 'ledger_description_2': 'Expenses', 'param_2': 0, 'department_id_1': 109}
2025-02-23 16:30:32,433 - ROLLBACK
2025-02-23 16:30:32,434 - GET http://127.0.0.1:8000/api/top-budget/?department=109&start_date=2016-06-30 - 1.73 ms
2025-02-23 16:30:32,445 - ROLLBACK
2025-02-23 16:30:32,447 - GET http://127.0.0.1:8000/api/revenue-expenses/?department=109&start_date=2016-06-30 - 1.74 ms
2025-02-23 16:30:32,548 - ROLLBACK
2025-02-23 16:30:32,549 - GET http://127.0.0.1:8000/api/top-roi/?department=109&start_date=2016-06-30 - 1.85 ms
2025-02-23 16:30:38,888 - BEGIN (implicit)
2025-02-23 16:30:38,890 - BEGIN (implicit)
2025-02-23 16:30:38,891 - BEGIN (implicit)
2025-02-23 16:30:38,892 - SELECT department.department_name AS department_department_name, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount ELSE %(param_1)s END + CASE WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_2)s END) AS total_expenditure 
FROM ledger INNER JOIN department ON ledger.department_id = department.department_id 
WHERE ledger.department_id = %(department_id_1)s GROUP BY department.department_name ORDER BY sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount ELSE %(param_1)s END + CASE WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_2)s END) DESC 
 LIMIT %(param_3)s
2025-02-23 16:30:38,893 - SELECT cost_center.cost_center_description AS cost_center_cost_center_description, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s) THEN ledger.amount ELSE %(param_1)s END) - sum(CASE WHEN (ledger.ledger_description = %(ledger_description_2)s) THEN ledger.amount ELSE %(param_2)s END) AS roi 
FROM ledger INNER JOIN cost_center ON ledger.cost_center_id = cost_center.cost_center_id 
WHERE ledger.department_id = %(department_id_1)s AND ledger.general_ledger_date >= %(general_ledger_date_1)s GROUP BY cost_center.cost_center_description ORDER BY sum(ledger.amount) DESC 
 LIMIT %(param_3)s
2025-02-23 16:30:38,894 - SELECT year(ledger.general_ledger_date) AS year, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s) THEN ledger.amount ELSE %(param_1)s END) AS total_revenue, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_2)s) THEN ledger.amount ELSE %(param_2)s END) AS total_expenses 
FROM ledger 
WHERE ledger.department_id = %(department_id_1)s GROUP BY year(ledger.general_ledger_date) ORDER BY year(ledger.general_ledger_date)
2025-02-23 16:30:38,894 - [cached since 6123s ago] {'ledger_description_1': 'Expenses', 'amount_1': 0, 'param_1': 0, 'ledger_description_2': 'Revenues', 'amount_2': 0, 'param_2': 0, 'department_id_1': 109, 'param_3': 10}
2025-02-23 16:30:38,894 - [cached since 9844s ago] {'ledger_description_1': 'Revenues', 'param_1': 0, 'ledger_description_2': 'Expenses', 'param_2': 0, 'department_id_1': 109, 'general_ledger_date_1': '2016-06-30', 'param_3': 5}
2025-02-23 16:30:38,896 - [cached since 29.78s ago] {'ledger_description_1': 'Revenues', 'param_1': 0, 'ledger_description_2': 'Expenses', 'param_2': 0, 'department_id_1': 109}
2025-02-23 16:30:40,323 - ROLLBACK
2025-02-23 16:30:40,324 - GET http://127.0.0.1:8000/api/top-budget/?department=109&start_date=2016-06-30 - 1.44 ms
2025-02-23 16:30:40,361 - ROLLBACK
2025-02-23 16:30:40,362 - GET http://127.0.0.1:8000/api/revenue-expenses/?department=109&start_date=2016-06-30 - 1.48 ms
2025-02-23 16:30:40,448 - ROLLBACK
2025-02-23 16:30:40,448 - GET http://127.0.0.1:8000/api/top-roi/?department=109&start_date=2016-06-30 - 1.56 ms
2025-02-23 16:30:52,799 - BEGIN (implicit)
2025-02-23 16:30:52,801 - BEGIN (implicit)
2025-02-23 16:30:52,802 - SELECT cost_center.cost_center_description AS cost_center_cost_center_description, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s) THEN ledger.amount ELSE %(param_1)s END) - sum(CASE WHEN (ledger.ledger_description = %(ledger_description_2)s) THEN ledger.amount ELSE %(param_2)s END) AS roi 
FROM ledger INNER JOIN cost_center ON ledger.cost_center_id = cost_center.cost_center_id 
WHERE ledger.department_id = %(department_id_1)s AND ledger.general_ledger_date >= %(general_ledger_date_1)s GROUP BY cost_center.cost_center_description ORDER BY sum(ledger.amount) DESC 
 LIMIT %(param_3)s
2025-02-23 16:30:52,804 - SELECT department.department_name AS department_department_name, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount ELSE %(param_1)s END + CASE WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_2)s END) AS total_expenditure 
FROM ledger INNER JOIN department ON ledger.department_id = department.department_id 
WHERE ledger.department_id = %(department_id_1)s GROUP BY department.department_name ORDER BY sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount ELSE %(param_1)s END + CASE WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_2)s END) DESC 
 LIMIT %(param_3)s
2025-02-23 16:30:52,806 - BEGIN (implicit)
2025-02-23 16:30:52,806 - [cached since 9858s ago] {'ledger_description_1': 'Revenues', 'param_1': 0, 'ledger_description_2': 'Expenses', 'param_2': 0, 'department_id_1': 109, 'general_ledger_date_1': '2016-06-10', 'param_3': 5}
2025-02-23 16:30:52,807 - [cached since 6137s ago] {'ledger_description_1': 'Expenses', 'amount_1': 0, 'param_1': 0, 'ledger_description_2': 'Revenues', 'amount_2': 0, 'param_2': 0, 'department_id_1': 109, 'param_3': 10}
2025-02-23 16:30:52,808 - SELECT year(ledger.general_ledger_date) AS year, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s) THEN ledger.amount ELSE %(param_1)s END) AS total_revenue, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_2)s) THEN ledger.amount ELSE %(param_2)s END) AS total_expenses 
FROM ledger 
WHERE ledger.department_id = %(department_id_1)s GROUP BY year(ledger.general_ledger_date) ORDER BY year(ledger.general_ledger_date)
2025-02-23 16:30:52,811 - [cached since 43.69s ago] {'ledger_description_1': 'Revenues', 'param_1': 0, 'ledger_description_2': 'Expenses', 'param_2': 0, 'department_id_1': 109}
2025-02-23 16:30:54,348 - ROLLBACK
2025-02-23 16:30:54,349 - GET http://127.0.0.1:8000/api/top-budget/?department=109&start_date=2016-06-10 - 1.56 ms
2025-02-23 16:30:54,358 - ROLLBACK
2025-02-23 16:30:54,361 - GET http://127.0.0.1:8000/api/revenue-expenses/?department=109&start_date=2016-06-10 - 1.57 ms
2025-02-23 16:30:54,444 - ROLLBACK
2025-02-23 16:30:54,445 - GET http://127.0.0.1:8000/api/top-roi/?department=109&start_date=2016-06-10 - 1.65 ms
2025-02-23 16:31:02,123 - BEGIN (implicit)
2025-02-23 16:31:02,124 - SELECT cost_center.cost_center_description AS cost_center_cost_center_description, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s) THEN ledger.amount ELSE %(param_1)s END) - sum(CASE WHEN (ledger.ledger_description = %(ledger_description_2)s) THEN ledger.amount ELSE %(param_2)s END) AS roi 
FROM ledger INNER JOIN cost_center ON ledger.cost_center_id = cost_center.cost_center_id 
WHERE ledger.department_id = %(department_id_1)s AND ledger.general_ledger_date >= %(general_ledger_date_1)s GROUP BY cost_center.cost_center_description ORDER BY sum(ledger.amount) DESC 
 LIMIT %(param_3)s
2025-02-23 16:31:02,126 - BEGIN (implicit)
2025-02-23 16:31:02,130 - [cached since 9867s ago] {'ledger_description_1': 'Revenues', 'param_1': 0, 'ledger_description_2': 'Expenses', 'param_2': 0, 'department_id_1': 109, 'general_ledger_date_1': '2015-02-10', 'param_3': 5}
2025-02-23 16:31:02,132 - BEGIN (implicit)
2025-02-23 16:31:02,133 - SELECT department.department_name AS department_department_name, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount ELSE %(param_1)s END + CASE WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_2)s END) AS total_expenditure 
FROM ledger INNER JOIN department ON ledger.department_id = department.department_id 
WHERE ledger.department_id = %(department_id_1)s GROUP BY department.department_name ORDER BY sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount ELSE %(param_1)s END + CASE WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_2)s END) DESC 
 LIMIT %(param_3)s
2025-02-23 16:31:02,139 - SELECT year(ledger.general_ledger_date) AS year, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s) THEN ledger.amount ELSE %(param_1)s END) AS total_revenue, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_2)s) THEN ledger.amount ELSE %(param_2)s END) AS total_expenses 
FROM ledger 
WHERE ledger.department_id = %(department_id_1)s GROUP BY year(ledger.general_ledger_date) ORDER BY year(ledger.general_ledger_date)
2025-02-23 16:31:02,140 - [cached since 6146s ago] {'ledger_description_1': 'Expenses', 'amount_1': 0, 'param_1': 0, 'ledger_description_2': 'Revenues', 'amount_2': 0, 'param_2': 0, 'department_id_1': 109, 'param_3': 10}
2025-02-23 16:31:02,141 - [cached since 53.02s ago] {'ledger_description_1': 'Revenues', 'param_1': 0, 'ledger_description_2': 'Expenses', 'param_2': 0, 'department_id_1': 109}
2025-02-23 16:31:03,776 - ROLLBACK
2025-02-23 16:31:03,777 - GET http://127.0.0.1:8000/api/top-budget/?department=109&start_date=2015-02-10 - 1.66 ms
2025-02-23 16:31:03,782 - ROLLBACK
2025-02-23 16:31:03,783 - GET http://127.0.0.1:8000/api/revenue-expenses/?department=109&start_date=2015-02-10 - 1.66 ms
2025-02-23 16:31:03,982 - ROLLBACK
2025-02-23 16:31:03,984 - GET http://127.0.0.1:8000/api/top-roi/?department=109&start_date=2015-02-10 - 1.87 ms
2025-02-23 16:31:17,855 - BEGIN (implicit)
2025-02-23 16:31:17,856 - BEGIN (implicit)
2025-02-23 16:31:17,857 - BEGIN (implicit)
2025-02-23 16:31:17,858 - SELECT cost_center.cost_center_description AS cost_center_cost_center_description, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s) THEN ledger.amount ELSE %(param_1)s END) - sum(CASE WHEN (ledger.ledger_description = %(ledger_description_2)s) THEN ledger.amount ELSE %(param_2)s END) AS roi 
FROM ledger INNER JOIN cost_center ON ledger.cost_center_id = cost_center.cost_center_id 
WHERE ledger.department_id = %(department_id_1)s AND ledger.general_ledger_date BETWEEN %(general_ledger_date_1)s AND %(general_ledger_date_2)s GROUP BY cost_center.cost_center_description ORDER BY sum(ledger.amount) DESC 
 LIMIT %(param_3)s
2025-02-23 16:31:17,859 - SELECT year(ledger.general_ledger_date) AS year, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s) THEN ledger.amount ELSE %(param_1)s END) AS total_revenue, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_2)s) THEN ledger.amount ELSE %(param_2)s END) AS total_expenses 
FROM ledger 
WHERE ledger.general_ledger_date BETWEEN %(general_ledger_date_1)s AND %(general_ledger_date_2)s AND ledger.department_id = %(department_id_1)s GROUP BY year(ledger.general_ledger_date) ORDER BY year(ledger.general_ledger_date)
2025-02-23 16:31:17,866 - SELECT department.department_name AS department_department_name, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount ELSE %(param_1)s END + CASE WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_2)s END) AS total_expenditure 
FROM ledger INNER JOIN department ON ledger.department_id = department.department_id 
WHERE ledger.department_id = %(department_id_1)s AND ledger.general_ledger_date BETWEEN %(general_ledger_date_1)s AND %(general_ledger_date_2)s GROUP BY department.department_name ORDER BY sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount ELSE %(param_1)s END + CASE WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_2)s END) DESC 
 LIMIT %(param_3)s
2025-02-23 16:31:17,868 - [cached since 1.055e+04s ago] {'ledger_description_1': 'Revenues', 'param_1': 0, 'ledger_description_2': 'Expenses', 'param_2': 0, 'department_id_1': 109, 'general_ledger_date_1': '2015-02-10', 'general_ledger_date_2': '2020-12-16', 'param_3': 5}
2025-02-23 16:31:17,869 - [generated in 0.00913s] {'ledger_description_1': 'Revenues', 'param_1': 0, 'ledger_description_2': 'Expenses', 'param_2': 0, 'general_ledger_date_1': '2015-02-10', 'general_ledger_date_2': '2020-12-16', 'department_id_1': 109}
2025-02-23 16:31:17,870 - [generated in 0.00311s] {'ledger_description_1': 'Expenses', 'amount_1': 0, 'param_1': 0, 'ledger_description_2': 'Revenues', 'amount_2': 0, 'param_2': 0, 'department_id_1': 109, 'general_ledger_date_1': '2015-02-10', 'general_ledger_date_2': '2020-12-16', 'param_3': 10}
2025-02-23 16:31:19,633 - ROLLBACK
2025-02-23 16:31:19,634 - GET http://127.0.0.1:8000/api/revenue-expenses/?department=109&start_date=2015-02-10&end_date=2020-12-16 - 1.79 ms
2025-02-23 16:31:19,637 - ROLLBACK
2025-02-23 16:31:19,639 - GET http://127.0.0.1:8000/api/top-budget/?department=109&start_date=2015-02-10&end_date=2020-12-16 - 1.79 ms
2025-02-23 16:31:19,840 - ROLLBACK
2025-02-23 16:31:19,842 - GET http://127.0.0.1:8000/api/top-roi/?department=109&start_date=2015-02-10&end_date=2020-12-16 - 2.00 ms
2025-02-23 16:32:07,349 - BEGIN (implicit)
2025-02-23 16:32:07,351 - BEGIN (implicit)
2025-02-23 16:32:07,354 - SELECT department.department_name AS department_department_name, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s) THEN ledger.amount ELSE %(param_1)s END) - sum(CASE WHEN (ledger.ledger_description = %(ledger_description_2)s) THEN ledger.amount ELSE %(param_2)s END) AS roi 
FROM ledger INNER JOIN department ON ledger.department_id = department.department_id 
WHERE ledger.general_ledger_date BETWEEN %(general_ledger_date_1)s AND %(general_ledger_date_2)s GROUP BY department.department_name ORDER BY sum(ledger.amount) DESC 
 LIMIT %(param_3)s
2025-02-23 16:32:07,356 - BEGIN (implicit)
2025-02-23 16:32:07,362 - SELECT department.department_name AS department_department_name, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount ELSE %(param_1)s END + CASE WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_2)s END) AS total_expenditure 
FROM ledger INNER JOIN department ON ledger.department_id = department.department_id 
WHERE ledger.general_ledger_date BETWEEN %(general_ledger_date_1)s AND %(general_ledger_date_2)s GROUP BY department.department_name ORDER BY sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount ELSE %(param_1)s END + CASE WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_2)s END) DESC 
 LIMIT %(param_3)s
2025-02-23 16:32:07,363 - [generated in 0.00881s] {'ledger_description_1': 'Revenues', 'param_1': 0, 'ledger_description_2': 'Expenses', 'param_2': 0, 'general_ledger_date_1': '2015-02-10', 'general_ledger_date_2': '2020-12-16', 'param_3': 5}
2025-02-23 16:32:07,369 - SELECT year(ledger.general_ledger_date) AS year, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s) THEN ledger.amount ELSE %(param_1)s END) AS total_revenue, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_2)s) THEN ledger.amount ELSE %(param_2)s END) AS total_expenses 
FROM ledger 
WHERE ledger.general_ledger_date BETWEEN %(general_ledger_date_1)s AND %(general_ledger_date_2)s GROUP BY year(ledger.general_ledger_date) ORDER BY year(ledger.general_ledger_date)
2025-02-23 16:32:07,369 - [generated in 0.00754s] {'ledger_description_1': 'Expenses', 'amount_1': 0, 'param_1': 0, 'ledger_description_2': 'Revenues', 'amount_2': 0, 'param_2': 0, 'general_ledger_date_1': '2015-02-10', 'general_ledger_date_2': '2020-12-16', 'param_3': 10}
2025-02-23 16:32:07,370 - [generated in 0.00157s] {'ledger_description_1': 'Revenues', 'param_1': 0, 'ledger_description_2': 'Expenses', 'param_2': 0, 'general_ledger_date_1': '2015-02-10', 'general_ledger_date_2': '2020-12-16'}
2025-02-23 16:32:08,324 - ROLLBACK
2025-02-23 16:32:08,326 - GET http://127.0.0.1:8000/api/revenue-expenses/?start_date=2015-02-10&end_date=2020-12-16 - 0.98 ms
2025-02-23 16:32:31,572 - ROLLBACK
2025-02-23 16:32:31,572 - ROLLBACK
2025-02-23 16:32:31,573 - GET http://127.0.0.1:8000/api/top-roi/?start_date=2015-02-10&end_date=2020-12-16 - 24.23 ms
2025-02-23 16:32:31,575 - GET http://127.0.0.1:8000/api/top-budget/?start_date=2015-02-10&end_date=2020-12-16 - 24.23 ms
2025-02-23 16:37:07,064 - BEGIN (implicit)
2025-02-23 16:37:07,066 - SELECT department.department_name AS department_department_name, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount ELSE %(param_1)s END + CASE WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_2)s END) AS total_expenditure 
FROM ledger INNER JOIN department ON ledger.department_id = department.department_id GROUP BY department.department_name ORDER BY sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount ELSE %(param_1)s END + CASE WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_2)s END) DESC 
 LIMIT %(param_3)s
2025-02-23 16:37:07,067 - [cached since 6553s ago] {'ledger_description_1': 'Expenses', 'amount_1': 0, 'param_1': 0, 'ledger_description_2': 'Revenues', 'amount_2': 0, 'param_2': 0, 'param_3': 10}
2025-02-23 16:37:18,811 - BEGIN (implicit)
2025-02-23 16:37:18,812 - SELECT cost_center.cost_center_description AS cost_center_cost_center_description, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s) THEN ledger.amount ELSE %(param_1)s END) - sum(CASE WHEN (ledger.ledger_description = %(ledger_description_2)s) THEN ledger.amount ELSE %(param_2)s END) AS roi 
FROM ledger INNER JOIN cost_center ON ledger.cost_center_id = cost_center.cost_center_id 
WHERE ledger.department_id = %(department_id_1)s AND ledger.general_ledger_date BETWEEN %(general_ledger_date_1)s AND %(general_ledger_date_2)s GROUP BY cost_center.cost_center_description ORDER BY sum(ledger.amount) DESC 
 LIMIT %(param_3)s
2025-02-23 16:37:18,813 - [cached since 1.091e+04s ago] {'ledger_description_1': 'Revenues', 'param_1': 0, 'ledger_description_2': 'Expenses', 'param_2': 0, 'department_id_1': 102, 'general_ledger_date_1': '2017-07-24', 'general_ledger_date_2': '2020-07-17', 'param_3': 5}
2025-02-23 16:37:19,762 - ROLLBACK
2025-02-23 16:37:19,763 - GET http://127.0.0.1:8000/api/top-roi/?department=102&start_date=2017-07-24&end_date=2020-07-17 - 0.95 ms
2025-02-23 16:37:25,930 - BEGIN (implicit)
2025-02-23 16:37:25,931 - SELECT cost_center.cost_center_description AS cost_center_cost_center_description, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s) THEN ledger.amount ELSE %(param_1)s END) - sum(CASE WHEN (ledger.ledger_description = %(ledger_description_2)s) THEN ledger.amount ELSE %(param_2)s END) AS roi 
FROM ledger INNER JOIN cost_center ON ledger.cost_center_id = cost_center.cost_center_id 
WHERE ledger.department_id = %(department_id_1)s GROUP BY cost_center.cost_center_description ORDER BY sum(ledger.amount) DESC 
 LIMIT %(param_3)s
2025-02-23 16:37:25,933 - [cached since 1.098e+04s ago] {'ledger_description_1': 'Revenues', 'param_1': 0, 'ledger_description_2': 'Expenses', 'param_2': 0, 'department_id_1': 102, 'param_3': 5}
2025-02-23 16:37:27,047 - ROLLBACK
2025-02-23 16:37:27,048 - GET http://127.0.0.1:8000/api/top-roi/?department=102 - 1.12 ms
2025-02-23 16:37:27,645 - ROLLBACK
2025-02-23 16:37:27,645 - GET http://127.0.0.1:8000/api/top-budget/ - 20.58 ms
2025-02-23 16:37:38,915 - BEGIN (implicit)
2025-02-23 16:37:38,916 - SELECT department.department_name AS department_department_name, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s) THEN ledger.amount ELSE %(param_1)s END) - sum(CASE WHEN (ledger.ledger_description = %(ledger_description_2)s) THEN ledger.amount ELSE %(param_2)s END) AS roi 
FROM ledger INNER JOIN department ON ledger.department_id = department.department_id GROUP BY department.department_name ORDER BY sum(ledger.amount) DESC 
 LIMIT %(param_3)s
2025-02-23 16:37:38,916 - [cached since 1.109e+04s ago] {'ledger_description_1': 'Revenues', 'param_1': 0, 'ledger_description_2': 'Expenses', 'param_2': 0, 'param_3': 5}
2025-02-23 16:37:59,218 - ROLLBACK
2025-02-23 16:37:59,219 - GET http://127.0.0.1:8000/api/top-roi/ - 20.31 ms
2025-02-23 16:46:11,333 - BEGIN (implicit)
2025-02-23 16:46:11,335 - SELECT department.department_name AS department_department_name, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s) THEN ledger.amount ELSE %(param_1)s END) - sum(CASE WHEN (ledger.ledger_description = %(ledger_description_2)s) THEN ledger.amount ELSE %(param_2)s END) AS roi 
FROM ledger INNER JOIN department ON ledger.department_id = department.department_id GROUP BY department.department_name ORDER BY sum(ledger.amount) DESC 
 LIMIT %(param_3)s
2025-02-23 16:46:11,335 - [cached since 1.161e+04s ago] {'ledger_description_1': 'Revenues', 'param_1': 0, 'ledger_description_2': 'Expenses', 'param_2': 0, 'param_3': 5}
2025-02-23 16:46:38,992 - ROLLBACK
2025-02-23 16:46:38,994 - GET http://127.0.0.1:8000/api/top-roi/ - 27.66 ms
2025-02-23 16:46:45,518 - BEGIN (implicit)
2025-02-23 16:46:45,520 - SELECT department.department_name AS department_department_name, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s) THEN ledger.amount ELSE %(param_1)s END) - sum(CASE WHEN (ledger.ledger_description = %(ledger_description_2)s) THEN ledger.amount ELSE %(param_2)s END) AS roi 
FROM ledger INNER JOIN department ON ledger.department_id = department.department_id GROUP BY department.department_name ORDER BY sum(ledger.amount) DESC 
 LIMIT %(param_3)s
2025-02-23 16:46:45,521 - [cached since 1.164e+04s ago] {'ledger_description_1': 'Revenues', 'param_1': 0, 'ledger_description_2': 'Expenses', 'param_2': 0, 'param_3': 5}
2025-02-23 16:47:12,854 - ROLLBACK
2025-02-23 16:47:12,855 - GET http://127.0.0.1:8000/api/top-roi/ - 27.34 ms
2025-02-23 17:06:35,360 - BEGIN (implicit)
2025-02-23 17:06:35,361 - BEGIN (implicit)
2025-02-23 17:06:35,361 - BEGIN (implicit)
2025-02-23 17:06:35,362 - SELECT department.department_name AS department_department_name, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount ELSE %(param_1)s END + CASE WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_2)s END) AS total_expenditure 
FROM ledger INNER JOIN department ON ledger.department_id = department.department_id 
WHERE ledger.department_id = %(department_id_1)s AND ledger.general_ledger_date BETWEEN %(general_ledger_date_1)s AND %(general_ledger_date_2)s GROUP BY department.department_name ORDER BY sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount ELSE %(param_1)s END + CASE WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_2)s END) DESC 
 LIMIT %(param_3)s
2025-02-23 17:06:35,363 - SELECT year(ledger.general_ledger_date) AS year, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s) THEN ledger.amount ELSE %(param_1)s END) AS total_revenue, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_2)s) THEN ledger.amount ELSE %(param_2)s END) AS total_expenses 
FROM ledger 
WHERE ledger.general_ledger_date BETWEEN %(general_ledger_date_1)s AND %(general_ledger_date_2)s AND ledger.department_id = %(department_id_1)s GROUP BY year(ledger.general_ledger_date) ORDER BY year(ledger.general_ledger_date)
2025-02-23 17:06:35,364 - SELECT cost_center.cost_center_description AS cost_center_cost_center_description, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s) THEN ledger.amount ELSE %(param_1)s END) - sum(CASE WHEN (ledger.ledger_description = %(ledger_description_2)s) THEN ledger.amount ELSE %(param_2)s END) AS roi 
FROM ledger INNER JOIN cost_center ON ledger.cost_center_id = cost_center.cost_center_id 
WHERE ledger.department_id = %(department_id_1)s AND ledger.general_ledger_date BETWEEN %(general_ledger_date_1)s AND %(general_ledger_date_2)s GROUP BY cost_center.cost_center_description ORDER BY sum(ledger.amount) DESC 
 LIMIT %(param_3)s
2025-02-23 17:06:35,367 - [cached since 2117s ago] {'ledger_description_1': 'Expenses', 'amount_1': 0, 'param_1': 0, 'ledger_description_2': 'Revenues', 'amount_2': 0, 'param_2': 0, 'department_id_1': 102, 'general_ledger_date_1': '2015-02-10', 'general_ledger_date_2': '2020-12-16', 'param_3': 10}
2025-02-23 17:06:35,378 - [cached since 2118s ago] {'ledger_description_1': 'Revenues', 'param_1': 0, 'ledger_description_2': 'Expenses', 'param_2': 0, 'general_ledger_date_1': '2015-02-10', 'general_ledger_date_2': '2020-12-16', 'department_id_1': 102}
2025-02-23 17:06:35,378 - [cached since 1.267e+04s ago] {'ledger_description_1': 'Revenues', 'param_1': 0, 'ledger_description_2': 'Expenses', 'param_2': 0, 'department_id_1': 102, 'general_ledger_date_1': '2015-02-10', 'general_ledger_date_2': '2020-12-16', 'param_3': 5}
2025-02-23 17:06:37,308 - ROLLBACK
2025-02-23 17:06:37,310 - GET http://127.0.0.1:8000/api/top-roi/?department=102&start_date=2015-02-10&end_date=2020-12-16 - 1.96 ms
2025-02-23 17:06:37,313 - ROLLBACK
2025-02-23 17:06:37,315 - ROLLBACK
2025-02-23 17:06:37,316 - GET http://127.0.0.1:8000/api/top-budget/?department=102&start_date=2015-02-10&end_date=2020-12-16 - 1.96 ms
2025-02-23 17:06:37,318 - GET http://127.0.0.1:8000/api/revenue-expenses/?department=102&start_date=2015-02-10&end_date=2020-12-16 - 1.97 ms
2025-02-23 17:06:40,781 - BEGIN (implicit)
2025-02-23 17:06:40,783 - BEGIN (implicit)
2025-02-23 17:06:40,785 - BEGIN (implicit)
2025-02-23 17:06:40,785 - SELECT year(ledger.general_ledger_date) AS year, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s) THEN ledger.amount ELSE %(param_1)s END) AS total_revenue, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_2)s) THEN ledger.amount ELSE %(param_2)s END) AS total_expenses 
FROM ledger 
WHERE ledger.general_ledger_date BETWEEN %(general_ledger_date_1)s AND %(general_ledger_date_2)s AND ledger.department_id = %(department_id_1)s GROUP BY year(ledger.general_ledger_date) ORDER BY year(ledger.general_ledger_date)
2025-02-23 17:06:40,786 - SELECT cost_center.cost_center_description AS cost_center_cost_center_description, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s) THEN ledger.amount ELSE %(param_1)s END) - sum(CASE WHEN (ledger.ledger_description = %(ledger_description_2)s) THEN ledger.amount ELSE %(param_2)s END) AS roi 
FROM ledger INNER JOIN cost_center ON ledger.cost_center_id = cost_center.cost_center_id 
WHERE ledger.department_id = %(department_id_1)s AND ledger.general_ledger_date BETWEEN %(general_ledger_date_1)s AND %(general_ledger_date_2)s GROUP BY cost_center.cost_center_description ORDER BY sum(ledger.amount) DESC 
 LIMIT %(param_3)s
2025-02-23 17:06:40,787 - SELECT department.department_name AS department_department_name, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount ELSE %(param_1)s END + CASE WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_2)s END) AS total_expenditure 
FROM ledger INNER JOIN department ON ledger.department_id = department.department_id 
WHERE ledger.department_id = %(department_id_1)s AND ledger.general_ledger_date BETWEEN %(general_ledger_date_1)s AND %(general_ledger_date_2)s GROUP BY department.department_name ORDER BY sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount ELSE %(param_1)s END + CASE WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_2)s END) DESC 
 LIMIT %(param_3)s
2025-02-23 17:06:40,787 - [cached since 2123s ago] {'ledger_description_1': 'Revenues', 'param_1': 0, 'ledger_description_2': 'Expenses', 'param_2': 0, 'general_ledger_date_1': '2015-02-10', 'general_ledger_date_2': '2020-12-16', 'department_id_1': 108}
2025-02-23 17:06:40,789 - [cached since 1.268e+04s ago] {'ledger_description_1': 'Revenues', 'param_1': 0, 'ledger_description_2': 'Expenses', 'param_2': 0, 'department_id_1': 108, 'general_ledger_date_1': '2015-02-10', 'general_ledger_date_2': '2020-12-16', 'param_3': 5}
2025-02-23 17:06:40,789 - [cached since 2123s ago] {'ledger_description_1': 'Expenses', 'amount_1': 0, 'param_1': 0, 'ledger_description_2': 'Revenues', 'amount_2': 0, 'param_2': 0, 'department_id_1': 108, 'general_ledger_date_1': '2015-02-10', 'general_ledger_date_2': '2020-12-16', 'param_3': 10}
2025-02-23 17:06:41,520 - ROLLBACK
2025-02-23 17:06:41,521 - ROLLBACK
2025-02-23 17:06:41,523 - GET http://127.0.0.1:8000/api/top-budget/?department=108&start_date=2015-02-10&end_date=2020-12-16 - 0.75 ms
2025-02-23 17:06:41,525 - GET http://127.0.0.1:8000/api/revenue-expenses/?department=108&start_date=2015-02-10&end_date=2020-12-16 - 0.75 ms
2025-02-23 17:06:41,527 - ROLLBACK
2025-02-23 17:06:41,529 - GET http://127.0.0.1:8000/api/top-roi/?department=108&start_date=2015-02-10&end_date=2020-12-16 - 0.75 ms
2025-02-23 17:06:44,464 - BEGIN (implicit)
2025-02-23 17:06:44,468 - BEGIN (implicit)
2025-02-23 17:06:44,469 - BEGIN (implicit)
2025-02-23 17:06:44,469 - SELECT cost_center.cost_center_description AS cost_center_cost_center_description, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s) THEN ledger.amount ELSE %(param_1)s END) - sum(CASE WHEN (ledger.ledger_description = %(ledger_description_2)s) THEN ledger.amount ELSE %(param_2)s END) AS roi 
FROM ledger INNER JOIN cost_center ON ledger.cost_center_id = cost_center.cost_center_id 
WHERE ledger.department_id = %(department_id_1)s AND ledger.general_ledger_date BETWEEN %(general_ledger_date_1)s AND %(general_ledger_date_2)s GROUP BY cost_center.cost_center_description ORDER BY sum(ledger.amount) DESC 
 LIMIT %(param_3)s
2025-02-23 17:06:44,471 - SELECT department.department_name AS department_department_name, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount ELSE %(param_1)s END + CASE WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_2)s END) AS total_expenditure 
FROM ledger INNER JOIN department ON ledger.department_id = department.department_id 
WHERE ledger.department_id = %(department_id_1)s AND ledger.general_ledger_date BETWEEN %(general_ledger_date_1)s AND %(general_ledger_date_2)s GROUP BY department.department_name ORDER BY sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount ELSE %(param_1)s END + CASE WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_2)s END) DESC 
 LIMIT %(param_3)s
2025-02-23 17:06:44,472 - SELECT year(ledger.general_ledger_date) AS year, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s) THEN ledger.amount ELSE %(param_1)s END) AS total_revenue, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_2)s) THEN ledger.amount ELSE %(param_2)s END) AS total_expenses 
FROM ledger 
WHERE ledger.general_ledger_date BETWEEN %(general_ledger_date_1)s AND %(general_ledger_date_2)s AND ledger.department_id = %(department_id_1)s GROUP BY year(ledger.general_ledger_date) ORDER BY year(ledger.general_ledger_date)
2025-02-23 17:06:44,472 - [cached since 1.268e+04s ago] {'ledger_description_1': 'Revenues', 'param_1': 0, 'ledger_description_2': 'Expenses', 'param_2': 0, 'department_id_1': 103, 'general_ledger_date_1': '2015-02-10', 'general_ledger_date_2': '2020-12-16', 'param_3': 5}
2025-02-23 17:06:44,472 - [cached since 2127s ago] {'ledger_description_1': 'Expenses', 'amount_1': 0, 'param_1': 0, 'ledger_description_2': 'Revenues', 'amount_2': 0, 'param_2': 0, 'department_id_1': 103, 'general_ledger_date_1': '2015-02-10', 'general_ledger_date_2': '2020-12-16', 'param_3': 10}
2025-02-23 17:06:44,473 - [cached since 2127s ago] {'ledger_description_1': 'Revenues', 'param_1': 0, 'ledger_description_2': 'Expenses', 'param_2': 0, 'general_ledger_date_1': '2015-02-10', 'general_ledger_date_2': '2020-12-16', 'department_id_1': 103}
2025-02-23 17:06:45,879 - ROLLBACK
2025-02-23 17:06:45,879 - ROLLBACK
2025-02-23 17:06:45,879 - ROLLBACK
2025-02-23 17:06:45,881 - GET http://127.0.0.1:8000/api/top-roi/?department=103&start_date=2015-02-10&end_date=2020-12-16 - 1.42 ms
2025-02-23 17:06:45,883 - GET http://127.0.0.1:8000/api/top-budget/?department=103&start_date=2015-02-10&end_date=2020-12-16 - 1.42 ms
2025-02-23 17:06:45,884 - GET http://127.0.0.1:8000/api/revenue-expenses/?department=103&start_date=2015-02-10&end_date=2020-12-16 - 1.42 ms
2025-02-23 17:06:48,424 - BEGIN (implicit)
2025-02-23 17:06:48,425 - BEGIN (implicit)
2025-02-23 17:06:48,427 - BEGIN (implicit)
2025-02-23 17:06:48,427 - SELECT department.department_name AS department_department_name, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount ELSE %(param_1)s END + CASE WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_2)s END) AS total_expenditure 
FROM ledger INNER JOIN department ON ledger.department_id = department.department_id 
WHERE ledger.department_id = %(department_id_1)s AND ledger.general_ledger_date BETWEEN %(general_ledger_date_1)s AND %(general_ledger_date_2)s GROUP BY department.department_name ORDER BY sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount ELSE %(param_1)s END + CASE WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_2)s END) DESC 
 LIMIT %(param_3)s
2025-02-23 17:06:48,431 - [cached since 2131s ago] {'ledger_description_1': 'Expenses', 'amount_1': 0, 'param_1': 0, 'ledger_description_2': 'Revenues', 'amount_2': 0, 'param_2': 0, 'department_id_1': 121, 'general_ledger_date_1': '2015-02-10', 'general_ledger_date_2': '2020-12-16', 'param_3': 10}
2025-02-23 17:06:48,430 - SELECT cost_center.cost_center_description AS cost_center_cost_center_description, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s) THEN ledger.amount ELSE %(param_1)s END) - sum(CASE WHEN (ledger.ledger_description = %(ledger_description_2)s) THEN ledger.amount ELSE %(param_2)s END) AS roi 
FROM ledger INNER JOIN cost_center ON ledger.cost_center_id = cost_center.cost_center_id 
WHERE ledger.department_id = %(department_id_1)s AND ledger.general_ledger_date BETWEEN %(general_ledger_date_1)s AND %(general_ledger_date_2)s GROUP BY cost_center.cost_center_description ORDER BY sum(ledger.amount) DESC 
 LIMIT %(param_3)s
2025-02-23 17:06:48,429 - SELECT year(ledger.general_ledger_date) AS year, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s) THEN ledger.amount ELSE %(param_1)s END) AS total_revenue, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_2)s) THEN ledger.amount ELSE %(param_2)s END) AS total_expenses 
FROM ledger 
WHERE ledger.general_ledger_date BETWEEN %(general_ledger_date_1)s AND %(general_ledger_date_2)s AND ledger.department_id = %(department_id_1)s GROUP BY year(ledger.general_ledger_date) ORDER BY year(ledger.general_ledger_date)
2025-02-23 17:06:48,432 - [cached since 1.268e+04s ago] {'ledger_description_1': 'Revenues', 'param_1': 0, 'ledger_description_2': 'Expenses', 'param_2': 0, 'department_id_1': 121, 'general_ledger_date_1': '2015-02-10', 'general_ledger_date_2': '2020-12-16', 'param_3': 5}
2025-02-23 17:06:48,433 - [cached since 2131s ago] {'ledger_description_1': 'Revenues', 'param_1': 0, 'ledger_description_2': 'Expenses', 'param_2': 0, 'general_ledger_date_1': '2015-02-10', 'general_ledger_date_2': '2020-12-16', 'department_id_1': 121}
2025-02-23 17:06:48,661 - ROLLBACK
2025-02-23 17:06:48,661 - ROLLBACK
2025-02-23 17:06:48,661 - ROLLBACK
2025-02-23 17:06:48,662 - GET http://127.0.0.1:8000/api/top-budget/?department=121&start_date=2015-02-10&end_date=2020-12-16 - 0.24 ms
2025-02-23 17:06:48,666 - GET http://127.0.0.1:8000/api/revenue-expenses/?department=121&start_date=2015-02-10&end_date=2020-12-16 - 0.24 ms
2025-02-23 17:06:48,670 - GET http://127.0.0.1:8000/api/top-roi/?department=121&start_date=2015-02-10&end_date=2020-12-16 - 0.25 ms
2025-02-23 17:07:01,041 - BEGIN (implicit)
2025-02-23 17:07:01,044 - BEGIN (implicit)
2025-02-23 17:07:01,045 - SELECT cost_center.cost_center_description AS cost_center_cost_center_description, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s) THEN ledger.amount ELSE %(param_1)s END) - sum(CASE WHEN (ledger.ledger_description = %(ledger_description_2)s) THEN ledger.amount ELSE %(param_2)s END) AS roi 
FROM ledger INNER JOIN cost_center ON ledger.cost_center_id = cost_center.cost_center_id 
WHERE ledger.department_id = %(department_id_1)s AND ledger.general_ledger_date BETWEEN %(general_ledger_date_1)s AND %(general_ledger_date_2)s GROUP BY cost_center.cost_center_description ORDER BY sum(ledger.amount) DESC 
 LIMIT %(param_3)s
2025-02-23 17:07:01,046 - SELECT department.department_name AS department_department_name, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount ELSE %(param_1)s END + CASE WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_2)s END) AS total_expenditure 
FROM ledger INNER JOIN department ON ledger.department_id = department.department_id 
WHERE ledger.department_id = %(department_id_1)s AND ledger.general_ledger_date BETWEEN %(general_ledger_date_1)s AND %(general_ledger_date_2)s GROUP BY department.department_name ORDER BY sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount ELSE %(param_1)s END + CASE WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_2)s END) DESC 
 LIMIT %(param_3)s
2025-02-23 17:07:01,048 - [cached since 1.27e+04s ago] {'ledger_description_1': 'Revenues', 'param_1': 0, 'ledger_description_2': 'Expenses', 'param_2': 0, 'department_id_1': 112, 'general_ledger_date_1': '2015-02-10', 'general_ledger_date_2': '2020-12-16', 'param_3': 5}
2025-02-23 17:07:01,051 - BEGIN (implicit)
2025-02-23 17:07:01,052 - [cached since 2143s ago] {'ledger_description_1': 'Expenses', 'amount_1': 0, 'param_1': 0, 'ledger_description_2': 'Revenues', 'amount_2': 0, 'param_2': 0, 'department_id_1': 112, 'general_ledger_date_1': '2015-02-10', 'general_ledger_date_2': '2020-12-16', 'param_3': 10}
2025-02-23 17:07:01,054 - SELECT year(ledger.general_ledger_date) AS year, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s) THEN ledger.amount ELSE %(param_1)s END) AS total_revenue, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_2)s) THEN ledger.amount ELSE %(param_2)s END) AS total_expenses 
FROM ledger 
WHERE ledger.general_ledger_date BETWEEN %(general_ledger_date_1)s AND %(general_ledger_date_2)s AND ledger.department_id = %(department_id_1)s GROUP BY year(ledger.general_ledger_date) ORDER BY year(ledger.general_ledger_date)
2025-02-23 17:07:01,054 - [cached since 2143s ago] {'ledger_description_1': 'Revenues', 'param_1': 0, 'ledger_description_2': 'Expenses', 'param_2': 0, 'general_ledger_date_1': '2015-02-10', 'general_ledger_date_2': '2020-12-16', 'department_id_1': 112}
2025-02-23 17:07:01,660 - ROLLBACK
2025-02-23 17:07:01,661 - ROLLBACK
2025-02-23 17:07:01,661 - ROLLBACK
2025-02-23 17:07:01,663 - GET http://127.0.0.1:8000/api/top-budget/?department=112&start_date=2015-02-10&end_date=2020-12-16 - 0.62 ms
2025-02-23 17:07:01,665 - GET http://127.0.0.1:8000/api/revenue-expenses/?department=112&start_date=2015-02-10&end_date=2020-12-16 - 0.62 ms
2025-02-23 17:07:01,667 - GET http://127.0.0.1:8000/api/top-roi/?department=112&start_date=2015-02-10&end_date=2020-12-16 - 0.63 ms
2025-02-23 17:07:46,549 - BEGIN (implicit)
2025-02-23 17:07:46,551 - BEGIN (implicit)
2025-02-23 17:07:46,552 - SELECT department.department_name AS department_department_name, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount ELSE %(param_1)s END + CASE WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_2)s END) AS total_expenditure 
FROM ledger INNER JOIN department ON ledger.department_id = department.department_id 
WHERE ledger.department_id = %(department_id_1)s AND ledger.general_ledger_date BETWEEN %(general_ledger_date_1)s AND %(general_ledger_date_2)s GROUP BY department.department_name ORDER BY sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount ELSE %(param_1)s END + CASE WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_2)s END) DESC 
 LIMIT %(param_3)s
2025-02-23 17:07:46,554 - BEGIN (implicit)
2025-02-23 17:07:46,555 - SELECT cost_center.cost_center_description AS cost_center_cost_center_description, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s) THEN ledger.amount ELSE %(param_1)s END) - sum(CASE WHEN (ledger.ledger_description = %(ledger_description_2)s) THEN ledger.amount ELSE %(param_2)s END) AS roi 
FROM ledger INNER JOIN cost_center ON ledger.cost_center_id = cost_center.cost_center_id 
WHERE ledger.department_id = %(department_id_1)s AND ledger.general_ledger_date BETWEEN %(general_ledger_date_1)s AND %(general_ledger_date_2)s GROUP BY cost_center.cost_center_description ORDER BY sum(ledger.amount) DESC 
 LIMIT %(param_3)s
2025-02-23 17:07:46,555 - [cached since 2189s ago] {'ledger_description_1': 'Expenses', 'amount_1': 0, 'param_1': 0, 'ledger_description_2': 'Revenues', 'amount_2': 0, 'param_2': 0, 'department_id_1': 210, 'general_ledger_date_1': '2015-02-10', 'general_ledger_date_2': '2020-12-16', 'param_3': 10}
2025-02-23 17:07:46,557 - SELECT year(ledger.general_ledger_date) AS year, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s) THEN ledger.amount ELSE %(param_1)s END) AS total_revenue, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_2)s) THEN ledger.amount ELSE %(param_2)s END) AS total_expenses 
FROM ledger 
WHERE ledger.general_ledger_date BETWEEN %(general_ledger_date_1)s AND %(general_ledger_date_2)s AND ledger.department_id = %(department_id_1)s GROUP BY year(ledger.general_ledger_date) ORDER BY year(ledger.general_ledger_date)
2025-02-23 17:07:46,605 - [cached since 2189s ago] {'ledger_description_1': 'Revenues', 'param_1': 0, 'ledger_description_2': 'Expenses', 'param_2': 0, 'general_ledger_date_1': '2015-02-10', 'general_ledger_date_2': '2020-12-16', 'department_id_1': 210}
2025-02-23 17:07:46,601 - [cached since 1.274e+04s ago] {'ledger_description_1': 'Revenues', 'param_1': 0, 'ledger_description_2': 'Expenses', 'param_2': 0, 'department_id_1': 210, 'general_ledger_date_1': '2015-02-10', 'general_ledger_date_2': '2020-12-16', 'param_3': 5}
2025-02-23 17:07:47,181 - ROLLBACK
2025-02-23 17:07:47,182 - ROLLBACK
2025-02-23 17:07:47,184 - GET http://127.0.0.1:8000/api/revenue-expenses/?department=210&start_date=2015-02-10&end_date=2020-12-16 - 0.64 ms
2025-02-23 17:07:47,182 - ROLLBACK
2025-02-23 17:07:47,187 - GET http://127.0.0.1:8000/api/top-roi/?department=210&start_date=2015-02-10&end_date=2020-12-16 - 0.65 ms
2025-02-23 17:07:47,192 - GET http://127.0.0.1:8000/api/top-budget/?department=210&start_date=2015-02-10&end_date=2020-12-16 - 0.65 ms
2025-02-23 17:07:52,239 - BEGIN (implicit)
2025-02-23 17:07:52,241 - BEGIN (implicit)
2025-02-23 17:07:52,242 - BEGIN (implicit)
2025-02-23 17:07:52,243 - SELECT cost_center.cost_center_description AS cost_center_cost_center_description, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s) THEN ledger.amount ELSE %(param_1)s END) - sum(CASE WHEN (ledger.ledger_description = %(ledger_description_2)s) THEN ledger.amount ELSE %(param_2)s END) AS roi 
FROM ledger INNER JOIN cost_center ON ledger.cost_center_id = cost_center.cost_center_id 
WHERE ledger.department_id = %(department_id_1)s AND ledger.general_ledger_date BETWEEN %(general_ledger_date_1)s AND %(general_ledger_date_2)s GROUP BY cost_center.cost_center_description ORDER BY sum(ledger.amount) DESC 
 LIMIT %(param_3)s
2025-02-23 17:07:52,244 - SELECT year(ledger.general_ledger_date) AS year, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s) THEN ledger.amount ELSE %(param_1)s END) AS total_revenue, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_2)s) THEN ledger.amount ELSE %(param_2)s END) AS total_expenses 
FROM ledger 
WHERE ledger.general_ledger_date BETWEEN %(general_ledger_date_1)s AND %(general_ledger_date_2)s AND ledger.department_id = %(department_id_1)s GROUP BY year(ledger.general_ledger_date) ORDER BY year(ledger.general_ledger_date)
2025-02-23 17:07:52,245 - SELECT department.department_name AS department_department_name, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount ELSE %(param_1)s END + CASE WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_2)s END) AS total_expenditure 
FROM ledger INNER JOIN department ON ledger.department_id = department.department_id 
WHERE ledger.department_id = %(department_id_1)s AND ledger.general_ledger_date BETWEEN %(general_ledger_date_1)s AND %(general_ledger_date_2)s GROUP BY department.department_name ORDER BY sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount ELSE %(param_1)s END + CASE WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_2)s END) DESC 
 LIMIT %(param_3)s
2025-02-23 17:07:52,245 - [cached since 1.275e+04s ago] {'ledger_description_1': 'Revenues', 'param_1': 0, 'ledger_description_2': 'Expenses', 'param_2': 0, 'department_id_1': 220, 'general_ledger_date_1': '2015-02-10', 'general_ledger_date_2': '2020-12-16', 'param_3': 5}
2025-02-23 17:07:52,246 - [cached since 2194s ago] {'ledger_description_1': 'Revenues', 'param_1': 0, 'ledger_description_2': 'Expenses', 'param_2': 0, 'general_ledger_date_1': '2015-02-10', 'general_ledger_date_2': '2020-12-16', 'department_id_1': 220}
2025-02-23 17:07:52,248 - [cached since 2194s ago] {'ledger_description_1': 'Expenses', 'amount_1': 0, 'param_1': 0, 'ledger_description_2': 'Revenues', 'amount_2': 0, 'param_2': 0, 'department_id_1': 220, 'general_ledger_date_1': '2015-02-10', 'general_ledger_date_2': '2020-12-16', 'param_3': 10}
2025-02-23 17:07:53,481 - ROLLBACK
2025-02-23 17:07:53,481 - ROLLBACK
2025-02-23 17:07:53,483 - GET http://127.0.0.1:8000/api/top-budget/?department=220&start_date=2015-02-10&end_date=2020-12-16 - 1.25 ms
2025-02-23 17:07:53,481 - ROLLBACK
2025-02-23 17:07:53,486 - GET http://127.0.0.1:8000/api/top-roi/?department=220&start_date=2015-02-10&end_date=2020-12-16 - 1.25 ms
2025-02-23 17:07:53,486 - GET http://127.0.0.1:8000/api/revenue-expenses/?department=220&start_date=2015-02-10&end_date=2020-12-16 - 1.25 ms
2025-02-23 17:08:03,635 - BEGIN (implicit)
2025-02-23 17:08:03,637 - BEGIN (implicit)
2025-02-23 17:08:03,638 - BEGIN (implicit)
2025-02-23 17:08:03,639 - SELECT department.department_name AS department_department_name, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s) THEN ledger.amount ELSE %(param_1)s END) - sum(CASE WHEN (ledger.ledger_description = %(ledger_description_2)s) THEN ledger.amount ELSE %(param_2)s END) AS roi 
FROM ledger INNER JOIN department ON ledger.department_id = department.department_id 
WHERE ledger.general_ledger_date BETWEEN %(general_ledger_date_1)s AND %(general_ledger_date_2)s GROUP BY department.department_name ORDER BY sum(ledger.amount) DESC 
 LIMIT %(param_3)s
2025-02-23 17:08:03,640 - SELECT department.department_name AS department_department_name, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount ELSE %(param_1)s END + CASE WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_2)s END) AS total_expenditure 
FROM ledger INNER JOIN department ON ledger.department_id = department.department_id 
WHERE ledger.general_ledger_date BETWEEN %(general_ledger_date_1)s AND %(general_ledger_date_2)s GROUP BY department.department_name ORDER BY sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount ELSE %(param_1)s END + CASE WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_2)s END) DESC 
 LIMIT %(param_3)s
2025-02-23 17:08:03,643 - SELECT year(ledger.general_ledger_date) AS year, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s) THEN ledger.amount ELSE %(param_1)s END) AS total_revenue, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_2)s) THEN ledger.amount ELSE %(param_2)s END) AS total_expenses 
FROM ledger 
WHERE ledger.general_ledger_date BETWEEN %(general_ledger_date_1)s AND %(general_ledger_date_2)s GROUP BY year(ledger.general_ledger_date) ORDER BY year(ledger.general_ledger_date)
2025-02-23 17:08:03,643 - [cached since 2156s ago] {'ledger_description_1': 'Revenues', 'param_1': 0, 'ledger_description_2': 'Expenses', 'param_2': 0, 'general_ledger_date_1': '2015-02-10', 'general_ledger_date_2': '2020-12-16', 'param_3': 5}
2025-02-23 17:08:03,644 - [cached since 2156s ago] {'ledger_description_1': 'Expenses', 'amount_1': 0, 'param_1': 0, 'ledger_description_2': 'Revenues', 'amount_2': 0, 'param_2': 0, 'general_ledger_date_1': '2015-02-10', 'general_ledger_date_2': '2020-12-16', 'param_3': 10}
2025-02-23 17:08:03,644 - [cached since 2156s ago] {'ledger_description_1': 'Revenues', 'param_1': 0, 'ledger_description_2': 'Expenses', 'param_2': 0, 'general_ledger_date_1': '2015-02-10', 'general_ledger_date_2': '2020-12-16'}
2025-02-23 17:08:04,828 - ROLLBACK
2025-02-23 17:08:04,830 - GET http://127.0.0.1:8000/api/revenue-expenses/?start_date=2015-02-10&end_date=2020-12-16 - 1.20 ms
2025-02-23 17:08:33,545 - ROLLBACK
2025-02-23 17:08:33,546 - ROLLBACK
2025-02-23 17:08:33,547 - GET http://127.0.0.1:8000/api/top-roi/?start_date=2015-02-10&end_date=2020-12-16 - 29.92 ms
2025-02-23 17:08:33,548 - GET http://127.0.0.1:8000/api/top-budget/?start_date=2015-02-10&end_date=2020-12-16 - 29.92 ms
2025-02-23 17:08:41,392 - BEGIN (implicit)
2025-02-23 17:08:41,394 - BEGIN (implicit)
2025-02-23 17:08:41,394 - BEGIN (implicit)
2025-02-23 17:08:41,395 - SELECT cost_center.cost_center_description AS cost_center_cost_center_description, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s) THEN ledger.amount ELSE %(param_1)s END) - sum(CASE WHEN (ledger.ledger_description = %(ledger_description_2)s) THEN ledger.amount ELSE %(param_2)s END) AS roi 
FROM ledger INNER JOIN cost_center ON ledger.cost_center_id = cost_center.cost_center_id 
WHERE ledger.department_id = %(department_id_1)s AND ledger.general_ledger_date BETWEEN %(general_ledger_date_1)s AND %(general_ledger_date_2)s GROUP BY cost_center.cost_center_description ORDER BY sum(ledger.amount) DESC 
 LIMIT %(param_3)s
2025-02-23 17:08:41,396 - SELECT department.department_name AS department_department_name, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount ELSE %(param_1)s END + CASE WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_2)s END) AS total_expenditure 
FROM ledger INNER JOIN department ON ledger.department_id = department.department_id 
WHERE ledger.department_id = %(department_id_1)s AND ledger.general_ledger_date BETWEEN %(general_ledger_date_1)s AND %(general_ledger_date_2)s GROUP BY department.department_name ORDER BY sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount ELSE %(param_1)s END + CASE WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_2)s END) DESC 
 LIMIT %(param_3)s
2025-02-23 17:08:41,396 - SELECT year(ledger.general_ledger_date) AS year, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s) THEN ledger.amount ELSE %(param_1)s END) AS total_revenue, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_2)s) THEN ledger.amount ELSE %(param_2)s END) AS total_expenses 
FROM ledger 
WHERE ledger.general_ledger_date BETWEEN %(general_ledger_date_1)s AND %(general_ledger_date_2)s AND ledger.department_id = %(department_id_1)s GROUP BY year(ledger.general_ledger_date) ORDER BY year(ledger.general_ledger_date)
2025-02-23 17:08:41,398 - [cached since 1.28e+04s ago] {'ledger_description_1': 'Revenues', 'param_1': 0, 'ledger_description_2': 'Expenses', 'param_2': 0, 'department_id_1': 102, 'general_ledger_date_1': '2015-02-10', 'general_ledger_date_2': '2020-12-16', 'param_3': 5}
2025-02-23 17:08:41,399 - [cached since 2244s ago] {'ledger_description_1': 'Expenses', 'amount_1': 0, 'param_1': 0, 'ledger_description_2': 'Revenues', 'amount_2': 0, 'param_2': 0, 'department_id_1': 102, 'general_ledger_date_1': '2015-02-10', 'general_ledger_date_2': '2020-12-16', 'param_3': 10}
2025-02-23 17:08:41,399 - [cached since 2244s ago] {'ledger_description_1': 'Revenues', 'param_1': 0, 'ledger_description_2': 'Expenses', 'param_2': 0, 'general_ledger_date_1': '2015-02-10', 'general_ledger_date_2': '2020-12-16', 'department_id_1': 102}
2025-02-23 17:08:42,466 - ROLLBACK
2025-02-23 17:08:42,466 - ROLLBACK
2025-02-23 17:08:42,470 - GET http://127.0.0.1:8000/api/top-budget/?department=102&start_date=2015-02-10&end_date=2020-12-16 - 1.08 ms
2025-02-23 17:08:42,470 - ROLLBACK
2025-02-23 17:08:42,471 - GET http://127.0.0.1:8000/api/top-roi/?department=102&start_date=2015-02-10&end_date=2020-12-16 - 1.08 ms
2025-02-23 17:08:42,474 - GET http://127.0.0.1:8000/api/revenue-expenses/?department=102&start_date=2015-02-10&end_date=2020-12-16 - 1.09 ms
2025-02-23 17:08:45,215 - BEGIN (implicit)
2025-02-23 17:08:45,216 - BEGIN (implicit)
2025-02-23 17:08:45,217 - BEGIN (implicit)
2025-02-23 17:08:45,218 - SELECT department.department_name AS department_department_name, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s) THEN ledger.amount ELSE %(param_1)s END) - sum(CASE WHEN (ledger.ledger_description = %(ledger_description_2)s) THEN ledger.amount ELSE %(param_2)s END) AS roi 
FROM ledger INNER JOIN department ON ledger.department_id = department.department_id 
WHERE ledger.general_ledger_date BETWEEN %(general_ledger_date_1)s AND %(general_ledger_date_2)s GROUP BY department.department_name ORDER BY sum(ledger.amount) DESC 
 LIMIT %(param_3)s
2025-02-23 17:08:45,218 - SELECT year(ledger.general_ledger_date) AS year, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s) THEN ledger.amount ELSE %(param_1)s END) AS total_revenue, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_2)s) THEN ledger.amount ELSE %(param_2)s END) AS total_expenses 
FROM ledger 
WHERE ledger.general_ledger_date BETWEEN %(general_ledger_date_1)s AND %(general_ledger_date_2)s GROUP BY year(ledger.general_ledger_date) ORDER BY year(ledger.general_ledger_date)
2025-02-23 17:08:45,219 - SELECT department.department_name AS department_department_name, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount ELSE %(param_1)s END + CASE WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_2)s END) AS total_expenditure 
FROM ledger INNER JOIN department ON ledger.department_id = department.department_id 
WHERE ledger.general_ledger_date BETWEEN %(general_ledger_date_1)s AND %(general_ledger_date_2)s GROUP BY department.department_name ORDER BY sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount ELSE %(param_1)s END + CASE WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_2)s END) DESC 
 LIMIT %(param_3)s
2025-02-23 17:08:45,220 - [cached since 2198s ago] {'ledger_description_1': 'Revenues', 'param_1': 0, 'ledger_description_2': 'Expenses', 'param_2': 0, 'general_ledger_date_1': '2015-02-10', 'general_ledger_date_2': '2020-12-16', 'param_3': 5}
2025-02-23 17:08:45,221 - [cached since 2198s ago] {'ledger_description_1': 'Revenues', 'param_1': 0, 'ledger_description_2': 'Expenses', 'param_2': 0, 'general_ledger_date_1': '2015-02-10', 'general_ledger_date_2': '2020-12-16'}
2025-02-23 17:08:45,224 - [cached since 2198s ago] {'ledger_description_1': 'Expenses', 'amount_1': 0, 'param_1': 0, 'ledger_description_2': 'Revenues', 'amount_2': 0, 'param_2': 0, 'general_ledger_date_1': '2015-02-10', 'general_ledger_date_2': '2020-12-16', 'param_3': 10}
2025-02-23 17:08:46,217 - ROLLBACK
2025-02-23 17:08:46,219 - GET http://127.0.0.1:8000/api/revenue-expenses/?start_date=2015-02-10&end_date=2020-12-16 - 1.01 ms
2025-02-23 17:09:14,434 - ROLLBACK
2025-02-23 17:09:14,435 - ROLLBACK
2025-02-23 17:09:14,437 - GET http://127.0.0.1:8000/api/top-budget/?start_date=2015-02-10&end_date=2020-12-16 - 29.23 ms
2025-02-23 17:09:14,439 - GET http://127.0.0.1:8000/api/top-roi/?start_date=2015-02-10&end_date=2020-12-16 - 29.23 ms
2025-02-23 17:12:07,129 - BEGIN (implicit)
2025-02-23 17:12:07,130 - SELECT department.department_name AS department_department_name, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s) THEN ledger.amount ELSE %(param_1)s END) - sum(CASE WHEN (ledger.ledger_description = %(ledger_description_2)s) THEN ledger.amount ELSE %(param_2)s END) AS roi 
FROM ledger INNER JOIN department ON ledger.department_id = department.department_id GROUP BY department.department_name ORDER BY sum(ledger.amount) DESC 
 LIMIT %(param_3)s
2025-02-23 17:12:07,131 - [cached since 1.316e+04s ago] {'ledger_description_1': 'Revenues', 'param_1': 0, 'ledger_description_2': 'Expenses', 'param_2': 0, 'param_3': 5}
2025-02-23 17:12:08,783 - ROLLBACK
2025-02-23 17:12:08,785 - GET http://127.0.0.1:8000/api/top-roi/ - 1.66 ms
2025-02-23 17:12:15,377 - BEGIN (implicit)
2025-02-23 17:12:15,379 - SELECT department.department_name AS department_department_name, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s) THEN ledger.amount ELSE %(param_1)s END) - sum(CASE WHEN (ledger.ledger_description = %(ledger_description_2)s) THEN ledger.amount ELSE %(param_2)s END) AS roi 
FROM ledger INNER JOIN department ON ledger.department_id = department.department_id GROUP BY department.department_name ORDER BY sum(ledger.amount) DESC 
 LIMIT %(param_3)s
2025-02-23 17:12:15,380 - [cached since 1.317e+04s ago] {'ledger_description_1': 'Revenues', 'param_1': 0, 'ledger_description_2': 'Expenses', 'param_2': 0, 'param_3': 5}
2025-02-23 17:12:17,175 - ROLLBACK
2025-02-23 17:12:17,176 - GET http://127.0.0.1:8000/api/top-roi/ - 1.80 ms
2025-02-23 17:12:23,248 - BEGIN (implicit)
2025-02-23 17:12:23,249 - SELECT department.department_name AS department_department_name, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount ELSE %(param_1)s END + CASE WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_2)s END) AS total_expenditure 
FROM ledger INNER JOIN department ON ledger.department_id = department.department_id GROUP BY department.department_name ORDER BY sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount ELSE %(param_1)s END + CASE WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_2)s END) DESC 
 LIMIT %(param_3)s
2025-02-23 17:12:23,250 - [cached since 8669s ago] {'ledger_description_1': 'Expenses', 'amount_1': 0, 'param_1': 0, 'ledger_description_2': 'Revenues', 'amount_2': 0, 'param_2': 0, 'param_3': 10}
2025-02-23 17:12:25,221 - ROLLBACK
2025-02-23 17:12:25,223 - GET http://127.0.0.1:8000/api/top-budget/ - 1.98 ms
2025-02-23 17:13:08,105 - BEGIN (implicit)
2025-02-23 17:13:08,107 - BEGIN (implicit)
2025-02-23 17:13:08,108 - SELECT cost_center.cost_center_description AS cost_center_cost_center_description, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s) THEN ledger.amount ELSE %(param_1)s END) - sum(CASE WHEN (ledger.ledger_description = %(ledger_description_2)s) THEN ledger.amount ELSE %(param_2)s END) AS roi 
FROM ledger INNER JOIN cost_center ON ledger.cost_center_id = cost_center.cost_center_id 
WHERE ledger.department_id = %(department_id_1)s AND ledger.general_ledger_date BETWEEN %(general_ledger_date_1)s AND %(general_ledger_date_2)s GROUP BY cost_center.cost_center_description ORDER BY sum(ledger.amount) DESC 
 LIMIT %(param_3)s
2025-02-23 17:13:08,110 - SELECT department.department_name AS department_department_name, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount ELSE %(param_1)s END + CASE WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_2)s END) AS total_expenditure 
FROM ledger INNER JOIN department ON ledger.department_id = department.department_id 
WHERE ledger.department_id = %(department_id_1)s AND ledger.general_ledger_date BETWEEN %(general_ledger_date_1)s AND %(general_ledger_date_2)s GROUP BY department.department_name ORDER BY sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount ELSE %(param_1)s END + CASE WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_2)s END) DESC 
 LIMIT %(param_3)s
2025-02-23 17:13:08,112 - [cached since 2510s ago] {'ledger_description_1': 'Expenses', 'amount_1': 0, 'param_1': 0, 'ledger_description_2': 'Revenues', 'amount_2': 0, 'param_2': 0, 'department_id_1': 102, 'general_ledger_date_1': '2015-02-10', 'general_ledger_date_2': '2020-12-16', 'param_3': 10}
2025-02-23 17:13:08,111 - [cached since 1.306e+04s ago] {'ledger_description_1': 'Revenues', 'param_1': 0, 'ledger_description_2': 'Expenses', 'param_2': 0, 'department_id_1': 102, 'general_ledger_date_1': '2015-02-10', 'general_ledger_date_2': '2020-12-16', 'param_3': 5}
2025-02-23 17:13:08,111 - BEGIN (implicit)
2025-02-23 17:13:08,114 - SELECT year(ledger.general_ledger_date) AS year, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s) THEN ledger.amount ELSE %(param_1)s END) AS total_revenue, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_2)s) THEN ledger.amount ELSE %(param_2)s END) AS total_expenses 
FROM ledger 
WHERE ledger.general_ledger_date BETWEEN %(general_ledger_date_1)s AND %(general_ledger_date_2)s AND ledger.department_id = %(department_id_1)s GROUP BY year(ledger.general_ledger_date) ORDER BY year(ledger.general_ledger_date)
2025-02-23 17:13:08,115 - [cached since 2510s ago] {'ledger_description_1': 'Revenues', 'param_1': 0, 'ledger_description_2': 'Expenses', 'param_2': 0, 'general_ledger_date_1': '2015-02-10', 'general_ledger_date_2': '2020-12-16', 'department_id_1': 102}
2025-02-23 17:13:08,966 - ROLLBACK
2025-02-23 17:13:08,968 - GET http://127.0.0.1:8000/api/top-budget/?department=102&start_date=2015-02-10&end_date=2020-12-16 - 0.87 ms
2025-02-23 17:13:08,968 - ROLLBACK
2025-02-23 17:13:08,969 - GET http://127.0.0.1:8000/api/top-roi/?department=102&start_date=2015-02-10&end_date=2020-12-16 - 0.87 ms
2025-02-23 17:13:08,971 - ROLLBACK
2025-02-23 17:13:08,973 - GET http://127.0.0.1:8000/api/revenue-expenses/?department=102&start_date=2015-02-10&end_date=2020-12-16 - 0.87 ms
2025-02-23 17:13:11,499 - BEGIN (implicit)
2025-02-23 17:13:11,500 - BEGIN (implicit)
2025-02-23 17:13:11,501 - BEGIN (implicit)
2025-02-23 17:13:11,502 - SELECT department.department_name AS department_department_name, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s) THEN ledger.amount ELSE %(param_1)s END) - sum(CASE WHEN (ledger.ledger_description = %(ledger_description_2)s) THEN ledger.amount ELSE %(param_2)s END) AS roi 
FROM ledger INNER JOIN department ON ledger.department_id = department.department_id 
WHERE ledger.general_ledger_date BETWEEN %(general_ledger_date_1)s AND %(general_ledger_date_2)s GROUP BY department.department_name ORDER BY sum(ledger.amount) DESC 
 LIMIT %(param_3)s
2025-02-23 17:13:11,503 - SELECT department.department_name AS department_department_name, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount ELSE %(param_1)s END + CASE WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_2)s END) AS total_expenditure 
FROM ledger INNER JOIN department ON ledger.department_id = department.department_id 
WHERE ledger.general_ledger_date BETWEEN %(general_ledger_date_1)s AND %(general_ledger_date_2)s GROUP BY department.department_name ORDER BY sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount ELSE %(param_1)s END + CASE WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_2)s END) DESC 
 LIMIT %(param_3)s
2025-02-23 17:13:11,504 - SELECT year(ledger.general_ledger_date) AS year, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s) THEN ledger.amount ELSE %(param_1)s END) AS total_revenue, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_2)s) THEN ledger.amount ELSE %(param_2)s END) AS total_expenses 
FROM ledger 
WHERE ledger.general_ledger_date BETWEEN %(general_ledger_date_1)s AND %(general_ledger_date_2)s GROUP BY year(ledger.general_ledger_date) ORDER BY year(ledger.general_ledger_date)
2025-02-23 17:13:11,504 - [cached since 2464s ago] {'ledger_description_1': 'Revenues', 'param_1': 0, 'ledger_description_2': 'Expenses', 'param_2': 0, 'general_ledger_date_1': '2015-02-10', 'general_ledger_date_2': '2020-12-16', 'param_3': 5}
2025-02-23 17:13:11,504 - [cached since 2464s ago] {'ledger_description_1': 'Expenses', 'amount_1': 0, 'param_1': 0, 'ledger_description_2': 'Revenues', 'amount_2': 0, 'param_2': 0, 'general_ledger_date_1': '2015-02-10', 'general_ledger_date_2': '2020-12-16', 'param_3': 10}
2025-02-23 17:13:11,505 - [cached since 2464s ago] {'ledger_description_1': 'Revenues', 'param_1': 0, 'ledger_description_2': 'Expenses', 'param_2': 0, 'general_ledger_date_1': '2015-02-10', 'general_ledger_date_2': '2020-12-16'}
2025-02-23 17:13:12,545 - ROLLBACK
2025-02-23 17:13:12,548 - GET http://127.0.0.1:8000/api/revenue-expenses/?start_date=2015-02-10&end_date=2020-12-16 - 1.05 ms
2025-02-23 17:13:52,141 - BEGIN (implicit)
2025-02-23 17:13:52,143 - SELECT department.department_name AS department_department_name, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s) THEN ledger.amount ELSE %(param_1)s END) - sum(CASE WHEN (ledger.ledger_description = %(ledger_description_2)s) THEN ledger.amount ELSE %(param_2)s END) AS roi 
FROM ledger INNER JOIN department ON ledger.department_id = department.department_id GROUP BY department.department_name ORDER BY sum(ledger.amount) DESC 
 LIMIT %(param_3)s
2025-02-23 17:13:52,143 - [cached since 1.327e+04s ago] {'ledger_description_1': 'Revenues', 'param_1': 0, 'ledger_description_2': 'Expenses', 'param_2': 0, 'param_3': 5}
2025-02-23 17:13:54,209 - ROLLBACK
2025-02-23 17:13:54,211 - GET http://127.0.0.1:8000/api/top-roi/ - 2.07 ms
2025-02-23 17:14:36,673 - ROLLBACK
2025-02-23 17:14:36,673 - ROLLBACK
2025-02-23 17:14:36,674 - GET http://127.0.0.1:8000/api/top-roi/?start_date=2015-02-10&end_date=2020-12-16 - 85.18 ms
2025-02-23 17:14:36,676 - GET http://127.0.0.1:8000/api/top-budget/?start_date=2015-02-10&end_date=2020-12-16 - 85.18 ms
2025-02-23 17:16:37,959 - GET http://127.0.0.1:8000/api/initialise/ - 0.00 ms
2025-02-23 17:16:38,076 - BEGIN (implicit)
2025-02-23 17:16:38,077 - SELECT department.department_name AS department_department_name, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s) THEN ledger.amount ELSE %(param_1)s END) - sum(CASE WHEN (ledger.ledger_description = %(ledger_description_2)s) THEN ledger.amount ELSE %(param_2)s END) AS roi 
FROM ledger INNER JOIN department ON ledger.department_id = department.department_id GROUP BY department.department_name ORDER BY sum(ledger.amount) DESC 
 LIMIT %(param_3)s
2025-02-23 17:16:38,078 - [cached since 1.343e+04s ago] {'ledger_description_1': 'Revenues', 'param_1': 0, 'ledger_description_2': 'Expenses', 'param_2': 0, 'param_3': 5}
2025-02-23 17:16:38,082 - BEGIN (implicit)
2025-02-23 17:16:38,088 - SELECT year(ledger.general_ledger_date) AS year, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s) THEN ledger.amount ELSE %(param_1)s END) AS total_revenue, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_2)s) THEN ledger.amount ELSE %(param_2)s END) AS total_expenses 
FROM ledger 
WHERE true = 1 GROUP BY year(ledger.general_ledger_date) ORDER BY year(ledger.general_ledger_date)
2025-02-23 17:16:38,088 - GET http://127.0.0.1:8000/api/initialise/ - 0.00 ms
2025-02-23 17:16:38,088 - [cached since 8783s ago] {'ledger_description_1': 'Revenues', 'param_1': 0, 'ledger_description_2': 'Expenses', 'param_2': 0}
2025-02-23 17:16:38,092 - BEGIN (implicit)
2025-02-23 17:16:38,093 - SELECT department.department_name AS department_department_name, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount ELSE %(param_1)s END + CASE WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_2)s END) AS total_expenditure 
FROM ledger INNER JOIN department ON ledger.department_id = department.department_id GROUP BY department.department_name ORDER BY sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount ELSE %(param_1)s END + CASE WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_2)s END) DESC 
 LIMIT %(param_3)s
2025-02-23 17:16:38,094 - [cached since 8924s ago] {'ledger_description_1': 'Expenses', 'amount_1': 0, 'param_1': 0, 'ledger_description_2': 'Revenues', 'amount_2': 0, 'param_2': 0, 'param_3': 10}
2025-02-23 17:16:39,047 - BEGIN (implicit)
2025-02-23 17:16:39,048 - SELECT department.department_id AS department_department_id, department.department_name AS department_department_name 
FROM department
2025-02-23 17:16:39,049 - [cached since 1.343e+04s ago] {}
2025-02-23 17:16:39,052 - SELECT min(ledger.general_ledger_date) AS min_1 
FROM ledger
2025-02-23 17:16:39,052 - [cached since 1.343e+04s ago] {}
2025-02-23 17:16:39,678 - SELECT max(ledger.general_ledger_date) AS max_1 
FROM ledger
2025-02-23 17:16:39,679 - [cached since 1.343e+04s ago] {}
2025-02-23 17:16:39,754 - ROLLBACK
2025-02-23 17:16:39,755 - GET http://127.0.0.1:8000/api/revenue-expenses/ - 1.68 ms
2025-02-23 17:16:39,762 - BEGIN (implicit)
2025-02-23 17:16:39,764 - SELECT year(ledger.general_ledger_date) AS year, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s) THEN ledger.amount ELSE %(param_1)s END) AS total_revenue, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_2)s) THEN ledger.amount ELSE %(param_2)s END) AS total_expenses 
FROM ledger 
WHERE true = 1 GROUP BY year(ledger.general_ledger_date) ORDER BY year(ledger.general_ledger_date)
2025-02-23 17:16:39,765 - [cached since 8785s ago] {'ledger_description_1': 'Revenues', 'param_1': 0, 'ledger_description_2': 'Expenses', 'param_2': 0}
2025-02-23 17:16:40,155 - ROLLBACK
2025-02-23 17:16:40,156 - GET http://127.0.0.1:8000/api/initialise - 1.11 ms
2025-02-23 17:16:40,160 - BEGIN (implicit)
2025-02-23 17:16:40,162 - SELECT department.department_id AS department_department_id, department.department_name AS department_department_name 
FROM department
2025-02-23 17:16:40,163 - [cached since 1.343e+04s ago] {}
2025-02-23 17:16:40,165 - SELECT min(ledger.general_ledger_date) AS min_1 
FROM ledger
2025-02-23 17:16:40,166 - [cached since 1.343e+04s ago] {}
2025-02-23 17:16:40,645 - SELECT max(ledger.general_ledger_date) AS max_1 
FROM ledger
2025-02-23 17:16:40,646 - [cached since 1.343e+04s ago] {}
2025-02-23 17:16:41,020 - ROLLBACK
2025-02-23 17:16:41,022 - GET http://127.0.0.1:8000/api/top-roi/ - 2.95 ms
2025-02-23 17:16:41,028 - BEGIN (implicit)
2025-02-23 17:16:41,029 - SELECT department.department_name AS department_department_name, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s) THEN ledger.amount ELSE %(param_1)s END) - sum(CASE WHEN (ledger.ledger_description = %(ledger_description_2)s) THEN ledger.amount ELSE %(param_2)s END) AS roi 
FROM ledger INNER JOIN department ON ledger.department_id = department.department_id GROUP BY department.department_name ORDER BY sum(ledger.amount) DESC 
 LIMIT %(param_3)s
2025-02-23 17:16:41,030 - [cached since 1.343e+04s ago] {'ledger_description_1': 'Revenues', 'param_1': 0, 'ledger_description_2': 'Expenses', 'param_2': 0, 'param_3': 5}
2025-02-23 17:16:41,032 - ROLLBACK
2025-02-23 17:16:41,033 - GET http://127.0.0.1:8000/api/initialise - 0.87 ms
2025-02-23 17:16:41,072 - ROLLBACK
2025-02-23 17:16:41,073 - GET http://127.0.0.1:8000/api/revenue-expenses/ - 1.31 ms
2025-02-23 17:16:41,230 - ROLLBACK
2025-02-23 17:16:41,233 - GET http://127.0.0.1:8000/api/top-budget/ - 3.15 ms
2025-02-23 17:16:41,238 - BEGIN (implicit)
2025-02-23 17:16:41,239 - SELECT department.department_name AS department_department_name, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount ELSE %(param_1)s END + CASE WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_2)s END) AS total_expenditure 
FROM ledger INNER JOIN department ON ledger.department_id = department.department_id GROUP BY department.department_name ORDER BY sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount ELSE %(param_1)s END + CASE WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_2)s END) DESC 
 LIMIT %(param_3)s
2025-02-23 17:16:41,239 - [cached since 8927s ago] {'ledger_description_1': 'Expenses', 'amount_1': 0, 'param_1': 0, 'ledger_description_2': 'Revenues', 'amount_2': 0, 'param_2': 0, 'param_3': 10}
2025-02-23 17:16:43,110 - ROLLBACK
2025-02-23 17:16:43,112 - GET http://127.0.0.1:8000/api/top-roi/ - 2.09 ms
2025-02-23 17:16:43,308 - ROLLBACK
2025-02-23 17:16:43,310 - GET http://127.0.0.1:8000/api/top-budget/ - 2.08 ms
2025-02-23 17:16:55,028 - BEGIN (implicit)
2025-02-23 17:16:55,031 - BEGIN (implicit)
2025-02-23 17:16:55,032 - BEGIN (implicit)
2025-02-23 17:16:55,033 - SELECT department.department_name AS department_department_name, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s) THEN ledger.amount ELSE %(param_1)s END) - sum(CASE WHEN (ledger.ledger_description = %(ledger_description_2)s) THEN ledger.amount ELSE %(param_2)s END) AS roi 
FROM ledger INNER JOIN department ON ledger.department_id = department.department_id 
WHERE ledger.general_ledger_date BETWEEN %(general_ledger_date_1)s AND %(general_ledger_date_2)s GROUP BY department.department_name ORDER BY sum(ledger.amount) DESC 
 LIMIT %(param_3)s
2025-02-23 17:16:55,034 - SELECT department.department_name AS department_department_name, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount ELSE %(param_1)s END + CASE WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_2)s END) AS total_expenditure 
FROM ledger INNER JOIN department ON ledger.department_id = department.department_id 
WHERE ledger.general_ledger_date BETWEEN %(general_ledger_date_1)s AND %(general_ledger_date_2)s GROUP BY department.department_name ORDER BY sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount ELSE %(param_1)s END + CASE WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_2)s END) DESC 
 LIMIT %(param_3)s
2025-02-23 17:16:55,035 - SELECT year(ledger.general_ledger_date) AS year, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s) THEN ledger.amount ELSE %(param_1)s END) AS total_revenue, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_2)s) THEN ledger.amount ELSE %(param_2)s END) AS total_expenses 
FROM ledger 
WHERE ledger.general_ledger_date BETWEEN %(general_ledger_date_1)s AND %(general_ledger_date_2)s GROUP BY year(ledger.general_ledger_date) ORDER BY year(ledger.general_ledger_date)
2025-02-23 17:16:55,036 - [cached since 2688s ago] {'ledger_description_1': 'Revenues', 'param_1': 0, 'ledger_description_2': 'Expenses', 'param_2': 0, 'general_ledger_date_1': '2012-06-30', 'general_ledger_date_2': '2020-12-16', 'param_3': 5}
2025-02-23 17:16:55,036 - [cached since 2688s ago] {'ledger_description_1': 'Expenses', 'amount_1': 0, 'param_1': 0, 'ledger_description_2': 'Revenues', 'amount_2': 0, 'param_2': 0, 'general_ledger_date_1': '2012-06-30', 'general_ledger_date_2': '2020-12-16', 'param_3': 10}
2025-02-23 17:16:55,037 - [cached since 2688s ago] {'ledger_description_1': 'Revenues', 'param_1': 0, 'ledger_description_2': 'Expenses', 'param_2': 0, 'general_ledger_date_1': '2012-06-30', 'general_ledger_date_2': '2020-12-16'}
2025-02-23 17:16:56,286 - ROLLBACK
2025-02-23 17:16:56,288 - GET http://127.0.0.1:8000/api/revenue-expenses/?start_date=2012-06-30&end_date=2020-12-16 - 1.26 ms
2025-02-23 17:17:09,855 - BEGIN (implicit)
2025-02-23 17:17:09,856 - BEGIN (implicit)
2025-02-23 17:17:09,857 - SELECT department.department_name AS department_department_name, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount ELSE %(param_1)s END + CASE WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_2)s END) AS total_expenditure 
FROM ledger INNER JOIN department ON ledger.department_id = department.department_id 
WHERE ledger.general_ledger_date BETWEEN %(general_ledger_date_1)s AND %(general_ledger_date_2)s GROUP BY department.department_name ORDER BY sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount ELSE %(param_1)s END + CASE WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_2)s END) DESC 
 LIMIT %(param_3)s
2025-02-23 17:17:09,861 - SELECT department.department_name AS department_department_name, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s) THEN ledger.amount ELSE %(param_1)s END) - sum(CASE WHEN (ledger.ledger_description = %(ledger_description_2)s) THEN ledger.amount ELSE %(param_2)s END) AS roi 
FROM ledger INNER JOIN department ON ledger.department_id = department.department_id 
WHERE ledger.general_ledger_date BETWEEN %(general_ledger_date_1)s AND %(general_ledger_date_2)s GROUP BY department.department_name ORDER BY sum(ledger.amount) DESC 
 LIMIT %(param_3)s
2025-02-23 17:17:09,861 - [cached since 2702s ago] {'ledger_description_1': 'Expenses', 'amount_1': 0, 'param_1': 0, 'ledger_description_2': 'Revenues', 'amount_2': 0, 'param_2': 0, 'general_ledger_date_1': '2016-10-30', 'general_ledger_date_2': '2020-12-16', 'param_3': 10}
2025-02-23 17:17:09,862 - [cached since 2703s ago] {'ledger_description_1': 'Revenues', 'param_1': 0, 'ledger_description_2': 'Expenses', 'param_2': 0, 'general_ledger_date_1': '2016-10-30', 'general_ledger_date_2': '2020-12-16', 'param_3': 5}
2025-02-23 17:17:09,868 - BEGIN (implicit)
2025-02-23 17:17:09,869 - SELECT year(ledger.general_ledger_date) AS year, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s) THEN ledger.amount ELSE %(param_1)s END) AS total_revenue, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_2)s) THEN ledger.amount ELSE %(param_2)s END) AS total_expenses 
FROM ledger 
WHERE ledger.general_ledger_date BETWEEN %(general_ledger_date_1)s AND %(general_ledger_date_2)s GROUP BY year(ledger.general_ledger_date) ORDER BY year(ledger.general_ledger_date)
2025-02-23 17:17:09,870 - [cached since 2703s ago] {'ledger_description_1': 'Revenues', 'param_1': 0, 'ledger_description_2': 'Expenses', 'param_2': 0, 'general_ledger_date_1': '2016-10-30', 'general_ledger_date_2': '2020-12-16'}
2025-02-23 17:17:10,922 - ROLLBACK
2025-02-23 17:17:10,924 - GET http://127.0.0.1:8000/api/revenue-expenses/?start_date=2016-10-30&end_date=2020-12-16 - 1.08 ms
2025-02-23 17:17:33,233 - BEGIN (implicit)
2025-02-23 17:17:33,238 - SELECT year(ledger.general_ledger_date) AS year, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s) THEN ledger.amount ELSE %(param_1)s END) AS total_revenue, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_2)s) THEN ledger.amount ELSE %(param_2)s END) AS total_expenses 
FROM ledger 
WHERE ledger.general_ledger_date BETWEEN %(general_ledger_date_1)s AND %(general_ledger_date_2)s GROUP BY year(ledger.general_ledger_date) ORDER BY year(ledger.general_ledger_date)
2025-02-23 17:17:33,240 - [cached since 2726s ago] {'ledger_description_1': 'Revenues', 'param_1': 0, 'ledger_description_2': 'Expenses', 'param_2': 0, 'general_ledger_date_1': '2016-10-30', 'general_ledger_date_2': '2020-12-16'}
2025-02-23 17:17:34,908 - ROLLBACK
2025-02-23 17:17:34,910 - GET http://127.0.0.1:8000/api/revenue-expenses/?start_date=2016-10-30&end_date=2020-12-16 - 1.68 ms
2025-02-23 17:17:53,247 - BEGIN (implicit)
2025-02-23 17:17:53,249 - SELECT department.department_name AS department_department_name, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount ELSE %(param_1)s END + CASE WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_2)s END) AS total_expenditure 
FROM ledger INNER JOIN department ON ledger.department_id = department.department_id 
WHERE ledger.general_ledger_date BETWEEN %(general_ledger_date_1)s AND %(general_ledger_date_2)s GROUP BY department.department_name ORDER BY sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount ELSE %(param_1)s END + CASE WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_2)s END) DESC 
 LIMIT %(param_3)s
2025-02-23 17:17:53,251 - [cached since 2746s ago] {'ledger_description_1': 'Expenses', 'amount_1': 0, 'param_1': 0, 'ledger_description_2': 'Revenues', 'amount_2': 0, 'param_2': 0, 'general_ledger_date_1': '2016-10-30', 'general_ledger_date_2': '2020-12-16', 'param_3': 10}
2025-02-23 17:17:53,253 - BEGIN (implicit)
2025-02-23 17:17:53,254 - SELECT department.department_name AS department_department_name, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s) THEN ledger.amount ELSE %(param_1)s END) - sum(CASE WHEN (ledger.ledger_description = %(ledger_description_2)s) THEN ledger.amount ELSE %(param_2)s END) AS roi 
FROM ledger INNER JOIN department ON ledger.department_id = department.department_id 
WHERE ledger.general_ledger_date BETWEEN %(general_ledger_date_1)s AND %(general_ledger_date_2)s GROUP BY department.department_name ORDER BY sum(ledger.amount) DESC 
 LIMIT %(param_3)s
2025-02-23 17:17:53,256 - [cached since 2746s ago] {'ledger_description_1': 'Revenues', 'param_1': 0, 'ledger_description_2': 'Expenses', 'param_2': 0, 'general_ledger_date_1': '2016-10-30', 'general_ledger_date_2': '2020-12-16', 'param_3': 5}
2025-02-23 17:18:29,717 - ROLLBACK
2025-02-23 17:18:29,717 - ROLLBACK
2025-02-23 17:18:29,719 - GET http://127.0.0.1:8000/api/top-budget/?start_date=2012-06-30&end_date=2020-12-16 - 94.69 ms
2025-02-23 17:18:29,721 - GET http://127.0.0.1:8000/api/top-roi/?start_date=2012-06-30&end_date=2020-12-16 - 94.70 ms
2025-02-23 17:18:29,728 - BEGIN (implicit)
2025-02-23 17:18:29,730 - SELECT department.department_name AS department_department_name, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s) THEN ledger.amount ELSE %(param_1)s END) - sum(CASE WHEN (ledger.ledger_description = %(ledger_description_2)s) THEN ledger.amount ELSE %(param_2)s END) AS roi 
FROM ledger INNER JOIN department ON ledger.department_id = department.department_id 
WHERE ledger.general_ledger_date BETWEEN %(general_ledger_date_1)s AND %(general_ledger_date_2)s GROUP BY department.department_name ORDER BY sum(ledger.amount) DESC 
 LIMIT %(param_3)s
2025-02-23 17:18:29,731 - [cached since 2782s ago] {'ledger_description_1': 'Revenues', 'param_1': 0, 'ledger_description_2': 'Expenses', 'param_2': 0, 'general_ledger_date_1': '2019-02-28', 'general_ledger_date_2': '2020-12-16', 'param_3': 5}
2025-02-23 17:18:29,733 - BEGIN (implicit)
2025-02-23 17:18:29,734 - SELECT department.department_name AS department_department_name, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount ELSE %(param_1)s END + CASE WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_2)s END) AS total_expenditure 
FROM ledger INNER JOIN department ON ledger.department_id = department.department_id 
WHERE ledger.general_ledger_date BETWEEN %(general_ledger_date_1)s AND %(general_ledger_date_2)s GROUP BY department.department_name ORDER BY sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount ELSE %(param_1)s END + CASE WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_2)s END) DESC 
 LIMIT %(param_3)s
2025-02-23 17:18:29,735 - [cached since 2782s ago] {'ledger_description_1': 'Expenses', 'amount_1': 0, 'param_1': 0, 'ledger_description_2': 'Revenues', 'amount_2': 0, 'param_2': 0, 'general_ledger_date_1': '2019-02-28', 'general_ledger_date_2': '2020-12-16', 'param_3': 10}
2025-02-23 17:18:44,079 - ROLLBACK
2025-02-23 17:18:44,080 - ROLLBACK
2025-02-23 17:18:44,081 - GET http://127.0.0.1:8000/api/top-budget/?start_date=2016-10-30&end_date=2020-12-16 - 94.23 ms
2025-02-23 17:18:44,083 - GET http://127.0.0.1:8000/api/top-roi/?start_date=2016-10-30&end_date=2020-12-16 - 94.24 ms
2025-02-23 17:18:44,089 - BEGIN (implicit)
2025-02-23 17:18:44,089 - SELECT year(ledger.general_ledger_date) AS year, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s) THEN ledger.amount ELSE %(param_1)s END) AS total_revenue, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_2)s) THEN ledger.amount ELSE %(param_2)s END) AS total_expenses 
FROM ledger 
WHERE ledger.general_ledger_date BETWEEN %(general_ledger_date_1)s AND %(general_ledger_date_2)s GROUP BY year(ledger.general_ledger_date) ORDER BY year(ledger.general_ledger_date)
2025-02-23 17:18:44,090 - [cached since 2797s ago] {'ledger_description_1': 'Revenues', 'param_1': 0, 'ledger_description_2': 'Expenses', 'param_2': 0, 'general_ledger_date_1': '2019-02-28', 'general_ledger_date_2': '2020-12-16'}
2025-02-23 17:18:45,106 - ROLLBACK
2025-02-23 17:18:45,107 - GET http://127.0.0.1:8000/api/revenue-expenses/?start_date=2019-02-28&end_date=2020-12-16 - 1.02 ms
2025-02-23 17:19:27,511 - ROLLBACK
2025-02-23 17:19:27,511 - ROLLBACK
2025-02-23 17:19:27,513 - GET http://127.0.0.1:8000/api/top-roi/?start_date=2016-10-30&end_date=2020-12-16 - 94.28 ms
2025-02-23 17:19:27,516 - GET http://127.0.0.1:8000/api/top-budget/?start_date=2016-10-30&end_date=2020-12-16 - 94.28 ms
2025-02-23 17:19:58,529 - ROLLBACK
2025-02-23 17:19:58,529 - ROLLBACK
2025-02-23 17:19:58,530 - GET http://127.0.0.1:8000/api/top-roi/?start_date=2019-02-28&end_date=2020-12-16 - 88.81 ms
2025-02-23 17:19:58,538 - GET http://127.0.0.1:8000/api/top-budget/?start_date=2019-02-28&end_date=2020-12-16 - 88.81 ms
2025-02-23 17:22:24,918 - GET http://127.0.0.1:8000/api/initialise/ - 0.00 ms
2025-02-23 17:22:25,049 - BEGIN (implicit)
2025-02-23 17:22:25,052 - BEGIN (implicit)
2025-02-23 17:22:25,053 - SELECT department.department_name AS department_department_name, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s) THEN ledger.amount ELSE %(param_1)s END) - sum(CASE WHEN (ledger.ledger_description = %(ledger_description_2)s) THEN ledger.amount ELSE %(param_2)s END) AS roi 
FROM ledger INNER JOIN department ON ledger.department_id = department.department_id GROUP BY department.department_name ORDER BY sum(ledger.amount) DESC 
 LIMIT %(param_3)s
2025-02-23 17:22:25,056 - SELECT department.department_name AS department_department_name, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount ELSE %(param_1)s END + CASE WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_2)s END) AS total_expenditure 
FROM ledger INNER JOIN department ON ledger.department_id = department.department_id GROUP BY department.department_name ORDER BY sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount ELSE %(param_1)s END + CASE WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_2)s END) DESC 
 LIMIT %(param_3)s
2025-02-23 17:22:25,056 - [cached since 1.378e+04s ago] {'ledger_description_1': 'Revenues', 'param_1': 0, 'ledger_description_2': 'Expenses', 'param_2': 0, 'param_3': 5}
2025-02-23 17:22:25,060 - [cached since 9271s ago] {'ledger_description_1': 'Expenses', 'amount_1': 0, 'param_1': 0, 'ledger_description_2': 'Revenues', 'amount_2': 0, 'param_2': 0, 'param_3': 10}
2025-02-23 17:22:25,063 - GET http://127.0.0.1:8000/api/initialise/ - 0.00 ms
2025-02-23 17:22:25,062 - BEGIN (implicit)
2025-02-23 17:22:25,064 - SELECT year(ledger.general_ledger_date) AS year, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s) THEN ledger.amount ELSE %(param_1)s END) AS total_revenue, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_2)s) THEN ledger.amount ELSE %(param_2)s END) AS total_expenses 
FROM ledger 
WHERE true = 1 GROUP BY year(ledger.general_ledger_date) ORDER BY year(ledger.general_ledger_date)
2025-02-23 17:22:25,065 - [cached since 9130s ago] {'ledger_description_1': 'Revenues', 'param_1': 0, 'ledger_description_2': 'Expenses', 'param_2': 0}
2025-02-23 17:22:25,899 - BEGIN (implicit)
2025-02-23 17:22:25,900 - SELECT department.department_id AS department_department_id, department.department_name AS department_department_name 
FROM department
2025-02-23 17:22:25,906 - [cached since 1.378e+04s ago] {}
2025-02-23 17:22:25,911 - SELECT min(ledger.general_ledger_date) AS min_1 
FROM ledger
2025-02-23 17:22:25,912 - [cached since 1.378e+04s ago] {}
2025-02-23 17:22:25,913 - SELECT max(ledger.general_ledger_date) AS max_1 
FROM ledger
2025-02-23 17:22:25,914 - [cached since 1.378e+04s ago] {}
2025-02-23 17:22:25,917 - ROLLBACK
2025-02-23 17:22:25,921 - GET http://127.0.0.1:8000/api/initialise - 0.03 ms
2025-02-23 17:22:25,927 - BEGIN (implicit)
2025-02-23 17:22:25,928 - SELECT department.department_id AS department_department_id, department.department_name AS department_department_name 
FROM department
2025-02-23 17:22:25,929 - [cached since 1.378e+04s ago] {}
2025-02-23 17:22:25,932 - SELECT min(ledger.general_ledger_date) AS min_1 
FROM ledger
2025-02-23 17:22:25,932 - [cached since 1.378e+04s ago] {}
2025-02-23 17:22:25,936 - SELECT max(ledger.general_ledger_date) AS max_1 
FROM ledger
2025-02-23 17:22:25,937 - [cached since 1.378e+04s ago] {}
2025-02-23 17:22:25,940 - ROLLBACK
2025-02-23 17:22:25,947 - GET http://127.0.0.1:8000/api/initialise - 0.02 ms
2025-02-23 17:22:26,540 - ROLLBACK
2025-02-23 17:22:26,542 - GET http://127.0.0.1:8000/api/revenue-expenses/ - 1.50 ms
2025-02-23 17:22:26,547 - BEGIN (implicit)
2025-02-23 17:22:26,548 - SELECT year(ledger.general_ledger_date) AS year, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s) THEN ledger.amount ELSE %(param_1)s END) AS total_revenue, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_2)s) THEN ledger.amount ELSE %(param_2)s END) AS total_expenses 
FROM ledger 
WHERE true = 1 GROUP BY year(ledger.general_ledger_date) ORDER BY year(ledger.general_ledger_date)
2025-02-23 17:22:26,549 - [cached since 9132s ago] {'ledger_description_1': 'Revenues', 'param_1': 0, 'ledger_description_2': 'Expenses', 'param_2': 0}
2025-02-23 17:22:27,612 - ROLLBACK
2025-02-23 17:22:27,614 - GET http://127.0.0.1:8000/api/revenue-expenses/ - 1.07 ms
2025-02-23 17:22:27,635 - ROLLBACK
2025-02-23 17:22:27,638 - GET http://127.0.0.1:8000/api/top-roi/ - 2.59 ms
2025-02-23 17:22:27,642 - BEGIN (implicit)
2025-02-23 17:22:27,643 - SELECT department.department_name AS department_department_name, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s) THEN ledger.amount ELSE %(param_1)s END) - sum(CASE WHEN (ledger.ledger_description = %(ledger_description_2)s) THEN ledger.amount ELSE %(param_2)s END) AS roi 
FROM ledger INNER JOIN department ON ledger.department_id = department.department_id GROUP BY department.department_name ORDER BY sum(ledger.amount) DESC 
 LIMIT %(param_3)s
2025-02-23 17:22:27,644 - [cached since 1.378e+04s ago] {'ledger_description_1': 'Revenues', 'param_1': 0, 'ledger_description_2': 'Expenses', 'param_2': 0, 'param_3': 5}
2025-02-23 17:22:27,778 - ROLLBACK
2025-02-23 17:22:27,779 - GET http://127.0.0.1:8000/api/top-budget/ - 2.74 ms
2025-02-23 17:22:27,783 - BEGIN (implicit)
2025-02-23 17:22:27,784 - SELECT department.department_name AS department_department_name, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount ELSE %(param_1)s END + CASE WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_2)s END) AS total_expenditure 
FROM ledger INNER JOIN department ON ledger.department_id = department.department_id GROUP BY department.department_name ORDER BY sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount ELSE %(param_1)s END + CASE WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_2)s END) DESC 
 LIMIT %(param_3)s
2025-02-23 17:22:27,784 - [cached since 9274s ago] {'ledger_description_1': 'Expenses', 'amount_1': 0, 'param_1': 0, 'ledger_description_2': 'Revenues', 'amount_2': 0, 'param_2': 0, 'param_3': 10}
2025-02-23 17:22:29,620 - ROLLBACK
2025-02-23 17:22:29,621 - GET http://127.0.0.1:8000/api/top-roi/ - 1.98 ms
2025-02-23 17:22:29,824 - ROLLBACK
2025-02-23 17:22:29,825 - GET http://127.0.0.1:8000/api/top-budget/ - 2.04 ms
2025-02-23 17:22:30,062 - GET http://127.0.0.1:8000/api/initialise/ - 0.00 ms
2025-02-23 17:22:30,167 - BEGIN (implicit)
2025-02-23 17:22:30,168 - BEGIN (implicit)
2025-02-23 17:22:30,170 - BEGIN (implicit)
2025-02-23 17:22:30,176 - GET http://127.0.0.1:8000/api/initialise/ - 0.00 ms
2025-02-23 17:22:30,172 - SELECT department.department_name AS department_department_name, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s) THEN ledger.amount ELSE %(param_1)s END) - sum(CASE WHEN (ledger.ledger_description = %(ledger_description_2)s) THEN ledger.amount ELSE %(param_2)s END) AS roi 
FROM ledger INNER JOIN department ON ledger.department_id = department.department_id GROUP BY department.department_name ORDER BY sum(ledger.amount) DESC 
 LIMIT %(param_3)s
2025-02-23 17:22:30,175 - SELECT department.department_name AS department_department_name, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount ELSE %(param_1)s END + CASE WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_2)s END) AS total_expenditure 
FROM ledger INNER JOIN department ON ledger.department_id = department.department_id GROUP BY department.department_name ORDER BY sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount ELSE %(param_1)s END + CASE WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_2)s END) DESC 
 LIMIT %(param_3)s
2025-02-23 17:22:30,176 - SELECT year(ledger.general_ledger_date) AS year, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s) THEN ledger.amount ELSE %(param_1)s END) AS total_revenue, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_2)s) THEN ledger.amount ELSE %(param_2)s END) AS total_expenses 
FROM ledger 
WHERE true = 1 GROUP BY year(ledger.general_ledger_date) ORDER BY year(ledger.general_ledger_date)
2025-02-23 17:22:30,178 - [cached since 1.378e+04s ago] {'ledger_description_1': 'Revenues', 'param_1': 0, 'ledger_description_2': 'Expenses', 'param_2': 0, 'param_3': 5}
2025-02-23 17:22:30,178 - [cached since 9276s ago] {'ledger_description_1': 'Expenses', 'amount_1': 0, 'param_1': 0, 'ledger_description_2': 'Revenues', 'amount_2': 0, 'param_2': 0, 'param_3': 10}
2025-02-23 17:22:30,179 - [cached since 9135s ago] {'ledger_description_1': 'Revenues', 'param_1': 0, 'ledger_description_2': 'Expenses', 'param_2': 0}
2025-02-23 17:22:30,666 - BEGIN (implicit)
2025-02-23 17:22:30,667 - SELECT department.department_id AS department_department_id, department.department_name AS department_department_name 
FROM department
2025-02-23 17:22:30,668 - [cached since 1.378e+04s ago] {}
2025-02-23 17:22:30,671 - SELECT min(ledger.general_ledger_date) AS min_1 
FROM ledger
2025-02-23 17:22:30,671 - [cached since 1.378e+04s ago] {}
2025-02-23 17:22:30,676 - SELECT max(ledger.general_ledger_date) AS max_1 
FROM ledger
2025-02-23 17:22:30,677 - [cached since 1.378e+04s ago] {}
2025-02-23 17:22:30,684 - ROLLBACK
2025-02-23 17:22:30,685 - GET http://127.0.0.1:8000/api/initialise - 0.02 ms
2025-02-23 17:22:30,690 - BEGIN (implicit)
2025-02-23 17:22:30,690 - SELECT department.department_id AS department_department_id, department.department_name AS department_department_name 
FROM department
2025-02-23 17:22:30,692 - [cached since 1.378e+04s ago] {}
2025-02-23 17:22:30,694 - SELECT min(ledger.general_ledger_date) AS min_1 
FROM ledger
2025-02-23 17:22:30,695 - [cached since 1.378e+04s ago] {}
2025-02-23 17:22:30,697 - SELECT max(ledger.general_ledger_date) AS max_1 
FROM ledger
2025-02-23 17:22:30,698 - [cached since 1.378e+04s ago] {}
2025-02-23 17:22:30,704 - ROLLBACK
2025-02-23 17:22:30,706 - GET http://127.0.0.1:8000/api/initialise - 0.02 ms
2025-02-23 17:22:31,600 - ROLLBACK
2025-02-23 17:22:31,602 - GET http://127.0.0.1:8000/api/revenue-expenses/ - 1.44 ms
2025-02-23 17:22:31,608 - BEGIN (implicit)
2025-02-23 17:22:31,610 - SELECT year(ledger.general_ledger_date) AS year, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s) THEN ledger.amount ELSE %(param_1)s END) AS total_revenue, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_2)s) THEN ledger.amount ELSE %(param_2)s END) AS total_expenses 
FROM ledger 
WHERE true = 1 GROUP BY year(ledger.general_ledger_date) ORDER BY year(ledger.general_ledger_date)
2025-02-23 17:22:31,610 - [cached since 9137s ago] {'ledger_description_1': 'Revenues', 'param_1': 0, 'ledger_description_2': 'Expenses', 'param_2': 0}
2025-02-23 17:22:32,528 - ROLLBACK
2025-02-23 17:22:32,529 - GET http://127.0.0.1:8000/api/top-roi/ - 2.37 ms
2025-02-23 17:22:32,535 - BEGIN (implicit)
2025-02-23 17:22:32,536 - SELECT department.department_name AS department_department_name, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s) THEN ledger.amount ELSE %(param_1)s END) - sum(CASE WHEN (ledger.ledger_description = %(ledger_description_2)s) THEN ledger.amount ELSE %(param_2)s END) AS roi 
FROM ledger INNER JOIN department ON ledger.department_id = department.department_id GROUP BY department.department_name ORDER BY sum(ledger.amount) DESC 
 LIMIT %(param_3)s
2025-02-23 17:22:32,536 - [cached since 1.379e+04s ago] {'ledger_description_1': 'Revenues', 'param_1': 0, 'ledger_description_2': 'Expenses', 'param_2': 0, 'param_3': 5}
2025-02-23 17:22:32,631 - ROLLBACK
2025-02-23 17:22:32,632 - GET http://127.0.0.1:8000/api/revenue-expenses/ - 1.03 ms
2025-02-23 17:22:32,650 - ROLLBACK
2025-02-23 17:22:32,652 - GET http://127.0.0.1:8000/api/top-budget/ - 2.49 ms
2025-02-23 17:22:32,658 - BEGIN (implicit)
2025-02-23 17:22:32,659 - SELECT department.department_name AS department_department_name, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount ELSE %(param_1)s END + CASE WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_2)s END) AS total_expenditure 
FROM ledger INNER JOIN department ON ledger.department_id = department.department_id GROUP BY department.department_name ORDER BY sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount ELSE %(param_1)s END + CASE WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_2)s END) DESC 
 LIMIT %(param_3)s
2025-02-23 17:22:32,660 - [cached since 9278s ago] {'ledger_description_1': 'Expenses', 'amount_1': 0, 'param_1': 0, 'ledger_description_2': 'Revenues', 'amount_2': 0, 'param_2': 0, 'param_3': 10}
2025-02-23 17:22:34,538 - ROLLBACK
2025-02-23 17:22:34,542 - GET http://127.0.0.1:8000/api/top-roi/ - 2.01 ms
2025-02-23 17:22:34,766 - ROLLBACK
2025-02-23 17:22:34,768 - GET http://127.0.0.1:8000/api/top-budget/ - 2.11 ms
2025-02-23 17:22:41,830 - BEGIN (implicit)
2025-02-23 17:22:41,831 - BEGIN (implicit)
2025-02-23 17:22:41,840 - BEGIN (implicit)
2025-02-23 17:22:41,837 - SELECT department.department_name AS department_department_name, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s) THEN ledger.amount ELSE %(param_1)s END) - sum(CASE WHEN (ledger.ledger_description = %(ledger_description_2)s) THEN ledger.amount ELSE %(param_2)s END) AS roi 
FROM ledger INNER JOIN department ON ledger.department_id = department.department_id 
WHERE ledger.general_ledger_date >= %(general_ledger_date_1)s GROUP BY department.department_name ORDER BY sum(ledger.amount) DESC 
 LIMIT %(param_3)s
2025-02-23 17:22:41,841 - SELECT year(ledger.general_ledger_date) AS year, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s) THEN ledger.amount ELSE %(param_1)s END) AS total_revenue, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_2)s) THEN ledger.amount ELSE %(param_2)s END) AS total_expenses 
FROM ledger 
WHERE true = 1 GROUP BY year(ledger.general_ledger_date) ORDER BY year(ledger.general_ledger_date)
2025-02-23 17:22:41,841 - SELECT department.department_name AS department_department_name, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount ELSE %(param_1)s END + CASE WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_2)s END) AS total_expenditure 
FROM ledger INNER JOIN department ON ledger.department_id = department.department_id GROUP BY department.department_name ORDER BY sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount ELSE %(param_1)s END + CASE WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_2)s END) DESC 
 LIMIT %(param_3)s
2025-02-23 17:22:41,842 - [generated in 0.00584s] {'ledger_description_1': 'Revenues', 'param_1': 0, 'ledger_description_2': 'Expenses', 'param_2': 0, 'general_ledger_date_1': '2016-02-29', 'param_3': 5}
2025-02-23 17:22:41,843 - [cached since 9147s ago] {'ledger_description_1': 'Revenues', 'param_1': 0, 'ledger_description_2': 'Expenses', 'param_2': 0}
2025-02-23 17:22:41,843 - [cached since 9288s ago] {'ledger_description_1': 'Expenses', 'amount_1': 0, 'param_1': 0, 'ledger_description_2': 'Revenues', 'amount_2': 0, 'param_2': 0, 'param_3': 10}
2025-02-23 17:22:43,052 - ROLLBACK
2025-02-23 17:22:43,053 - GET http://127.0.0.1:8000/api/revenue-expenses/?start_date=2016-02-29 - 1.23 ms
2025-02-23 17:22:43,414 - ROLLBACK
2025-02-23 17:22:43,415 - GET http://127.0.0.1:8000/api/top-roi/?start_date=2016-02-29 - 1.59 ms
2025-02-23 17:22:44,051 - ROLLBACK
2025-02-23 17:22:44,053 - GET http://127.0.0.1:8000/api/top-budget/?start_date=2016-02-29 - 2.23 ms
2025-02-23 17:22:51,727 - BEGIN (implicit)
2025-02-23 17:22:51,729 - BEGIN (implicit)
2025-02-23 17:22:51,730 - BEGIN (implicit)
2025-02-23 17:22:51,731 - SELECT department.department_name AS department_department_name, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount ELSE %(param_1)s END + CASE WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_2)s END) AS total_expenditure 
FROM ledger INNER JOIN department ON ledger.department_id = department.department_id GROUP BY department.department_name ORDER BY sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount ELSE %(param_1)s END + CASE WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_2)s END) DESC 
 LIMIT %(param_3)s
2025-02-23 17:22:51,732 - SELECT year(ledger.general_ledger_date) AS year, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s) THEN ledger.amount ELSE %(param_1)s END) AS total_revenue, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_2)s) THEN ledger.amount ELSE %(param_2)s END) AS total_expenses 
FROM ledger 
WHERE true = 1 GROUP BY year(ledger.general_ledger_date) ORDER BY year(ledger.general_ledger_date)
2025-02-23 17:22:51,732 - SELECT department.department_name AS department_department_name, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s) THEN ledger.amount ELSE %(param_1)s END) - sum(CASE WHEN (ledger.ledger_description = %(ledger_description_2)s) THEN ledger.amount ELSE %(param_2)s END) AS roi 
FROM ledger INNER JOIN department ON ledger.department_id = department.department_id 
WHERE ledger.general_ledger_date >= %(general_ledger_date_1)s GROUP BY department.department_name ORDER BY sum(ledger.amount) DESC 
 LIMIT %(param_3)s
2025-02-23 17:22:51,733 - [cached since 9298s ago] {'ledger_description_1': 'Expenses', 'amount_1': 0, 'param_1': 0, 'ledger_description_2': 'Revenues', 'amount_2': 0, 'param_2': 0, 'param_3': 10}
2025-02-23 17:22:51,734 - [cached since 9157s ago] {'ledger_description_1': 'Revenues', 'param_1': 0, 'ledger_description_2': 'Expenses', 'param_2': 0}
2025-02-23 17:22:51,735 - [cached since 9.898s ago] {'ledger_description_1': 'Revenues', 'param_1': 0, 'ledger_description_2': 'Expenses', 'param_2': 0, 'general_ledger_date_1': '2017-06-29', 'param_3': 5}
2025-02-23 17:22:52,996 - ROLLBACK
2025-02-23 17:22:52,999 - GET http://127.0.0.1:8000/api/revenue-expenses/?start_date=2017-06-29 - 1.28 ms
2025-02-23 17:22:53,215 - ROLLBACK
2025-02-23 17:22:53,216 - GET http://127.0.0.1:8000/api/top-roi/?start_date=2017-06-29 - 1.49 ms
2025-02-23 17:22:53,988 - ROLLBACK
2025-02-23 17:22:53,989 - GET http://127.0.0.1:8000/api/top-budget/?start_date=2017-06-29 - 2.27 ms
2025-02-23 17:23:03,635 - BEGIN (implicit)
2025-02-23 17:23:03,637 - BEGIN (implicit)
2025-02-23 17:23:03,639 - BEGIN (implicit)
2025-02-23 17:23:03,639 - SELECT department.department_name AS department_department_name, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s) THEN ledger.amount ELSE %(param_1)s END) - sum(CASE WHEN (ledger.ledger_description = %(ledger_description_2)s) THEN ledger.amount ELSE %(param_2)s END) AS roi 
FROM ledger INNER JOIN department ON ledger.department_id = department.department_id 
WHERE ledger.general_ledger_date >= %(general_ledger_date_1)s GROUP BY department.department_name ORDER BY sum(ledger.amount) DESC 
 LIMIT %(param_3)s
2025-02-23 17:23:03,640 - SELECT department.department_name AS department_department_name, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount ELSE %(param_1)s END + CASE WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_2)s END) AS total_expenditure 
FROM ledger INNER JOIN department ON ledger.department_id = department.department_id GROUP BY department.department_name ORDER BY sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount ELSE %(param_1)s END + CASE WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_2)s END) DESC 
 LIMIT %(param_3)s
2025-02-23 17:23:03,641 - SELECT year(ledger.general_ledger_date) AS year, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s) THEN ledger.amount ELSE %(param_1)s END) AS total_revenue, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_2)s) THEN ledger.amount ELSE %(param_2)s END) AS total_expenses 
FROM ledger 
WHERE true = 1 GROUP BY year(ledger.general_ledger_date) ORDER BY year(ledger.general_ledger_date)
2025-02-23 17:23:03,641 - [cached since 21.8s ago] {'ledger_description_1': 'Revenues', 'param_1': 0, 'ledger_description_2': 'Expenses', 'param_2': 0, 'general_ledger_date_1': '2012-02-29', 'param_3': 5}
2025-02-23 17:23:03,642 - [cached since 9309s ago] {'ledger_description_1': 'Expenses', 'amount_1': 0, 'param_1': 0, 'ledger_description_2': 'Revenues', 'amount_2': 0, 'param_2': 0, 'param_3': 10}
2025-02-23 17:23:03,643 - [cached since 9169s ago] {'ledger_description_1': 'Revenues', 'param_1': 0, 'ledger_description_2': 'Expenses', 'param_2': 0}
2025-02-23 17:23:04,856 - ROLLBACK
2025-02-23 17:23:04,858 - GET http://127.0.0.1:8000/api/revenue-expenses/?start_date=2012-02-29 - 1.23 ms
2025-02-23 17:23:05,729 - ROLLBACK
2025-02-23 17:23:05,730 - GET http://127.0.0.1:8000/api/top-roi/?start_date=2012-02-29 - 2.10 ms
2025-02-23 17:23:05,918 - ROLLBACK
2025-02-23 17:23:05,921 - GET http://127.0.0.1:8000/api/top-budget/?start_date=2012-02-29 - 2.29 ms
2025-02-23 17:23:15,923 - BEGIN (implicit)
2025-02-23 17:23:15,925 - BEGIN (implicit)
2025-02-23 17:23:15,925 - BEGIN (implicit)
2025-02-23 17:23:15,926 - SELECT department.department_name AS department_department_name, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s) THEN ledger.amount ELSE %(param_1)s END) - sum(CASE WHEN (ledger.ledger_description = %(ledger_description_2)s) THEN ledger.amount ELSE %(param_2)s END) AS roi 
FROM ledger INNER JOIN department ON ledger.department_id = department.department_id GROUP BY department.department_name ORDER BY sum(ledger.amount) DESC 
 LIMIT %(param_3)s
2025-02-23 17:23:15,928 - [cached since 1.383e+04s ago] {'ledger_description_1': 'Revenues', 'param_1': 0, 'ledger_description_2': 'Expenses', 'param_2': 0, 'param_3': 5}
2025-02-23 17:23:15,928 - SELECT department.department_name AS department_department_name, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount ELSE %(param_1)s END + CASE WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_2)s END) AS total_expenditure 
FROM ledger INNER JOIN department ON ledger.department_id = department.department_id GROUP BY department.department_name ORDER BY sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount ELSE %(param_1)s END + CASE WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_2)s END) DESC 
 LIMIT %(param_3)s
2025-02-23 17:23:15,927 - SELECT year(ledger.general_ledger_date) AS year, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s) THEN ledger.amount ELSE %(param_1)s END) AS total_revenue, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_2)s) THEN ledger.amount ELSE %(param_2)s END) AS total_expenses 
FROM ledger 
WHERE true = 1 GROUP BY year(ledger.general_ledger_date) ORDER BY year(ledger.general_ledger_date)
2025-02-23 17:23:15,930 - [cached since 9322s ago] {'ledger_description_1': 'Expenses', 'amount_1': 0, 'param_1': 0, 'ledger_description_2': 'Revenues', 'amount_2': 0, 'param_2': 0, 'param_3': 10}
2025-02-23 17:23:15,930 - [cached since 9181s ago] {'ledger_description_1': 'Revenues', 'param_1': 0, 'ledger_description_2': 'Expenses', 'param_2': 0}
2025-02-23 17:23:17,141 - ROLLBACK
2025-02-23 17:23:17,143 - GET http://127.0.0.1:8000/api/revenue-expenses/ - 1.23 ms
2025-02-23 17:23:18,032 - ROLLBACK
2025-02-23 17:23:18,033 - ROLLBACK
2025-02-23 17:23:18,033 - GET http://127.0.0.1:8000/api/top-roi/ - 2.12 ms
2025-02-23 17:23:18,035 - GET http://127.0.0.1:8000/api/top-budget/ - 2.12 ms
2025-02-23 17:24:21,533 - GET http://127.0.0.1:8000/api/initialise/ - 0.00 ms
2025-02-23 17:24:24,419 - GET http://127.0.0.1:8000/api/initialise/ - 0.00 ms
2025-02-23 17:24:24,447 - SELECT DATABASE()
2025-02-23 17:24:24,448 - [raw sql] {}
2025-02-23 17:24:24,450 - SELECT @@sql_mode
2025-02-23 17:24:24,450 - [raw sql] {}
2025-02-23 17:24:24,451 - SELECT @@lower_case_table_names
2025-02-23 17:24:24,452 - [raw sql] {}
2025-02-23 17:24:24,454 - BEGIN (implicit)
2025-02-23 17:24:24,461 - BEGIN (implicit)
2025-02-23 17:24:24,467 - SELECT department.department_name AS department_department_name, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount ELSE %(param_1)s END + CASE WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_2)s END) AS total_expenditure 
FROM ledger INNER JOIN department ON ledger.department_id = department.department_id GROUP BY department.department_name ORDER BY sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount ELSE %(param_1)s END + CASE WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_2)s END) DESC 
 LIMIT %(param_3)s
2025-02-23 17:24:24,468 - SELECT department.department_id AS department_department_id, department.department_name AS department_department_name 
FROM department
2025-02-23 17:24:24,469 - BEGIN (implicit)
2025-02-23 17:24:24,469 - [generated in 0.00295s] {'ledger_description_1': 'Expenses', 'amount_1': 0, 'param_1': 0, 'ledger_description_2': 'Revenues', 'amount_2': 0, 'param_2': 0, 'param_3': 10}
2025-02-23 17:24:24,471 - BEGIN (implicit)
2025-02-23 17:24:24,471 - [generated in 0.00228s] {}
2025-02-23 17:24:24,474 - SELECT year(ledger.general_ledger_date) AS time, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_1)s END) AS total_revenue, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_3)s AND ledger.amount > %(amount_3)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_4)s AND ledger.amount < %(amount_4)s) THEN -ledger.amount ELSE %(param_2)s END) AS total_expenses 
FROM ledger GROUP BY year(ledger.general_ledger_date) ORDER BY year(ledger.general_ledger_date)
2025-02-23 17:24:24,477 - SELECT department.department_name AS department_department_name, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s) THEN ledger.amount ELSE %(param_1)s END) - sum(CASE WHEN (ledger.ledger_description = %(ledger_description_2)s) THEN ledger.amount ELSE %(param_2)s END) AS roi 
FROM ledger INNER JOIN department ON ledger.department_id = department.department_id GROUP BY department.department_name ORDER BY sum(ledger.amount) DESC 
 LIMIT %(param_3)s
2025-02-23 17:24:24,478 - [generated in 0.00394s] {'ledger_description_1': 'Revenues', 'amount_1': 0, 'ledger_description_2': 'Expenses', 'amount_2': 0, 'param_1': 0, 'ledger_description_3': 'Expenses', 'amount_3': 0, 'ledger_description_4': 'Revenues', 'amount_4': 0, 'param_2': 0}
2025-02-23 17:24:24,478 - [generated in 0.00151s] {'ledger_description_1': 'Revenues', 'param_1': 0, 'ledger_description_2': 'Expenses', 'param_2': 0, 'param_3': 5}
2025-02-23 17:24:24,480 - SELECT min(ledger.general_ledger_date) AS min_1 
FROM ledger
2025-02-23 17:24:24,482 - [generated in 0.00155s] {}
2025-02-23 17:24:24,484 - SELECT max(ledger.general_ledger_date) AS max_1 
FROM ledger
2025-02-23 17:24:24,485 - [generated in 0.00074s] {}
2025-02-23 17:24:24,488 - ROLLBACK
2025-02-23 17:24:24,490 - GET http://127.0.0.1:8000/api/initialise - 0.07 ms
2025-02-23 17:24:24,494 - BEGIN (implicit)
2025-02-23 17:24:24,495 - SELECT department.department_id AS department_department_id, department.department_name AS department_department_name 
FROM department
2025-02-23 17:24:24,496 - [cached since 0.02737s ago] {}
2025-02-23 17:24:24,499 - SELECT min(ledger.general_ledger_date) AS min_1 
FROM ledger
2025-02-23 17:24:24,499 - [cached since 0.01899s ago] {}
2025-02-23 17:24:24,501 - SELECT max(ledger.general_ledger_date) AS max_1 
FROM ledger
2025-02-23 17:24:24,502 - [cached since 0.01765s ago] {}
2025-02-23 17:24:24,504 - ROLLBACK
2025-02-23 17:24:24,506 - GET http://127.0.0.1:8000/api/initialise - 0.01 ms
2025-02-23 17:24:25,687 - ROLLBACK
2025-02-23 17:24:25,688 - GET http://127.0.0.1:8000/api/revenue-expenses/ - 1.27 ms
2025-02-23 17:24:25,693 - BEGIN (implicit)
2025-02-23 17:24:25,694 - SELECT year(ledger.general_ledger_date) AS time, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_1)s END) AS total_revenue, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_3)s AND ledger.amount > %(amount_3)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_4)s AND ledger.amount < %(amount_4)s) THEN -ledger.amount ELSE %(param_2)s END) AS total_expenses 
FROM ledger GROUP BY year(ledger.general_ledger_date) ORDER BY year(ledger.general_ledger_date)
2025-02-23 17:24:25,695 - [cached since 1.221s ago] {'ledger_description_1': 'Revenues', 'amount_1': 0, 'ledger_description_2': 'Expenses', 'amount_2': 0, 'param_1': 0, 'ledger_description_3': 'Expenses', 'amount_3': 0, 'ledger_description_4': 'Revenues', 'amount_4': 0, 'param_2': 0}
2025-02-23 17:24:26,332 - ROLLBACK
2025-02-23 17:24:26,334 - GET http://127.0.0.1:8000/api/top-roi/ - 1.92 ms
2025-02-23 17:24:26,338 - BEGIN (implicit)
2025-02-23 17:24:26,339 - SELECT department.department_name AS department_department_name, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s) THEN ledger.amount ELSE %(param_1)s END) - sum(CASE WHEN (ledger.ledger_description = %(ledger_description_2)s) THEN ledger.amount ELSE %(param_2)s END) AS roi 
FROM ledger INNER JOIN department ON ledger.department_id = department.department_id GROUP BY department.department_name ORDER BY sum(ledger.amount) DESC 
 LIMIT %(param_3)s
2025-02-23 17:24:26,339 - [cached since 1.863s ago] {'ledger_description_1': 'Revenues', 'param_1': 0, 'ledger_description_2': 'Expenses', 'param_2': 0, 'param_3': 5}
2025-02-23 17:24:26,346 - ROLLBACK
2025-02-23 17:24:26,348 - GET http://127.0.0.1:8000/api/top-budget/ - 1.93 ms
2025-02-23 17:24:26,355 - BEGIN (implicit)
2025-02-23 17:24:26,357 - SELECT department.department_name AS department_department_name, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount ELSE %(param_1)s END + CASE WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_2)s END) AS total_expenditure 
FROM ledger INNER JOIN department ON ledger.department_id = department.department_id GROUP BY department.department_name ORDER BY sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount ELSE %(param_1)s END + CASE WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_2)s END) DESC 
 LIMIT %(param_3)s
2025-02-23 17:24:26,357 - [cached since 1.89s ago] {'ledger_description_1': 'Expenses', 'amount_1': 0, 'param_1': 0, 'ledger_description_2': 'Revenues', 'amount_2': 0, 'param_2': 0, 'param_3': 10}
2025-02-23 17:24:27,031 - ROLLBACK
2025-02-23 17:24:27,033 - GET http://127.0.0.1:8000/api/revenue-expenses/ - 1.34 ms
2025-02-23 17:24:28,337 - ROLLBACK
2025-02-23 17:24:28,338 - GET http://127.0.0.1:8000/api/top-roi/ - 2.00 ms
2025-02-23 17:24:28,348 - ROLLBACK
2025-02-23 17:24:28,350 - GET http://127.0.0.1:8000/api/top-budget/ - 2.00 ms
2025-02-23 17:24:35,500 - BEGIN (implicit)
2025-02-23 17:24:35,502 - BEGIN (implicit)
2025-02-23 17:24:35,503 - BEGIN (implicit)
2025-02-23 17:24:35,508 - SELECT cost_center.cost_center_description AS cost_center_cost_center_description, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount ELSE %(param_1)s END + CASE WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_2)s END) AS total_expenditure 
FROM ledger INNER JOIN cost_center ON ledger.cost_center_id = cost_center.cost_center_id 
WHERE ledger.department_id = %(department_id_1)s GROUP BY cost_center.cost_center_description ORDER BY sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount ELSE %(param_1)s END + CASE WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_2)s END) DESC 
 LIMIT %(param_3)s
2025-02-23 17:24:35,512 - SELECT cost_center.cost_center_description AS cost_center_cost_center_description, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s) THEN ledger.amount ELSE %(param_1)s END) - sum(CASE WHEN (ledger.ledger_description = %(ledger_description_2)s) THEN ledger.amount ELSE %(param_2)s END) AS roi 
FROM ledger INNER JOIN cost_center ON ledger.cost_center_id = cost_center.cost_center_id 
WHERE ledger.department_id = %(department_id_1)s GROUP BY cost_center.cost_center_description ORDER BY sum(ledger.amount) DESC 
 LIMIT %(param_3)s
2025-02-23 17:24:35,515 - SELECT year(ledger.general_ledger_date) AS time, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_1)s END) AS total_revenue, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_3)s AND ledger.amount > %(amount_3)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_4)s AND ledger.amount < %(amount_4)s) THEN -ledger.amount ELSE %(param_2)s END) AS total_expenses 
FROM ledger 
WHERE ledger.department_id = %(department_id_1)s GROUP BY year(ledger.general_ledger_date) ORDER BY year(ledger.general_ledger_date)
2025-02-23 17:24:35,516 - [generated in 0.00805s] {'ledger_description_1': 'Expenses', 'amount_1': 0, 'param_1': 0, 'ledger_description_2': 'Revenues', 'amount_2': 0, 'param_2': 0, 'department_id_1': 101, 'param_3': 10}
2025-02-23 17:24:35,517 - [generated in 0.00516s] {'ledger_description_1': 'Revenues', 'param_1': 0, 'ledger_description_2': 'Expenses', 'param_2': 0, 'department_id_1': 101, 'param_3': 5}
2025-02-23 17:24:35,517 - [generated in 0.00250s] {'ledger_description_1': 'Revenues', 'amount_1': 0, 'ledger_description_2': 'Expenses', 'amount_2': 0, 'param_1': 0, 'ledger_description_3': 'Expenses', 'amount_3': 0, 'ledger_description_4': 'Revenues', 'amount_4': 0, 'param_2': 0, 'department_id_1': 101}
2025-02-23 17:24:35,545 - ROLLBACK
2025-02-23 17:24:35,547 - GET http://127.0.0.1:8000/api/revenue-expenses/?department=101 - 0.05 ms
2025-02-23 17:24:35,971 - ROLLBACK
2025-02-23 17:24:35,971 - ROLLBACK
2025-02-23 17:24:35,972 - GET http://127.0.0.1:8000/api/top-budget/?department=101 - 0.48 ms
2025-02-23 17:24:35,975 - GET http://127.0.0.1:8000/api/top-roi/?department=101 - 0.48 ms
2025-02-23 17:24:40,791 - BEGIN (implicit)
2025-02-23 17:24:40,793 - BEGIN (implicit)
2025-02-23 17:24:40,794 - BEGIN (implicit)
2025-02-23 17:24:40,795 - SELECT department.department_name AS department_department_name, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s) THEN ledger.amount ELSE %(param_1)s END) - sum(CASE WHEN (ledger.ledger_description = %(ledger_description_2)s) THEN ledger.amount ELSE %(param_2)s END) AS roi 
FROM ledger INNER JOIN department ON ledger.department_id = department.department_id GROUP BY department.department_name ORDER BY sum(ledger.amount) DESC 
 LIMIT %(param_3)s
2025-02-23 17:24:40,795 - SELECT year(ledger.general_ledger_date) AS time, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_1)s END) AS total_revenue, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_3)s AND ledger.amount > %(amount_3)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_4)s AND ledger.amount < %(amount_4)s) THEN -ledger.amount ELSE %(param_2)s END) AS total_expenses 
FROM ledger GROUP BY year(ledger.general_ledger_date) ORDER BY year(ledger.general_ledger_date)
2025-02-23 17:24:40,797 - SELECT department.department_name AS department_department_name, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount ELSE %(param_1)s END + CASE WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_2)s END) AS total_expenditure 
FROM ledger INNER JOIN department ON ledger.department_id = department.department_id GROUP BY department.department_name ORDER BY sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount ELSE %(param_1)s END + CASE WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_2)s END) DESC 
 LIMIT %(param_3)s
2025-02-23 17:24:40,798 - [cached since 16.32s ago] {'ledger_description_1': 'Revenues', 'param_1': 0, 'ledger_description_2': 'Expenses', 'param_2': 0, 'param_3': 5}
2025-02-23 17:24:40,798 - [cached since 16.32s ago] {'ledger_description_1': 'Revenues', 'amount_1': 0, 'ledger_description_2': 'Expenses', 'amount_2': 0, 'param_1': 0, 'ledger_description_3': 'Expenses', 'amount_3': 0, 'ledger_description_4': 'Revenues', 'amount_4': 0, 'param_2': 0}
2025-02-23 17:24:40,799 - [cached since 16.33s ago] {'ledger_description_1': 'Expenses', 'amount_1': 0, 'param_1': 0, 'ledger_description_2': 'Revenues', 'amount_2': 0, 'param_2': 0, 'param_3': 10}
2025-02-23 17:24:42,259 - ROLLBACK
2025-02-23 17:24:42,260 - GET http://127.0.0.1:8000/api/revenue-expenses/ - 1.47 ms
2025-02-23 17:24:42,906 - ROLLBACK
2025-02-23 17:24:42,908 - GET http://127.0.0.1:8000/api/top-roi/ - 2.12 ms
2025-02-23 17:24:42,912 - ROLLBACK
2025-02-23 17:24:42,913 - GET http://127.0.0.1:8000/api/top-budget/ - 2.13 ms
2025-02-23 17:26:08,931 - GET http://127.0.0.1:8000/api/initialise/ - 0.00 ms
2025-02-23 17:26:09,119 - BEGIN (implicit)
2025-02-23 17:26:09,121 - BEGIN (implicit)
2025-02-23 17:26:09,122 - BEGIN (implicit)
2025-02-23 17:26:09,123 - SELECT department.department_name AS department_department_name, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s) THEN ledger.amount ELSE %(param_1)s END) - sum(CASE WHEN (ledger.ledger_description = %(ledger_description_2)s) THEN ledger.amount ELSE %(param_2)s END) AS roi 
FROM ledger INNER JOIN department ON ledger.department_id = department.department_id GROUP BY department.department_name ORDER BY sum(ledger.amount) DESC 
 LIMIT %(param_3)s
2025-02-23 17:26:09,127 - GET http://127.0.0.1:8000/api/initialise/ - 0.00 ms
2025-02-23 17:26:09,124 - SELECT department.department_name AS department_department_name, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount ELSE %(param_1)s END + CASE WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_2)s END) AS total_expenditure 
FROM ledger INNER JOIN department ON ledger.department_id = department.department_id GROUP BY department.department_name ORDER BY sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount ELSE %(param_1)s END + CASE WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_2)s END) DESC 
 LIMIT %(param_3)s
2025-02-23 17:26:09,126 - SELECT year(ledger.general_ledger_date) AS time, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_1)s END) AS total_revenue, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_3)s AND ledger.amount > %(amount_3)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_4)s AND ledger.amount < %(amount_4)s) THEN -ledger.amount ELSE %(param_2)s END) AS total_expenses 
FROM ledger GROUP BY year(ledger.general_ledger_date) ORDER BY year(ledger.general_ledger_date)
2025-02-23 17:26:09,127 - [cached since 104.7s ago] {'ledger_description_1': 'Revenues', 'param_1': 0, 'ledger_description_2': 'Expenses', 'param_2': 0, 'param_3': 5}
2025-02-23 17:26:09,130 - [cached since 104.7s ago] {'ledger_description_1': 'Expenses', 'amount_1': 0, 'param_1': 0, 'ledger_description_2': 'Revenues', 'amount_2': 0, 'param_2': 0, 'param_3': 10}
2025-02-23 17:26:09,132 - [cached since 104.7s ago] {'ledger_description_1': 'Revenues', 'amount_1': 0, 'ledger_description_2': 'Expenses', 'amount_2': 0, 'param_1': 0, 'ledger_description_3': 'Expenses', 'amount_3': 0, 'ledger_description_4': 'Revenues', 'amount_4': 0, 'param_2': 0}
2025-02-23 17:26:10,001 - BEGIN (implicit)
2025-02-23 17:26:10,002 - SELECT department.department_id AS department_department_id, department.department_name AS department_department_name 
FROM department
2025-02-23 17:26:10,003 - [cached since 105.5s ago] {}
2025-02-23 17:26:10,007 - SELECT min(ledger.general_ledger_date) AS min_1 
FROM ledger
2025-02-23 17:26:10,007 - [cached since 105.5s ago] {}
2025-02-23 17:26:10,017 - SELECT max(ledger.general_ledger_date) AS max_1 
FROM ledger
2025-02-23 17:26:10,018 - [cached since 105.5s ago] {}
2025-02-23 17:26:10,021 - ROLLBACK
2025-02-23 17:26:10,023 - GET http://127.0.0.1:8000/api/initialise - 0.03 ms
2025-02-23 17:26:10,030 - BEGIN (implicit)
2025-02-23 17:26:10,030 - SELECT department.department_id AS department_department_id, department.department_name AS department_department_name 
FROM department
2025-02-23 17:26:10,031 - [cached since 105.6s ago] {}
2025-02-23 17:26:10,033 - SELECT min(ledger.general_ledger_date) AS min_1 
FROM ledger
2025-02-23 17:26:10,033 - [cached since 105.6s ago] {}
2025-02-23 17:26:10,035 - SELECT max(ledger.general_ledger_date) AS max_1 
FROM ledger
2025-02-23 17:26:10,035 - [cached since 105.6s ago] {}
2025-02-23 17:26:10,038 - ROLLBACK
2025-02-23 17:26:10,040 - GET http://127.0.0.1:8000/api/initialise - 0.01 ms
2025-02-23 17:26:10,841 - ROLLBACK
2025-02-23 17:26:10,843 - GET http://127.0.0.1:8000/api/revenue-expenses/ - 1.73 ms
2025-02-23 17:26:10,849 - BEGIN (implicit)
2025-02-23 17:26:10,849 - SELECT year(ledger.general_ledger_date) AS time, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_1)s END) AS total_revenue, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_3)s AND ledger.amount > %(amount_3)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_4)s AND ledger.amount < %(amount_4)s) THEN -ledger.amount ELSE %(param_2)s END) AS total_expenses 
FROM ledger GROUP BY year(ledger.general_ledger_date) ORDER BY year(ledger.general_ledger_date)
2025-02-23 17:26:10,851 - [cached since 106.4s ago] {'ledger_description_1': 'Revenues', 'amount_1': 0, 'ledger_description_2': 'Expenses', 'amount_2': 0, 'param_1': 0, 'ledger_description_3': 'Expenses', 'amount_3': 0, 'ledger_description_4': 'Revenues', 'amount_4': 0, 'param_2': 0}
2025-02-23 17:26:11,620 - ROLLBACK
2025-02-23 17:26:11,622 - GET http://127.0.0.1:8000/api/top-roi/ - 2.51 ms
2025-02-23 17:26:11,625 - BEGIN (implicit)
2025-02-23 17:26:11,627 - SELECT department.department_name AS department_department_name, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s) THEN ledger.amount ELSE %(param_1)s END) - sum(CASE WHEN (ledger.ledger_description = %(ledger_description_2)s) THEN ledger.amount ELSE %(param_2)s END) AS roi 
FROM ledger INNER JOIN department ON ledger.department_id = department.department_id GROUP BY department.department_name ORDER BY sum(ledger.amount) DESC 
 LIMIT %(param_3)s
2025-02-23 17:26:11,628 - [cached since 107.2s ago] {'ledger_description_1': 'Revenues', 'param_1': 0, 'ledger_description_2': 'Expenses', 'param_2': 0, 'param_3': 5}
2025-02-23 17:26:11,770 - ROLLBACK
2025-02-23 17:26:11,772 - GET http://127.0.0.1:8000/api/top-budget/ - 2.66 ms
2025-02-23 17:26:11,778 - BEGIN (implicit)
2025-02-23 17:26:11,779 - SELECT department.department_name AS department_department_name, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount ELSE %(param_1)s END + CASE WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_2)s END) AS total_expenditure 
FROM ledger INNER JOIN department ON ledger.department_id = department.department_id GROUP BY department.department_name ORDER BY sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount ELSE %(param_1)s END + CASE WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_2)s END) DESC 
 LIMIT %(param_3)s
2025-02-23 17:26:11,780 - [cached since 107.3s ago] {'ledger_description_1': 'Expenses', 'amount_1': 0, 'param_1': 0, 'ledger_description_2': 'Revenues', 'amount_2': 0, 'param_2': 0, 'param_3': 10}
2025-02-23 17:26:12,258 - ROLLBACK
2025-02-23 17:26:12,259 - GET http://127.0.0.1:8000/api/revenue-expenses/ - 1.41 ms
2025-02-23 17:26:13,792 - ROLLBACK
2025-02-23 17:26:13,795 - GET http://127.0.0.1:8000/api/top-roi/ - 2.17 ms
2025-02-23 17:26:14,051 - ROLLBACK
2025-02-23 17:26:14,052 - GET http://127.0.0.1:8000/api/top-budget/ - 2.28 ms
2025-02-23 17:27:01,222 - GET http://127.0.0.1:8000/api/initialise/ - 0.00 ms
2025-02-23 17:27:01,480 - BEGIN (implicit)
2025-02-23 17:27:01,481 - SELECT department.department_name AS department_department_name, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s) THEN ledger.amount ELSE %(param_1)s END) - sum(CASE WHEN (ledger.ledger_description = %(ledger_description_2)s) THEN ledger.amount ELSE %(param_2)s END) AS roi 
FROM ledger INNER JOIN department ON ledger.department_id = department.department_id GROUP BY department.department_name ORDER BY sum(ledger.amount) DESC 
 LIMIT %(param_3)s
2025-02-23 17:27:01,482 - [cached since 157s ago] {'ledger_description_1': 'Revenues', 'param_1': 0, 'ledger_description_2': 'Expenses', 'param_2': 0, 'param_3': 5}
2025-02-23 17:27:01,484 - BEGIN (implicit)
2025-02-23 17:27:01,486 - SELECT department.department_name AS department_department_name, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount ELSE %(param_1)s END + CASE WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_2)s END) AS total_expenditure 
FROM ledger INNER JOIN department ON ledger.department_id = department.department_id GROUP BY department.department_name ORDER BY sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount ELSE %(param_1)s END + CASE WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_2)s END) DESC 
 LIMIT %(param_3)s
2025-02-23 17:27:01,491 - [cached since 157s ago] {'ledger_description_1': 'Expenses', 'amount_1': 0, 'param_1': 0, 'ledger_description_2': 'Revenues', 'amount_2': 0, 'param_2': 0, 'param_3': 10}
2025-02-23 17:27:01,495 - GET http://127.0.0.1:8000/api/initialise/ - 0.00 ms
2025-02-23 17:27:01,494 - BEGIN (implicit)
2025-02-23 17:27:01,497 - SELECT year(ledger.general_ledger_date) AS time, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_1)s END) AS total_revenue, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_3)s AND ledger.amount > %(amount_3)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_4)s AND ledger.amount < %(amount_4)s) THEN -ledger.amount ELSE %(param_2)s END) AS total_expenses 
FROM ledger GROUP BY year(ledger.general_ledger_date) ORDER BY year(ledger.general_ledger_date)
2025-02-23 17:27:01,498 - [cached since 157s ago] {'ledger_description_1': 'Revenues', 'amount_1': 0, 'ledger_description_2': 'Expenses', 'amount_2': 0, 'param_1': 0, 'ledger_description_3': 'Expenses', 'amount_3': 0, 'ledger_description_4': 'Revenues', 'amount_4': 0, 'param_2': 0}
2025-02-23 17:27:02,477 - BEGIN (implicit)
2025-02-23 17:27:02,478 - SELECT department.department_id AS department_department_id, department.department_name AS department_department_name 
FROM department
2025-02-23 17:27:02,480 - [cached since 158s ago] {}
2025-02-23 17:27:02,482 - SELECT min(ledger.general_ledger_date) AS min_1 
FROM ledger
2025-02-23 17:27:02,483 - [cached since 158s ago] {}
2025-02-23 17:27:02,485 - SELECT max(ledger.general_ledger_date) AS max_1 
FROM ledger
2025-02-23 17:27:02,486 - [cached since 158s ago] {}
2025-02-23 17:27:02,492 - ROLLBACK
2025-02-23 17:27:02,493 - GET http://127.0.0.1:8000/api/initialise - 0.02 ms
2025-02-23 17:27:02,498 - BEGIN (implicit)
2025-02-23 17:27:02,499 - SELECT department.department_id AS department_department_id, department.department_name AS department_department_name 
FROM department
2025-02-23 17:27:02,501 - [cached since 158s ago] {}
2025-02-23 17:27:02,503 - SELECT min(ledger.general_ledger_date) AS min_1 
FROM ledger
2025-02-23 17:27:02,504 - [cached since 158s ago] {}
2025-02-23 17:27:02,507 - SELECT max(ledger.general_ledger_date) AS max_1 
FROM ledger
2025-02-23 17:27:02,507 - [cached since 158s ago] {}
2025-02-23 17:27:02,511 - ROLLBACK
2025-02-23 17:27:02,513 - GET http://127.0.0.1:8000/api/initialise - 0.02 ms
2025-02-23 17:27:03,372 - ROLLBACK
2025-02-23 17:27:03,374 - GET http://127.0.0.1:8000/api/revenue-expenses/ - 1.89 ms
2025-02-23 17:27:03,379 - BEGIN (implicit)
2025-02-23 17:27:03,381 - SELECT year(ledger.general_ledger_date) AS time, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_1)s END) AS total_revenue, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_3)s AND ledger.amount > %(amount_3)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_4)s AND ledger.amount < %(amount_4)s) THEN -ledger.amount ELSE %(param_2)s END) AS total_expenses 
FROM ledger GROUP BY year(ledger.general_ledger_date) ORDER BY year(ledger.general_ledger_date)
2025-02-23 17:27:03,381 - [cached since 158.9s ago] {'ledger_description_1': 'Revenues', 'amount_1': 0, 'ledger_description_2': 'Expenses', 'amount_2': 0, 'param_1': 0, 'ledger_description_3': 'Expenses', 'amount_3': 0, 'ledger_description_4': 'Revenues', 'amount_4': 0, 'param_2': 0}
2025-02-23 17:27:04,097 - ROLLBACK
2025-02-23 17:27:04,099 - GET http://127.0.0.1:8000/api/top-roi/ - 2.63 ms
2025-02-23 17:27:04,105 - BEGIN (implicit)
2025-02-23 17:27:04,107 - SELECT department.department_name AS department_department_name, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s) THEN ledger.amount ELSE %(param_1)s END) - sum(CASE WHEN (ledger.ledger_description = %(ledger_description_2)s) THEN ledger.amount ELSE %(param_2)s END) AS roi 
FROM ledger INNER JOIN department ON ledger.department_id = department.department_id GROUP BY department.department_name ORDER BY sum(ledger.amount) DESC 
 LIMIT %(param_3)s
2025-02-23 17:27:04,107 - [cached since 159.6s ago] {'ledger_description_1': 'Revenues', 'param_1': 0, 'ledger_description_2': 'Expenses', 'param_2': 0, 'param_3': 5}
2025-02-23 17:27:04,191 - ROLLBACK
2025-02-23 17:27:04,193 - GET http://127.0.0.1:8000/api/top-budget/ - 2.72 ms
2025-02-23 17:27:04,197 - BEGIN (implicit)
2025-02-23 17:27:04,198 - SELECT department.department_name AS department_department_name, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount ELSE %(param_1)s END + CASE WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_2)s END) AS total_expenditure 
FROM ledger INNER JOIN department ON ledger.department_id = department.department_id GROUP BY department.department_name ORDER BY sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount ELSE %(param_1)s END + CASE WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_2)s END) DESC 
 LIMIT %(param_3)s
2025-02-23 17:27:04,199 - [cached since 159.7s ago] {'ledger_description_1': 'Expenses', 'amount_1': 0, 'param_1': 0, 'ledger_description_2': 'Revenues', 'amount_2': 0, 'param_2': 0, 'param_3': 10}
2025-02-23 17:27:04,696 - ROLLBACK
2025-02-23 17:27:04,700 - GET http://127.0.0.1:8000/api/revenue-expenses/ - 1.32 ms
2025-02-23 17:27:06,189 - ROLLBACK
2025-02-23 17:27:06,190 - ROLLBACK
2025-02-23 17:27:06,192 - GET http://127.0.0.1:8000/api/top-roi/ - 2.09 ms
2025-02-23 17:27:06,194 - GET http://127.0.0.1:8000/api/top-budget/ - 2.00 ms
2025-02-23 17:27:43,486 - GET http://127.0.0.1:8000/api/initialise/ - 0.00 ms
2025-02-23 17:27:43,640 - BEGIN (implicit)
2025-02-23 17:27:43,642 - SELECT department.department_name AS department_department_name, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s) THEN ledger.amount ELSE %(param_1)s END) - sum(CASE WHEN (ledger.ledger_description = %(ledger_description_2)s) THEN ledger.amount ELSE %(param_2)s END) AS roi 
FROM ledger INNER JOIN department ON ledger.department_id = department.department_id GROUP BY department.department_name ORDER BY sum(ledger.amount) DESC 
 LIMIT %(param_3)s
2025-02-23 17:27:43,644 - [cached since 199.2s ago] {'ledger_description_1': 'Revenues', 'param_1': 0, 'ledger_description_2': 'Expenses', 'param_2': 0, 'param_3': 5}
2025-02-23 17:27:43,646 - BEGIN (implicit)
2025-02-23 17:27:43,651 - SELECT department.department_name AS department_department_name, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount ELSE %(param_1)s END + CASE WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_2)s END) AS total_expenditure 
FROM ledger INNER JOIN department ON ledger.department_id = department.department_id GROUP BY department.department_name ORDER BY sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount ELSE %(param_1)s END + CASE WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_2)s END) DESC 
 LIMIT %(param_3)s
2025-02-23 17:27:43,652 - GET http://127.0.0.1:8000/api/initialise/ - 0.00 ms
2025-02-23 17:27:43,648 - BEGIN (implicit)
2025-02-23 17:27:43,653 - [cached since 199.2s ago] {'ledger_description_1': 'Expenses', 'amount_1': 0, 'param_1': 0, 'ledger_description_2': 'Revenues', 'amount_2': 0, 'param_2': 0, 'param_3': 10}
2025-02-23 17:27:43,655 - SELECT year(ledger.general_ledger_date) AS time, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_1)s END) AS total_revenue, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_3)s AND ledger.amount > %(amount_3)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_4)s AND ledger.amount < %(amount_4)s) THEN -ledger.amount ELSE %(param_2)s END) AS total_expenses 
FROM ledger GROUP BY year(ledger.general_ledger_date) ORDER BY year(ledger.general_ledger_date)
2025-02-23 17:27:43,657 - [cached since 199.2s ago] {'ledger_description_1': 'Revenues', 'amount_1': 0, 'ledger_description_2': 'Expenses', 'amount_2': 0, 'param_1': 0, 'ledger_description_3': 'Expenses', 'amount_3': 0, 'ledger_description_4': 'Revenues', 'amount_4': 0, 'param_2': 0}
2025-02-23 17:27:44,513 - BEGIN (implicit)
2025-02-23 17:27:44,520 - SELECT department.department_id AS department_department_id, department.department_name AS department_department_name 
FROM department
2025-02-23 17:27:44,525 - [cached since 200.1s ago] {}
2025-02-23 17:27:44,535 - SELECT min(ledger.general_ledger_date) AS min_1 
FROM ledger
2025-02-23 17:27:44,536 - [cached since 200.1s ago] {}
2025-02-23 17:27:44,541 - SELECT max(ledger.general_ledger_date) AS max_1 
FROM ledger
2025-02-23 17:27:44,541 - [cached since 200.1s ago] {}
2025-02-23 17:27:44,556 - ROLLBACK
2025-02-23 17:27:44,558 - GET http://127.0.0.1:8000/api/initialise - 0.07 ms
2025-02-23 17:27:44,588 - BEGIN (implicit)
2025-02-23 17:27:44,588 - SELECT department.department_id AS department_department_id, department.department_name AS department_department_name 
FROM department
2025-02-23 17:27:44,589 - [cached since 200.1s ago] {}
2025-02-23 17:27:44,596 - SELECT min(ledger.general_ledger_date) AS min_1 
FROM ledger
2025-02-23 17:27:44,597 - [cached since 200.1s ago] {}
2025-02-23 17:27:44,608 - SELECT max(ledger.general_ledger_date) AS max_1 
FROM ledger
2025-02-23 17:27:44,609 - [cached since 200.1s ago] {}
2025-02-23 17:27:44,615 - ROLLBACK
2025-02-23 17:27:44,618 - GET http://127.0.0.1:8000/api/initialise - 0.03 ms
2025-02-23 17:27:45,327 - ROLLBACK
2025-02-23 17:27:45,328 - GET http://127.0.0.1:8000/api/revenue-expenses/ - 1.69 ms
2025-02-23 17:27:45,332 - BEGIN (implicit)
2025-02-23 17:27:45,335 - SELECT year(ledger.general_ledger_date) AS time, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_1)s END) AS total_revenue, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_3)s AND ledger.amount > %(amount_3)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_4)s AND ledger.amount < %(amount_4)s) THEN -ledger.amount ELSE %(param_2)s END) AS total_expenses 
FROM ledger GROUP BY year(ledger.general_ledger_date) ORDER BY year(ledger.general_ledger_date)
2025-02-23 17:27:45,335 - [cached since 200.9s ago] {'ledger_description_1': 'Revenues', 'amount_1': 0, 'ledger_description_2': 'Expenses', 'amount_2': 0, 'param_1': 0, 'ledger_description_3': 'Expenses', 'amount_3': 0, 'ledger_description_4': 'Revenues', 'amount_4': 0, 'param_2': 0}
2025-02-23 17:27:46,113 - ROLLBACK
2025-02-23 17:27:46,116 - GET http://127.0.0.1:8000/api/top-roi/ - 2.48 ms
2025-02-23 17:27:46,121 - BEGIN (implicit)
2025-02-23 17:27:46,122 - SELECT department.department_name AS department_department_name, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s) THEN ledger.amount ELSE %(param_1)s END) - sum(CASE WHEN (ledger.ledger_description = %(ledger_description_2)s) THEN ledger.amount ELSE %(param_2)s END) AS roi 
FROM ledger INNER JOIN department ON ledger.department_id = department.department_id GROUP BY department.department_name ORDER BY sum(ledger.amount) DESC 
 LIMIT %(param_3)s
2025-02-23 17:27:46,123 - [cached since 201.6s ago] {'ledger_description_1': 'Revenues', 'param_1': 0, 'ledger_description_2': 'Expenses', 'param_2': 0, 'param_3': 5}
2025-02-23 17:27:46,227 - ROLLBACK
2025-02-23 17:27:46,229 - GET http://127.0.0.1:8000/api/top-budget/ - 2.59 ms
2025-02-23 17:27:46,234 - BEGIN (implicit)
2025-02-23 17:27:46,235 - SELECT department.department_name AS department_department_name, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount ELSE %(param_1)s END + CASE WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_2)s END) AS total_expenditure 
FROM ledger INNER JOIN department ON ledger.department_id = department.department_id GROUP BY department.department_name ORDER BY sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount ELSE %(param_1)s END + CASE WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_2)s END) DESC 
 LIMIT %(param_3)s
2025-02-23 17:27:46,236 - [cached since 201.8s ago] {'ledger_description_1': 'Expenses', 'amount_1': 0, 'param_1': 0, 'ledger_description_2': 'Revenues', 'amount_2': 0, 'param_2': 0, 'param_3': 10}
2025-02-23 17:27:46,709 - ROLLBACK
2025-02-23 17:27:46,710 - GET http://127.0.0.1:8000/api/revenue-expenses/ - 1.38 ms
2025-02-23 17:27:48,182 - ROLLBACK
2025-02-23 17:27:48,184 - GET http://127.0.0.1:8000/api/top-roi/ - 2.07 ms
2025-02-23 17:27:48,266 - ROLLBACK
2025-02-23 17:27:48,269 - GET http://127.0.0.1:8000/api/top-budget/ - 2.04 ms
2025-02-23 17:28:19,523 - GET http://127.0.0.1:8000/api/initialise/ - 0.00 ms
2025-02-23 17:28:19,799 - BEGIN (implicit)
2025-02-23 17:28:19,802 - SELECT department.department_name AS department_department_name, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s) THEN ledger.amount ELSE %(param_1)s END) - sum(CASE WHEN (ledger.ledger_description = %(ledger_description_2)s) THEN ledger.amount ELSE %(param_2)s END) AS roi 
FROM ledger INNER JOIN department ON ledger.department_id = department.department_id GROUP BY department.department_name ORDER BY sum(ledger.amount) DESC 
 LIMIT %(param_3)s
2025-02-23 17:28:19,803 - [cached since 235.3s ago] {'ledger_description_1': 'Revenues', 'param_1': 0, 'ledger_description_2': 'Expenses', 'param_2': 0, 'param_3': 5}
2025-02-23 17:28:19,801 - BEGIN (implicit)
2025-02-23 17:28:19,857 - SELECT department.department_name AS department_department_name, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount ELSE %(param_1)s END + CASE WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_2)s END) AS total_expenditure 
FROM ledger INNER JOIN department ON ledger.department_id = department.department_id GROUP BY department.department_name ORDER BY sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount ELSE %(param_1)s END + CASE WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_2)s END) DESC 
 LIMIT %(param_3)s
2025-02-23 17:28:19,911 - GET http://127.0.0.1:8000/api/initialise/ - 0.00 ms
2025-02-23 17:28:19,901 - [cached since 235.4s ago] {'ledger_description_1': 'Expenses', 'amount_1': 0, 'param_1': 0, 'ledger_description_2': 'Revenues', 'amount_2': 0, 'param_2': 0, 'param_3': 10}
2025-02-23 17:28:19,909 - BEGIN (implicit)
2025-02-23 17:28:19,913 - SELECT year(ledger.general_ledger_date) AS time, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_1)s END) AS total_revenue, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_3)s AND ledger.amount > %(amount_3)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_4)s AND ledger.amount < %(amount_4)s) THEN -ledger.amount ELSE %(param_2)s END) AS total_expenses 
FROM ledger GROUP BY year(ledger.general_ledger_date) ORDER BY year(ledger.general_ledger_date)
2025-02-23 17:28:19,915 - [cached since 235.4s ago] {'ledger_description_1': 'Revenues', 'amount_1': 0, 'ledger_description_2': 'Expenses', 'amount_2': 0, 'param_1': 0, 'ledger_description_3': 'Expenses', 'amount_3': 0, 'ledger_description_4': 'Revenues', 'amount_4': 0, 'param_2': 0}
2025-02-23 17:28:20,405 - BEGIN (implicit)
2025-02-23 17:28:20,406 - SELECT department.department_id AS department_department_id, department.department_name AS department_department_name 
FROM department
2025-02-23 17:28:20,407 - [cached since 235.9s ago] {}
2025-02-23 17:28:20,409 - SELECT min(ledger.general_ledger_date) AS min_1 
FROM ledger
2025-02-23 17:28:20,410 - [cached since 235.9s ago] {}
2025-02-23 17:28:20,413 - SELECT max(ledger.general_ledger_date) AS max_1 
FROM ledger
2025-02-23 17:28:20,414 - [cached since 235.9s ago] {}
2025-02-23 17:28:20,419 - ROLLBACK
2025-02-23 17:28:20,421 - GET http://127.0.0.1:8000/api/initialise - 0.02 ms
2025-02-23 17:28:20,426 - BEGIN (implicit)
2025-02-23 17:28:20,426 - SELECT department.department_id AS department_department_id, department.department_name AS department_department_name 
FROM department
2025-02-23 17:28:20,427 - [cached since 236s ago] {}
2025-02-23 17:28:20,430 - SELECT min(ledger.general_ledger_date) AS min_1 
FROM ledger
2025-02-23 17:28:20,431 - [cached since 236s ago] {}
2025-02-23 17:28:20,432 - SELECT max(ledger.general_ledger_date) AS max_1 
FROM ledger
2025-02-23 17:28:20,433 - [cached since 235.9s ago] {}
2025-02-23 17:28:20,435 - ROLLBACK
2025-02-23 17:28:20,437 - GET http://127.0.0.1:8000/api/initialise - 0.01 ms
2025-02-23 17:28:21,608 - ROLLBACK
2025-02-23 17:28:21,609 - GET http://127.0.0.1:8000/api/revenue-expenses/ - 1.85 ms
2025-02-23 17:28:21,615 - BEGIN (implicit)
2025-02-23 17:28:21,616 - SELECT year(ledger.general_ledger_date) AS time, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_1)s END) AS total_revenue, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_3)s AND ledger.amount > %(amount_3)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_4)s AND ledger.amount < %(amount_4)s) THEN -ledger.amount ELSE %(param_2)s END) AS total_expenses 
FROM ledger GROUP BY year(ledger.general_ledger_date) ORDER BY year(ledger.general_ledger_date)
2025-02-23 17:28:21,616 - [cached since 237.1s ago] {'ledger_description_1': 'Revenues', 'amount_1': 0, 'ledger_description_2': 'Expenses', 'amount_2': 0, 'param_1': 0, 'ledger_description_3': 'Expenses', 'amount_3': 0, 'ledger_description_4': 'Revenues', 'amount_4': 0, 'param_2': 0}
2025-02-23 17:28:22,271 - ROLLBACK
2025-02-23 17:28:22,272 - GET http://127.0.0.1:8000/api/top-roi/ - 2.52 ms
2025-02-23 17:28:22,277 - BEGIN (implicit)
2025-02-23 17:28:22,279 - SELECT department.department_name AS department_department_name, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s) THEN ledger.amount ELSE %(param_1)s END) - sum(CASE WHEN (ledger.ledger_description = %(ledger_description_2)s) THEN ledger.amount ELSE %(param_2)s END) AS roi 
FROM ledger INNER JOIN department ON ledger.department_id = department.department_id GROUP BY department.department_name ORDER BY sum(ledger.amount) DESC 
 LIMIT %(param_3)s
2025-02-23 17:28:22,280 - [cached since 237.8s ago] {'ledger_description_1': 'Revenues', 'param_1': 0, 'ledger_description_2': 'Expenses', 'param_2': 0, 'param_3': 5}
2025-02-23 17:28:22,454 - ROLLBACK
2025-02-23 17:28:22,455 - GET http://127.0.0.1:8000/api/top-budget/ - 2.70 ms
2025-02-23 17:28:22,460 - BEGIN (implicit)
2025-02-23 17:28:22,462 - SELECT department.department_name AS department_department_name, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount ELSE %(param_1)s END + CASE WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_2)s END) AS total_expenditure 
FROM ledger INNER JOIN department ON ledger.department_id = department.department_id GROUP BY department.department_name ORDER BY sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount ELSE %(param_1)s END + CASE WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_2)s END) DESC 
 LIMIT %(param_3)s
2025-02-23 17:28:22,462 - [cached since 238s ago] {'ledger_description_1': 'Expenses', 'amount_1': 0, 'param_1': 0, 'ledger_description_2': 'Revenues', 'amount_2': 0, 'param_2': 0, 'param_3': 10}
2025-02-23 17:28:22,940 - ROLLBACK
2025-02-23 17:28:22,941 - GET http://127.0.0.1:8000/api/revenue-expenses/ - 1.33 ms
2025-02-23 17:28:24,340 - ROLLBACK
2025-02-23 17:28:24,342 - GET http://127.0.0.1:8000/api/top-roi/ - 2.07 ms
2025-02-23 17:28:24,438 - ROLLBACK
2025-02-23 17:28:24,441 - GET http://127.0.0.1:8000/api/top-budget/ - 1.98 ms
2025-02-23 17:28:55,650 - BEGIN (implicit)
2025-02-23 17:28:55,652 - BEGIN (implicit)
2025-02-23 17:28:55,654 - BEGIN (implicit)
2025-02-23 17:28:55,655 - SELECT cost_center.cost_center_description AS cost_center_cost_center_description, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount ELSE %(param_1)s END + CASE WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_2)s END) AS total_expenditure 
FROM ledger INNER JOIN cost_center ON ledger.cost_center_id = cost_center.cost_center_id 
WHERE ledger.department_id = %(department_id_1)s GROUP BY cost_center.cost_center_description ORDER BY sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount ELSE %(param_1)s END + CASE WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_2)s END) DESC 
 LIMIT %(param_3)s
2025-02-23 17:28:55,656 - SELECT cost_center.cost_center_description AS cost_center_cost_center_description, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s) THEN ledger.amount ELSE %(param_1)s END) - sum(CASE WHEN (ledger.ledger_description = %(ledger_description_2)s) THEN ledger.amount ELSE %(param_2)s END) AS roi 
FROM ledger INNER JOIN cost_center ON ledger.cost_center_id = cost_center.cost_center_id 
WHERE ledger.department_id = %(department_id_1)s GROUP BY cost_center.cost_center_description ORDER BY sum(ledger.amount) DESC 
 LIMIT %(param_3)s
2025-02-23 17:28:55,656 - SELECT year(ledger.general_ledger_date) AS time, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_1)s END) AS total_revenue, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_3)s AND ledger.amount > %(amount_3)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_4)s AND ledger.amount < %(amount_4)s) THEN -ledger.amount ELSE %(param_2)s END) AS total_expenses 
FROM ledger 
WHERE ledger.department_id = %(department_id_1)s GROUP BY year(ledger.general_ledger_date) ORDER BY year(ledger.general_ledger_date)
2025-02-23 17:28:55,658 - [cached since 260.1s ago] {'ledger_description_1': 'Expenses', 'amount_1': 0, 'param_1': 0, 'ledger_description_2': 'Revenues', 'amount_2': 0, 'param_2': 0, 'department_id_1': 102, 'param_3': 10}
2025-02-23 17:28:55,659 - [cached since 260.1s ago] {'ledger_description_1': 'Revenues', 'param_1': 0, 'ledger_description_2': 'Expenses', 'param_2': 0, 'department_id_1': 102, 'param_3': 5}
2025-02-23 17:28:55,659 - [cached since 260.1s ago] {'ledger_description_1': 'Revenues', 'amount_1': 0, 'ledger_description_2': 'Expenses', 'amount_2': 0, 'param_1': 0, 'ledger_description_3': 'Expenses', 'amount_3': 0, 'ledger_description_4': 'Revenues', 'amount_4': 0, 'param_2': 0, 'department_id_1': 102}
2025-02-23 17:28:55,733 - ROLLBACK
2025-02-23 17:28:55,735 - GET http://127.0.0.1:8000/api/revenue-expenses/?department=102 - 0.09 ms
2025-02-23 17:28:56,329 - ROLLBACK
2025-02-23 17:28:56,331 - ROLLBACK
2025-02-23 17:28:56,333 - GET http://127.0.0.1:8000/api/top-budget/?department=102 - 0.69 ms
2025-02-23 17:28:56,335 - GET http://127.0.0.1:8000/api/top-roi/?department=102 - 0.69 ms
2025-02-23 17:29:01,321 - BEGIN (implicit)
2025-02-23 17:29:01,325 - BEGIN (implicit)
2025-02-23 17:29:01,327 - SELECT cost_center.cost_center_description AS cost_center_cost_center_description, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount ELSE %(param_1)s END + CASE WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_2)s END) AS total_expenditure 
FROM ledger INNER JOIN cost_center ON ledger.cost_center_id = cost_center.cost_center_id 
WHERE ledger.department_id = %(department_id_1)s GROUP BY cost_center.cost_center_description ORDER BY sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount ELSE %(param_1)s END + CASE WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_2)s END) DESC 
 LIMIT %(param_3)s
2025-02-23 17:29:01,331 - SELECT cost_center.cost_center_description AS cost_center_cost_center_description, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s) THEN ledger.amount ELSE %(param_1)s END) - sum(CASE WHEN (ledger.ledger_description = %(ledger_description_2)s) THEN ledger.amount ELSE %(param_2)s END) AS roi 
FROM ledger INNER JOIN cost_center ON ledger.cost_center_id = cost_center.cost_center_id 
WHERE ledger.department_id = %(department_id_1)s GROUP BY cost_center.cost_center_description ORDER BY sum(ledger.amount) DESC 
 LIMIT %(param_3)s
2025-02-23 17:29:01,334 - [cached since 265.8s ago] {'ledger_description_1': 'Revenues', 'param_1': 0, 'ledger_description_2': 'Expenses', 'param_2': 0, 'department_id_1': 107, 'param_3': 5}
2025-02-23 17:29:01,333 - [cached since 265.8s ago] {'ledger_description_1': 'Expenses', 'amount_1': 0, 'param_1': 0, 'ledger_description_2': 'Revenues', 'amount_2': 0, 'param_2': 0, 'department_id_1': 107, 'param_3': 10}
2025-02-23 17:29:01,332 - BEGIN (implicit)
2025-02-23 17:29:01,336 - SELECT year(ledger.general_ledger_date) AS time, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_1)s END) AS total_revenue, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_3)s AND ledger.amount > %(amount_3)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_4)s AND ledger.amount < %(amount_4)s) THEN -ledger.amount ELSE %(param_2)s END) AS total_expenses 
FROM ledger 
WHERE ledger.department_id = %(department_id_1)s GROUP BY year(ledger.general_ledger_date) ORDER BY year(ledger.general_ledger_date)
2025-02-23 17:29:01,336 - [cached since 265.8s ago] {'ledger_description_1': 'Revenues', 'amount_1': 0, 'ledger_description_2': 'Expenses', 'amount_2': 0, 'param_1': 0, 'ledger_description_3': 'Expenses', 'amount_3': 0, 'ledger_description_4': 'Revenues', 'amount_4': 0, 'param_2': 0, 'department_id_1': 107}
2025-02-23 17:29:05,183 - ROLLBACK
2025-02-23 17:29:05,185 - GET http://127.0.0.1:8000/api/revenue-expenses/?department=107 - 3.87 ms
2025-02-23 17:29:05,724 - ROLLBACK
2025-02-23 17:29:05,725 - GET http://127.0.0.1:8000/api/top-roi/?department=107 - 4.41 ms
2025-02-23 17:29:05,755 - ROLLBACK
2025-02-23 17:29:05,758 - GET http://127.0.0.1:8000/api/top-budget/?department=107 - 4.44 ms
2025-02-23 17:29:09,046 - BEGIN (implicit)
2025-02-23 17:29:09,047 - BEGIN (implicit)
2025-02-23 17:29:09,049 - SELECT department.department_name AS department_department_name, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s) THEN ledger.amount ELSE %(param_1)s END) - sum(CASE WHEN (ledger.ledger_description = %(ledger_description_2)s) THEN ledger.amount ELSE %(param_2)s END) AS roi 
FROM ledger INNER JOIN department ON ledger.department_id = department.department_id GROUP BY department.department_name ORDER BY sum(ledger.amount) DESC 
 LIMIT %(param_3)s
2025-02-23 17:29:09,051 - BEGIN (implicit)
2025-02-23 17:29:09,051 - SELECT department.department_name AS department_department_name, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount ELSE %(param_1)s END + CASE WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_2)s END) AS total_expenditure 
FROM ledger INNER JOIN department ON ledger.department_id = department.department_id GROUP BY department.department_name ORDER BY sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount ELSE %(param_1)s END + CASE WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_2)s END) DESC 
 LIMIT %(param_3)s
2025-02-23 17:29:09,052 - [cached since 284.6s ago] {'ledger_description_1': 'Revenues', 'param_1': 0, 'ledger_description_2': 'Expenses', 'param_2': 0, 'param_3': 5}
2025-02-23 17:29:09,053 - SELECT year(ledger.general_ledger_date) AS time, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_1)s END) AS total_revenue, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_3)s AND ledger.amount > %(amount_3)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_4)s AND ledger.amount < %(amount_4)s) THEN -ledger.amount ELSE %(param_2)s END) AS total_expenses 
FROM ledger GROUP BY year(ledger.general_ledger_date) ORDER BY year(ledger.general_ledger_date)
2025-02-23 17:29:09,054 - [cached since 284.6s ago] {'ledger_description_1': 'Expenses', 'amount_1': 0, 'param_1': 0, 'ledger_description_2': 'Revenues', 'amount_2': 0, 'param_2': 0, 'param_3': 10}
2025-02-23 17:29:09,056 - [cached since 284.6s ago] {'ledger_description_1': 'Revenues', 'amount_1': 0, 'ledger_description_2': 'Expenses', 'amount_2': 0, 'param_1': 0, 'ledger_description_3': 'Expenses', 'amount_3': 0, 'ledger_description_4': 'Revenues', 'amount_4': 0, 'param_2': 0}
2025-02-23 17:29:10,476 - ROLLBACK
2025-02-23 17:29:10,477 - GET http://127.0.0.1:8000/api/revenue-expenses/ - 1.43 ms
2025-02-23 17:29:11,134 - ROLLBACK
2025-02-23 17:29:11,136 - GET http://127.0.0.1:8000/api/top-roi/ - 2.10 ms
2025-02-23 17:29:11,139 - ROLLBACK
2025-02-23 17:29:11,141 - GET http://127.0.0.1:8000/api/top-budget/ - 2.10 ms
2025-02-23 17:29:16,315 - BEGIN (implicit)
2025-02-23 17:29:16,316 - BEGIN (implicit)
2025-02-23 17:29:16,318 - BEGIN (implicit)
2025-02-23 17:29:16,319 - SELECT cost_center.cost_center_description AS cost_center_cost_center_description, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s) THEN ledger.amount ELSE %(param_1)s END) - sum(CASE WHEN (ledger.ledger_description = %(ledger_description_2)s) THEN ledger.amount ELSE %(param_2)s END) AS roi 
FROM ledger INNER JOIN cost_center ON ledger.cost_center_id = cost_center.cost_center_id 
WHERE ledger.department_id = %(department_id_1)s GROUP BY cost_center.cost_center_description ORDER BY sum(ledger.amount) DESC 
 LIMIT %(param_3)s
2025-02-23 17:29:16,320 - SELECT cost_center.cost_center_description AS cost_center_cost_center_description, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount ELSE %(param_1)s END + CASE WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_2)s END) AS total_expenditure 
FROM ledger INNER JOIN cost_center ON ledger.cost_center_id = cost_center.cost_center_id 
WHERE ledger.department_id = %(department_id_1)s GROUP BY cost_center.cost_center_description ORDER BY sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount ELSE %(param_1)s END + CASE WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_2)s END) DESC 
 LIMIT %(param_3)s
2025-02-23 17:29:16,321 - SELECT year(ledger.general_ledger_date) AS time, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_1)s END) AS total_revenue, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_3)s AND ledger.amount > %(amount_3)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_4)s AND ledger.amount < %(amount_4)s) THEN -ledger.amount ELSE %(param_2)s END) AS total_expenses 
FROM ledger 
WHERE ledger.department_id = %(department_id_1)s GROUP BY year(ledger.general_ledger_date) ORDER BY year(ledger.general_ledger_date)
2025-02-23 17:29:16,322 - [cached since 280.8s ago] {'ledger_description_1': 'Revenues', 'param_1': 0, 'ledger_description_2': 'Expenses', 'param_2': 0, 'department_id_1': 107, 'param_3': 5}
2025-02-23 17:29:16,323 - [cached since 280.8s ago] {'ledger_description_1': 'Expenses', 'amount_1': 0, 'param_1': 0, 'ledger_description_2': 'Revenues', 'amount_2': 0, 'param_2': 0, 'department_id_1': 107, 'param_3': 10}
2025-02-23 17:29:16,324 - [cached since 280.8s ago] {'ledger_description_1': 'Revenues', 'amount_1': 0, 'ledger_description_2': 'Expenses', 'amount_2': 0, 'param_1': 0, 'ledger_description_3': 'Expenses', 'amount_3': 0, 'ledger_description_4': 'Revenues', 'amount_4': 0, 'param_2': 0, 'department_id_1': 107}
2025-02-23 17:29:19,561 - ROLLBACK
2025-02-23 17:29:19,562 - GET http://127.0.0.1:8000/api/revenue-expenses/?department=107 - 3.25 ms
2025-02-23 17:29:20,025 - ROLLBACK
2025-02-23 17:29:20,027 - GET http://127.0.0.1:8000/api/top-roi/?department=107 - 3.72 ms
2025-02-23 17:29:20,075 - ROLLBACK
2025-02-23 17:29:20,077 - GET http://127.0.0.1:8000/api/top-budget/?department=107 - 3.77 ms
2025-02-23 17:30:05,850 - BEGIN (implicit)
2025-02-23 17:30:05,853 - BEGIN (implicit)
2025-02-23 17:30:05,859 - SELECT cost_center.cost_center_description AS cost_center_cost_center_description, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s) THEN ledger.amount ELSE %(param_1)s END) - sum(CASE WHEN (ledger.ledger_description = %(ledger_description_2)s) THEN ledger.amount ELSE %(param_2)s END) AS roi 
FROM ledger INNER JOIN cost_center ON ledger.cost_center_id = cost_center.cost_center_id 
WHERE ledger.department_id = %(department_id_1)s AND ledger.general_ledger_date BETWEEN %(general_ledger_date_1)s AND %(general_ledger_date_2)s GROUP BY cost_center.cost_center_description ORDER BY sum(ledger.amount) DESC 
 LIMIT %(param_3)s
2025-02-23 17:30:05,865 - SELECT cost_center.cost_center_description AS cost_center_cost_center_description, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount ELSE %(param_1)s END + CASE WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_2)s END) AS total_expenditure 
FROM ledger INNER JOIN cost_center ON ledger.cost_center_id = cost_center.cost_center_id 
WHERE ledger.department_id = %(department_id_1)s AND ledger.general_ledger_date BETWEEN %(general_ledger_date_1)s AND %(general_ledger_date_2)s GROUP BY cost_center.cost_center_description ORDER BY sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount ELSE %(param_1)s END + CASE WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_2)s END) DESC 
 LIMIT %(param_3)s
2025-02-23 17:30:05,866 - [generated in 0.00720s] {'ledger_description_1': 'Revenues', 'param_1': 0, 'ledger_description_2': 'Expenses', 'param_2': 0, 'department_id_1': 107, 'general_ledger_date_1': '2020-12-03', 'general_ledger_date_2': '2020-12-16', 'param_3': 5}
2025-02-23 17:30:05,867 - [generated in 0.00243s] {'ledger_description_1': 'Expenses', 'amount_1': 0, 'param_1': 0, 'ledger_description_2': 'Revenues', 'amount_2': 0, 'param_2': 0, 'department_id_1': 107, 'general_ledger_date_1': '2020-12-03', 'general_ledger_date_2': '2020-12-16', 'param_3': 10}
2025-02-23 17:30:05,929 - BEGIN (implicit)
2025-02-23 17:30:05,940 - SELECT day(ledger.general_ledger_date) AS time, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_1)s END) AS total_revenue, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_3)s AND ledger.amount > %(amount_3)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_4)s AND ledger.amount < %(amount_4)s) THEN -ledger.amount ELSE %(param_2)s END) AS total_expenses 
FROM ledger 
WHERE ledger.department_id = %(department_id_1)s AND ledger.general_ledger_date BETWEEN %(general_ledger_date_1)s AND %(general_ledger_date_2)s GROUP BY day(ledger.general_ledger_date) ORDER BY day(ledger.general_ledger_date)
2025-02-23 17:30:05,941 - [generated in 0.00125s] {'ledger_description_1': 'Revenues', 'amount_1': 0, 'ledger_description_2': 'Expenses', 'amount_2': 0, 'param_1': 0, 'ledger_description_3': 'Expenses', 'amount_3': 0, 'ledger_description_4': 'Revenues', 'amount_4': 0, 'param_2': 0, 'department_id_1': 107, 'general_ledger_date_1': '2020-12-03', 'general_ledger_date_2': '2020-12-16'}
2025-02-23 17:30:05,946 - ROLLBACK
2025-02-23 17:30:05,952 - GET http://127.0.0.1:8000/api/revenue-expenses/?department=107&start_date=2020-12-03&end_date=2020-12-16 - 0.11 ms
2025-02-23 17:30:05,971 - ROLLBACK
2025-02-23 17:30:05,971 - ROLLBACK
2025-02-23 17:30:05,973 - GET http://127.0.0.1:8000/api/top-roi/?department=107&start_date=2020-12-03&end_date=2020-12-16 - 0.13 ms
2025-02-23 17:30:05,975 - GET http://127.0.0.1:8000/api/top-budget/?department=107&start_date=2020-12-03&end_date=2020-12-16 - 0.13 ms
2025-02-23 17:31:17,421 - BEGIN (implicit)
2025-02-23 17:31:17,422 - SELECT cost_center.cost_center_description AS cost_center_cost_center_description, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s) THEN ledger.amount ELSE %(param_1)s END) - sum(CASE WHEN (ledger.ledger_description = %(ledger_description_2)s) THEN ledger.amount ELSE %(param_2)s END) AS roi 
FROM ledger INNER JOIN cost_center ON ledger.cost_center_id = cost_center.cost_center_id 
WHERE ledger.department_id = %(department_id_1)s AND ledger.general_ledger_date BETWEEN %(general_ledger_date_1)s AND %(general_ledger_date_2)s GROUP BY cost_center.cost_center_description ORDER BY sum(ledger.amount) DESC 
 LIMIT %(param_3)s
2025-02-23 17:31:17,423 - [cached since 71.56s ago] {'ledger_description_1': 'Revenues', 'param_1': 0, 'ledger_description_2': 'Expenses', 'param_2': 0, 'department_id_1': 107, 'general_ledger_date_1': '2020-12-03', 'general_ledger_date_2': '2020-12-16', 'param_3': 5}
2025-02-23 17:31:17,428 - ROLLBACK
2025-02-23 17:31:17,429 - GET http://127.0.0.1:8000/api/top-roi/?department=107&start_date=2020-12-03&end_date=2020-12-16 - 0.01 ms
2025-02-23 17:33:56,927 - GET http://127.0.0.1:8000/api/initialise/ - 0.00 ms
2025-02-23 17:33:57,089 - BEGIN (implicit)
2025-02-23 17:33:57,090 - SELECT department.department_name AS department_department_name, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s) THEN ledger.amount ELSE %(param_1)s END) - sum(CASE WHEN (ledger.ledger_description = %(ledger_description_2)s) THEN ledger.amount ELSE %(param_2)s END) AS roi 
FROM ledger INNER JOIN department ON ledger.department_id = department.department_id GROUP BY department.department_name ORDER BY sum(ledger.amount) DESC 
 LIMIT %(param_3)s
2025-02-23 17:33:57,093 - BEGIN (implicit)
2025-02-23 17:33:57,094 - [cached since 572.6s ago] {'ledger_description_1': 'Revenues', 'param_1': 0, 'ledger_description_2': 'Expenses', 'param_2': 0, 'param_3': 5}
2025-02-23 17:33:57,102 - GET http://127.0.0.1:8000/api/initialise/ - 0.00 ms
2025-02-23 17:33:57,095 - SELECT department.department_name AS department_department_name, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount ELSE %(param_1)s END + CASE WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_2)s END) AS total_expenditure 
FROM ledger INNER JOIN department ON ledger.department_id = department.department_id GROUP BY department.department_name ORDER BY sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount ELSE %(param_1)s END + CASE WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_2)s END) DESC 
 LIMIT %(param_3)s
2025-02-23 17:33:57,098 - BEGIN (implicit)
2025-02-23 17:33:57,103 - [cached since 572.6s ago] {'ledger_description_1': 'Expenses', 'amount_1': 0, 'param_1': 0, 'ledger_description_2': 'Revenues', 'amount_2': 0, 'param_2': 0, 'param_3': 10}
2025-02-23 17:33:57,105 - SELECT year(ledger.general_ledger_date) AS time, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_1)s END) AS total_revenue, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_3)s AND ledger.amount > %(amount_3)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_4)s AND ledger.amount < %(amount_4)s) THEN -ledger.amount ELSE %(param_2)s END) AS total_expenses 
FROM ledger GROUP BY year(ledger.general_ledger_date) ORDER BY year(ledger.general_ledger_date)
2025-02-23 17:33:57,107 - [cached since 572.6s ago] {'ledger_description_1': 'Revenues', 'amount_1': 0, 'ledger_description_2': 'Expenses', 'amount_2': 0, 'param_1': 0, 'ledger_description_3': 'Expenses', 'amount_3': 0, 'ledger_description_4': 'Revenues', 'amount_4': 0, 'param_2': 0}
2025-02-23 17:33:57,994 - BEGIN (implicit)
2025-02-23 17:33:57,995 - SELECT department.department_id AS department_department_id, department.department_name AS department_department_name 
FROM department
2025-02-23 17:33:57,995 - [cached since 573.5s ago] {}
2025-02-23 17:33:57,998 - SELECT min(ledger.general_ledger_date) AS min_1 
FROM ledger
2025-02-23 17:33:57,999 - [cached since 573.5s ago] {}
2025-02-23 17:33:58,004 - SELECT max(ledger.general_ledger_date) AS max_1 
FROM ledger
2025-02-23 17:33:58,005 - [cached since 573.5s ago] {}
2025-02-23 17:33:58,008 - ROLLBACK
2025-02-23 17:33:58,010 - GET http://127.0.0.1:8000/api/initialise - 0.02 ms
2025-02-23 17:33:58,014 - BEGIN (implicit)
2025-02-23 17:33:58,016 - SELECT department.department_id AS department_department_id, department.department_name AS department_department_name 
FROM department
2025-02-23 17:33:58,016 - [cached since 573.5s ago] {}
2025-02-23 17:33:58,019 - SELECT min(ledger.general_ledger_date) AS min_1 
FROM ledger
2025-02-23 17:33:58,019 - [cached since 573.5s ago] {}
2025-02-23 17:33:58,021 - SELECT max(ledger.general_ledger_date) AS max_1 
FROM ledger
2025-02-23 17:33:58,021 - [cached since 573.5s ago] {}
2025-02-23 17:33:58,024 - ROLLBACK
2025-02-23 17:33:58,026 - GET http://127.0.0.1:8000/api/initialise - 0.01 ms
2025-02-23 17:33:58,851 - ROLLBACK
2025-02-23 17:33:58,852 - GET http://127.0.0.1:8000/api/revenue-expenses/ - 1.77 ms
2025-02-23 17:33:58,858 - BEGIN (implicit)
2025-02-23 17:33:58,859 - SELECT year(ledger.general_ledger_date) AS time, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_1)s END) AS total_revenue, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_3)s AND ledger.amount > %(amount_3)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_4)s AND ledger.amount < %(amount_4)s) THEN -ledger.amount ELSE %(param_2)s END) AS total_expenses 
FROM ledger GROUP BY year(ledger.general_ledger_date) ORDER BY year(ledger.general_ledger_date)
2025-02-23 17:33:58,860 - [cached since 574.4s ago] {'ledger_description_1': 'Revenues', 'amount_1': 0, 'ledger_description_2': 'Expenses', 'amount_2': 0, 'param_1': 0, 'ledger_description_3': 'Expenses', 'amount_3': 0, 'ledger_description_4': 'Revenues', 'amount_4': 0, 'param_2': 0}
2025-02-23 17:33:59,557 - ROLLBACK
2025-02-23 17:33:59,558 - GET http://127.0.0.1:8000/api/top-roi/ - 2.48 ms
2025-02-23 17:33:59,563 - BEGIN (implicit)
2025-02-23 17:33:59,564 - SELECT department.department_name AS department_department_name, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s) THEN ledger.amount ELSE %(param_1)s END) - sum(CASE WHEN (ledger.ledger_description = %(ledger_description_2)s) THEN ledger.amount ELSE %(param_2)s END) AS roi 
FROM ledger INNER JOIN department ON ledger.department_id = department.department_id GROUP BY department.department_name ORDER BY sum(ledger.amount) DESC 
 LIMIT %(param_3)s
2025-02-23 17:33:59,564 - [cached since 575.1s ago] {'ledger_description_1': 'Revenues', 'param_1': 0, 'ledger_description_2': 'Expenses', 'param_2': 0, 'param_3': 5}
2025-02-23 17:33:59,648 - ROLLBACK
2025-02-23 17:33:59,649 - GET http://127.0.0.1:8000/api/top-budget/ - 2.57 ms
2025-02-23 17:33:59,654 - BEGIN (implicit)
2025-02-23 17:33:59,657 - SELECT department.department_name AS department_department_name, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount ELSE %(param_1)s END + CASE WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_2)s END) AS total_expenditure 
FROM ledger INNER JOIN department ON ledger.department_id = department.department_id GROUP BY department.department_name ORDER BY sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount ELSE %(param_1)s END + CASE WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_2)s END) DESC 
 LIMIT %(param_3)s
2025-02-23 17:33:59,658 - [cached since 575.2s ago] {'ledger_description_1': 'Expenses', 'amount_1': 0, 'param_1': 0, 'ledger_description_2': 'Revenues', 'amount_2': 0, 'param_2': 0, 'param_3': 10}
2025-02-23 17:34:00,330 - ROLLBACK
2025-02-23 17:34:00,333 - GET http://127.0.0.1:8000/api/revenue-expenses/ - 1.48 ms
2025-02-23 17:34:02,258 - ROLLBACK
2025-02-23 17:34:02,259 - GET http://127.0.0.1:8000/api/top-roi/ - 2.70 ms
2025-02-23 17:34:02,303 - ROLLBACK
2025-02-23 17:34:02,306 - GET http://127.0.0.1:8000/api/top-budget/ - 2.65 ms
2025-02-23 17:39:35,793 - GET http://127.0.0.1:8000/api/initialise/ - 0.00 ms
2025-02-23 17:39:35,952 - BEGIN (implicit)
2025-02-23 17:39:35,954 - SELECT department.department_name AS department_department_name, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s) THEN ledger.amount ELSE %(param_1)s END) - sum(CASE WHEN (ledger.ledger_description = %(ledger_description_2)s) THEN ledger.amount ELSE %(param_2)s END) AS roi 
FROM ledger INNER JOIN department ON ledger.department_id = department.department_id GROUP BY department.department_name ORDER BY sum(ledger.amount) DESC 
 LIMIT %(param_3)s
2025-02-23 17:39:35,955 - [cached since 911.5s ago] {'ledger_description_1': 'Revenues', 'param_1': 0, 'ledger_description_2': 'Expenses', 'param_2': 0, 'param_3': 5}
2025-02-23 17:39:35,964 - GET http://127.0.0.1:8000/api/initialise/ - 0.00 ms
2025-02-23 17:39:35,964 - BEGIN (implicit)
2025-02-23 17:39:35,967 - BEGIN (implicit)
2025-02-23 17:39:35,968 - SELECT department.department_name AS department_department_name, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount ELSE %(param_1)s END + CASE WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_2)s END) AS total_expenditure 
FROM ledger INNER JOIN department ON ledger.department_id = department.department_id GROUP BY department.department_name ORDER BY sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount ELSE %(param_1)s END + CASE WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_2)s END) DESC 
 LIMIT %(param_3)s
2025-02-23 17:39:35,976 - [cached since 911.5s ago] {'ledger_description_1': 'Expenses', 'amount_1': 0, 'param_1': 0, 'ledger_description_2': 'Revenues', 'amount_2': 0, 'param_2': 0, 'param_3': 10}
2025-02-23 17:39:35,975 - SELECT year(ledger.general_ledger_date) AS time, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_1)s END) AS total_revenue, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_3)s AND ledger.amount > %(amount_3)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_4)s AND ledger.amount < %(amount_4)s) THEN -ledger.amount ELSE %(param_2)s END) AS total_expenses 
FROM ledger GROUP BY year(ledger.general_ledger_date) ORDER BY year(ledger.general_ledger_date)
2025-02-23 17:39:35,980 - [cached since 911.5s ago] {'ledger_description_1': 'Revenues', 'amount_1': 0, 'ledger_description_2': 'Expenses', 'amount_2': 0, 'param_1': 0, 'ledger_description_3': 'Expenses', 'amount_3': 0, 'ledger_description_4': 'Revenues', 'amount_4': 0, 'param_2': 0}
2025-02-23 17:39:36,967 - BEGIN (implicit)
2025-02-23 17:39:36,969 - SELECT department.department_id AS department_department_id, department.department_name AS department_department_name 
FROM department
2025-02-23 17:39:36,969 - [cached since 912.5s ago] {}
2025-02-23 17:39:36,976 - SELECT min(ledger.general_ledger_date) AS min_1 
FROM ledger
2025-02-23 17:39:36,977 - [cached since 912.5s ago] {}
2025-02-23 17:39:36,980 - SELECT max(ledger.general_ledger_date) AS max_1 
FROM ledger
2025-02-23 17:39:36,981 - [cached since 912.5s ago] {}
2025-02-23 17:39:36,991 - ROLLBACK
2025-02-23 17:39:36,995 - GET http://127.0.0.1:8000/api/initialise - 0.03 ms
2025-02-23 17:39:37,013 - BEGIN (implicit)
2025-02-23 17:39:37,015 - SELECT department.department_id AS department_department_id, department.department_name AS department_department_name 
FROM department
2025-02-23 17:39:37,015 - [cached since 912.5s ago] {}
2025-02-23 17:39:37,023 - SELECT min(ledger.general_ledger_date) AS min_1 
FROM ledger
2025-02-23 17:39:37,026 - [cached since 912.5s ago] {}
2025-02-23 17:39:37,030 - SELECT max(ledger.general_ledger_date) AS max_1 
FROM ledger
2025-02-23 17:39:37,030 - [cached since 912.5s ago] {}
2025-02-23 17:39:37,033 - ROLLBACK
2025-02-23 17:39:37,036 - GET http://127.0.0.1:8000/api/initialise - 0.02 ms
2025-02-23 17:39:38,122 - ROLLBACK
2025-02-23 17:39:38,125 - GET http://127.0.0.1:8000/api/revenue-expenses/ - 2.17 ms
2025-02-23 17:39:38,130 - BEGIN (implicit)
2025-02-23 17:39:38,132 - SELECT year(ledger.general_ledger_date) AS time, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_1)s END) AS total_revenue, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_3)s AND ledger.amount > %(amount_3)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_4)s AND ledger.amount < %(amount_4)s) THEN -ledger.amount ELSE %(param_2)s END) AS total_expenses 
FROM ledger GROUP BY year(ledger.general_ledger_date) ORDER BY year(ledger.general_ledger_date)
2025-02-23 17:39:38,133 - [cached since 913.7s ago] {'ledger_description_1': 'Revenues', 'amount_1': 0, 'ledger_description_2': 'Expenses', 'amount_2': 0, 'param_1': 0, 'ledger_description_3': 'Expenses', 'amount_3': 0, 'ledger_description_4': 'Revenues', 'amount_4': 0, 'param_2': 0}
2025-02-23 17:39:38,844 - ROLLBACK
2025-02-23 17:39:38,846 - GET http://127.0.0.1:8000/api/top-roi/ - 2.90 ms
2025-02-23 17:39:38,851 - BEGIN (implicit)
2025-02-23 17:39:38,851 - SELECT department.department_name AS department_department_name, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s) THEN ledger.amount ELSE %(param_1)s END) - sum(CASE WHEN (ledger.ledger_description = %(ledger_description_2)s) THEN ledger.amount ELSE %(param_2)s END) AS roi 
FROM ledger INNER JOIN department ON ledger.department_id = department.department_id GROUP BY department.department_name ORDER BY sum(ledger.amount) DESC 
 LIMIT %(param_3)s
2025-02-23 17:39:38,852 - [cached since 914.4s ago] {'ledger_description_1': 'Revenues', 'param_1': 0, 'ledger_description_2': 'Expenses', 'param_2': 0, 'param_3': 5}
2025-02-23 17:39:38,998 - ROLLBACK
2025-02-23 17:39:39,000 - GET http://127.0.0.1:8000/api/top-budget/ - 3.05 ms
2025-02-23 17:39:39,006 - BEGIN (implicit)
2025-02-23 17:39:39,008 - SELECT department.department_name AS department_department_name, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount ELSE %(param_1)s END + CASE WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_2)s END) AS total_expenditure 
FROM ledger INNER JOIN department ON ledger.department_id = department.department_id GROUP BY department.department_name ORDER BY sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount ELSE %(param_1)s END + CASE WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_2)s END) DESC 
 LIMIT %(param_3)s
2025-02-23 17:39:39,008 - [cached since 914.5s ago] {'ledger_description_1': 'Expenses', 'amount_1': 0, 'param_1': 0, 'ledger_description_2': 'Revenues', 'amount_2': 0, 'param_2': 0, 'param_3': 10}
2025-02-23 17:39:39,652 - ROLLBACK
2025-02-23 17:39:39,653 - GET http://127.0.0.1:8000/api/revenue-expenses/ - 1.53 ms
2025-02-23 17:39:40,930 - ROLLBACK
2025-02-23 17:39:40,931 - GET http://127.0.0.1:8000/api/top-roi/ - 2.08 ms
2025-02-23 17:39:41,108 - ROLLBACK
2025-02-23 17:39:41,109 - GET http://127.0.0.1:8000/api/top-budget/ - 2.11 ms
2025-02-23 17:39:49,279 - GET http://127.0.0.1:8000/api/initialise/ - 0.00 ms
2025-02-23 17:39:49,414 - BEGIN (implicit)
2025-02-23 17:39:49,415 - SELECT department.department_name AS department_department_name, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s) THEN ledger.amount ELSE %(param_1)s END) - sum(CASE WHEN (ledger.ledger_description = %(ledger_description_2)s) THEN ledger.amount ELSE %(param_2)s END) AS roi 
FROM ledger INNER JOIN department ON ledger.department_id = department.department_id GROUP BY department.department_name ORDER BY sum(ledger.amount) DESC 
 LIMIT %(param_3)s
2025-02-23 17:39:49,417 - [cached since 924.9s ago] {'ledger_description_1': 'Revenues', 'param_1': 0, 'ledger_description_2': 'Expenses', 'param_2': 0, 'param_3': 5}
2025-02-23 17:39:49,422 - BEGIN (implicit)
2025-02-23 17:39:49,425 - BEGIN (implicit)
2025-02-23 17:39:49,426 - SELECT department.department_name AS department_department_name, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount ELSE %(param_1)s END + CASE WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_2)s END) AS total_expenditure 
FROM ledger INNER JOIN department ON ledger.department_id = department.department_id GROUP BY department.department_name ORDER BY sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount ELSE %(param_1)s END + CASE WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_2)s END) DESC 
 LIMIT %(param_3)s
2025-02-23 17:39:49,429 - GET http://127.0.0.1:8000/api/initialise/ - 0.00 ms
2025-02-23 17:39:49,428 - SELECT year(ledger.general_ledger_date) AS time, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_1)s END) AS total_revenue, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_3)s AND ledger.amount > %(amount_3)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_4)s AND ledger.amount < %(amount_4)s) THEN -ledger.amount ELSE %(param_2)s END) AS total_expenses 
FROM ledger GROUP BY year(ledger.general_ledger_date) ORDER BY year(ledger.general_ledger_date)
2025-02-23 17:39:49,429 - [cached since 925s ago] {'ledger_description_1': 'Expenses', 'amount_1': 0, 'param_1': 0, 'ledger_description_2': 'Revenues', 'amount_2': 0, 'param_2': 0, 'param_3': 10}
2025-02-23 17:39:49,430 - [cached since 925s ago] {'ledger_description_1': 'Revenues', 'amount_1': 0, 'ledger_description_2': 'Expenses', 'amount_2': 0, 'param_1': 0, 'ledger_description_3': 'Expenses', 'amount_3': 0, 'ledger_description_4': 'Revenues', 'amount_4': 0, 'param_2': 0}
2025-02-23 17:39:50,101 - BEGIN (implicit)
2025-02-23 17:39:50,102 - SELECT department.department_id AS department_department_id, department.department_name AS department_department_name 
FROM department
2025-02-23 17:39:50,106 - [cached since 925.6s ago] {}
2025-02-23 17:39:50,112 - SELECT min(ledger.general_ledger_date) AS min_1 
FROM ledger
2025-02-23 17:39:50,113 - [cached since 925.6s ago] {}
2025-02-23 17:39:50,118 - SELECT max(ledger.general_ledger_date) AS max_1 
FROM ledger
2025-02-23 17:39:50,119 - [cached since 925.6s ago] {}
2025-02-23 17:39:50,135 - ROLLBACK
2025-02-23 17:39:50,138 - GET http://127.0.0.1:8000/api/initialise - 0.04 ms
2025-02-23 17:39:50,152 - BEGIN (implicit)
2025-02-23 17:39:50,158 - SELECT department.department_id AS department_department_id, department.department_name AS department_department_name 
FROM department
2025-02-23 17:39:50,162 - [cached since 925.7s ago] {}
2025-02-23 17:39:50,168 - SELECT min(ledger.general_ledger_date) AS min_1 
FROM ledger
2025-02-23 17:39:50,169 - [cached since 925.7s ago] {}
2025-02-23 17:39:50,180 - SELECT max(ledger.general_ledger_date) AS max_1 
FROM ledger
2025-02-23 17:39:50,181 - [cached since 925.7s ago] {}
2025-02-23 17:39:50,200 - ROLLBACK
2025-02-23 17:39:50,205 - GET http://127.0.0.1:8000/api/initialise - 0.06 ms
2025-02-23 17:39:52,260 - ROLLBACK
2025-02-23 17:39:52,265 - GET http://127.0.0.1:8000/api/revenue-expenses/ - 2.85 ms
2025-02-23 17:39:52,274 - BEGIN (implicit)
2025-02-23 17:39:52,275 - SELECT year(ledger.general_ledger_date) AS time, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_1)s END) AS total_revenue, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_3)s AND ledger.amount > %(amount_3)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_4)s AND ledger.amount < %(amount_4)s) THEN -ledger.amount ELSE %(param_2)s END) AS total_expenses 
FROM ledger GROUP BY year(ledger.general_ledger_date) ORDER BY year(ledger.general_ledger_date)
2025-02-23 17:39:52,276 - [cached since 927.8s ago] {'ledger_description_1': 'Revenues', 'amount_1': 0, 'ledger_description_2': 'Expenses', 'amount_2': 0, 'param_1': 0, 'ledger_description_3': 'Expenses', 'amount_3': 0, 'ledger_description_4': 'Revenues', 'amount_4': 0, 'param_2': 0}
2025-02-23 17:39:53,157 - ROLLBACK
2025-02-23 17:39:53,158 - GET http://127.0.0.1:8000/api/top-roi/ - 3.75 ms
2025-02-23 17:39:53,166 - BEGIN (implicit)
2025-02-23 17:39:53,167 - SELECT department.department_name AS department_department_name, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s) THEN ledger.amount ELSE %(param_1)s END) - sum(CASE WHEN (ledger.ledger_description = %(ledger_description_2)s) THEN ledger.amount ELSE %(param_2)s END) AS roi 
FROM ledger INNER JOIN department ON ledger.department_id = department.department_id GROUP BY department.department_name ORDER BY sum(ledger.amount) DESC 
 LIMIT %(param_3)s
2025-02-23 17:39:53,168 - [cached since 928.7s ago] {'ledger_description_1': 'Revenues', 'param_1': 0, 'ledger_description_2': 'Expenses', 'param_2': 0, 'param_3': 5}
2025-02-23 17:39:53,289 - ROLLBACK
2025-02-23 17:39:53,290 - GET http://127.0.0.1:8000/api/top-budget/ - 3.88 ms
2025-02-23 17:39:53,295 - BEGIN (implicit)
2025-02-23 17:39:53,296 - SELECT department.department_name AS department_department_name, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount ELSE %(param_1)s END + CASE WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_2)s END) AS total_expenditure 
FROM ledger INNER JOIN department ON ledger.department_id = department.department_id GROUP BY department.department_name ORDER BY sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount ELSE %(param_1)s END + CASE WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_2)s END) DESC 
 LIMIT %(param_3)s
2025-02-23 17:39:53,297 - [cached since 928.8s ago] {'ledger_description_1': 'Expenses', 'amount_1': 0, 'param_1': 0, 'ledger_description_2': 'Revenues', 'amount_2': 0, 'param_2': 0, 'param_3': 10}
2025-02-23 17:39:54,639 - ROLLBACK
2025-02-23 17:39:54,640 - GET http://127.0.0.1:8000/api/revenue-expenses/ - 2.37 ms
2025-02-23 17:39:56,541 - ROLLBACK
2025-02-23 17:39:56,543 - GET http://127.0.0.1:8000/api/top-roi/ - 3.38 ms
2025-02-23 17:39:56,806 - ROLLBACK
2025-02-23 17:39:56,807 - GET http://127.0.0.1:8000/api/top-budget/ - 3.51 ms
2025-02-23 17:41:08,396 - GET http://127.0.0.1:8000/api/initialise/ - 0.00 ms
2025-02-23 17:41:08,588 - BEGIN (implicit)
2025-02-23 17:41:08,590 - SELECT department.department_name AS department_department_name, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s) THEN ledger.amount ELSE %(param_1)s END) - sum(CASE WHEN (ledger.ledger_description = %(ledger_description_2)s) THEN ledger.amount ELSE %(param_2)s END) AS roi 
FROM ledger INNER JOIN department ON ledger.department_id = department.department_id GROUP BY department.department_name ORDER BY sum(ledger.amount) DESC 
 LIMIT %(param_3)s
2025-02-23 17:41:08,592 - [cached since 1004s ago] {'ledger_description_1': 'Revenues', 'param_1': 0, 'ledger_description_2': 'Expenses', 'param_2': 0, 'param_3': 5}
2025-02-23 17:41:08,598 - GET http://127.0.0.1:8000/api/initialise/ - 0.00 ms
2025-02-23 17:41:08,597 - BEGIN (implicit)
2025-02-23 17:41:08,601 - BEGIN (implicit)
2025-02-23 17:41:08,603 - SELECT department.department_name AS department_department_name, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount ELSE %(param_1)s END + CASE WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_2)s END) AS total_expenditure 
FROM ledger INNER JOIN department ON ledger.department_id = department.department_id GROUP BY department.department_name ORDER BY sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount ELSE %(param_1)s END + CASE WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_2)s END) DESC 
 LIMIT %(param_3)s
2025-02-23 17:41:08,605 - SELECT year(ledger.general_ledger_date) AS time, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_1)s END) AS total_revenue, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_3)s AND ledger.amount > %(amount_3)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_4)s AND ledger.amount < %(amount_4)s) THEN -ledger.amount ELSE %(param_2)s END) AS total_expenses 
FROM ledger GROUP BY year(ledger.general_ledger_date) ORDER BY year(ledger.general_ledger_date)
2025-02-23 17:41:08,606 - [cached since 1004s ago] {'ledger_description_1': 'Expenses', 'amount_1': 0, 'param_1': 0, 'ledger_description_2': 'Revenues', 'amount_2': 0, 'param_2': 0, 'param_3': 10}
2025-02-23 17:41:08,607 - [cached since 1004s ago] {'ledger_description_1': 'Revenues', 'amount_1': 0, 'ledger_description_2': 'Expenses', 'amount_2': 0, 'param_1': 0, 'ledger_description_3': 'Expenses', 'amount_3': 0, 'ledger_description_4': 'Revenues', 'amount_4': 0, 'param_2': 0}
2025-02-23 17:41:09,557 - BEGIN (implicit)
2025-02-23 17:41:09,558 - SELECT department.department_id AS department_department_id, department.department_name AS department_department_name 
FROM department
2025-02-23 17:41:09,559 - [cached since 1005s ago] {}
2025-02-23 17:41:09,568 - SELECT min(ledger.general_ledger_date) AS min_1 
FROM ledger
2025-02-23 17:41:09,569 - [cached since 1005s ago] {}
2025-02-23 17:41:09,571 - SELECT max(ledger.general_ledger_date) AS max_1 
FROM ledger
2025-02-23 17:41:09,572 - [cached since 1005s ago] {}
2025-02-23 17:41:09,575 - ROLLBACK
2025-02-23 17:41:09,577 - GET http://127.0.0.1:8000/api/initialise - 0.02 ms
2025-02-23 17:41:09,583 - BEGIN (implicit)
2025-02-23 17:41:09,584 - SELECT department.department_id AS department_department_id, department.department_name AS department_department_name 
FROM department
2025-02-23 17:41:09,584 - [cached since 1005s ago] {}
2025-02-23 17:41:09,587 - SELECT min(ledger.general_ledger_date) AS min_1 
FROM ledger
2025-02-23 17:41:09,587 - [cached since 1005s ago] {}
2025-02-23 17:41:09,589 - SELECT max(ledger.general_ledger_date) AS max_1 
FROM ledger
2025-02-23 17:41:09,589 - [cached since 1005s ago] {}
2025-02-23 17:41:09,592 - ROLLBACK
2025-02-23 17:41:09,596 - GET http://127.0.0.1:8000/api/initialise - 0.01 ms
2025-02-23 17:41:10,509 - ROLLBACK
2025-02-23 17:41:10,512 - GET http://127.0.0.1:8000/api/revenue-expenses/ - 1.93 ms
2025-02-23 17:41:10,516 - BEGIN (implicit)
2025-02-23 17:41:10,517 - SELECT year(ledger.general_ledger_date) AS time, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_1)s END) AS total_revenue, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_3)s AND ledger.amount > %(amount_3)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_4)s AND ledger.amount < %(amount_4)s) THEN -ledger.amount ELSE %(param_2)s END) AS total_expenses 
FROM ledger GROUP BY year(ledger.general_ledger_date) ORDER BY year(ledger.general_ledger_date)
2025-02-23 17:41:10,517 - [cached since 1006s ago] {'ledger_description_1': 'Revenues', 'amount_1': 0, 'ledger_description_2': 'Expenses', 'amount_2': 0, 'param_1': 0, 'ledger_description_3': 'Expenses', 'amount_3': 0, 'ledger_description_4': 'Revenues', 'amount_4': 0, 'param_2': 0}
2025-02-23 17:41:11,214 - ROLLBACK
2025-02-23 17:41:11,215 - GET http://127.0.0.1:8000/api/top-roi/ - 2.63 ms
2025-02-23 17:41:11,219 - BEGIN (implicit)
2025-02-23 17:41:11,221 - SELECT department.department_name AS department_department_name, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s) THEN ledger.amount ELSE %(param_1)s END) - sum(CASE WHEN (ledger.ledger_description = %(ledger_description_2)s) THEN ledger.amount ELSE %(param_2)s END) AS roi 
FROM ledger INNER JOIN department ON ledger.department_id = department.department_id GROUP BY department.department_name ORDER BY sum(ledger.amount) DESC 
 LIMIT %(param_3)s
2025-02-23 17:41:11,222 - [cached since 1007s ago] {'ledger_description_1': 'Revenues', 'param_1': 0, 'ledger_description_2': 'Expenses', 'param_2': 0, 'param_3': 5}
2025-02-23 17:41:11,398 - ROLLBACK
2025-02-23 17:41:11,399 - GET http://127.0.0.1:8000/api/top-budget/ - 2.82 ms
2025-02-23 17:41:11,404 - BEGIN (implicit)
2025-02-23 17:41:11,405 - SELECT department.department_name AS department_department_name, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount ELSE %(param_1)s END + CASE WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_2)s END) AS total_expenditure 
FROM ledger INNER JOIN department ON ledger.department_id = department.department_id GROUP BY department.department_name ORDER BY sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount ELSE %(param_1)s END + CASE WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_2)s END) DESC 
 LIMIT %(param_3)s
2025-02-23 17:41:11,406 - [cached since 1007s ago] {'ledger_description_1': 'Expenses', 'amount_1': 0, 'param_1': 0, 'ledger_description_2': 'Revenues', 'amount_2': 0, 'param_2': 0, 'param_3': 10}
2025-02-23 17:41:11,889 - ROLLBACK
2025-02-23 17:41:11,891 - GET http://127.0.0.1:8000/api/revenue-expenses/ - 1.38 ms
2025-02-23 17:41:13,194 - ROLLBACK
2025-02-23 17:41:13,195 - GET http://127.0.0.1:8000/api/top-roi/ - 1.98 ms
2025-02-23 17:41:13,393 - ROLLBACK
2025-02-23 17:41:13,395 - GET http://127.0.0.1:8000/api/top-budget/ - 1.99 ms
2025-02-23 18:07:26,891 - GET http://127.0.0.1:8000/api/initialise/ - 0.00 ms
2025-02-23 18:07:27,203 - GET http://127.0.0.1:8000/api/initialise/ - 0.00 ms
2025-02-23 18:07:27,240 - SELECT DATABASE()
2025-02-23 18:07:27,240 - [raw sql] {}
2025-02-23 18:07:27,244 - SELECT @@sql_mode
2025-02-23 18:07:27,244 - [raw sql] {}
2025-02-23 18:07:27,246 - SELECT @@lower_case_table_names
2025-02-23 18:07:27,246 - [raw sql] {}
2025-02-23 18:07:27,252 - BEGIN (implicit)
2025-02-23 18:07:27,252 - BEGIN (implicit)
2025-02-23 18:07:27,285 - SELECT year(ledger.general_ledger_date) AS time, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_1)s END) AS total_revenue, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_3)s AND ledger.amount > %(amount_3)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_4)s AND ledger.amount < %(amount_4)s) THEN -ledger.amount ELSE %(param_2)s END) AS total_expenses 
FROM ledger GROUP BY year(ledger.general_ledger_date) ORDER BY year(ledger.general_ledger_date)
2025-02-23 18:07:27,289 - SELECT department.department_name AS department_department_name, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s) THEN ledger.amount ELSE %(param_1)s END) - sum(CASE WHEN (ledger.ledger_description = %(ledger_description_2)s) THEN ledger.amount ELSE %(param_2)s END) AS roi 
FROM ledger INNER JOIN department ON ledger.department_id = department.department_id GROUP BY department.department_name ORDER BY sum(ledger.amount) DESC 
 LIMIT %(param_3)s
2025-02-23 18:07:27,290 - [generated in 0.00438s] {'ledger_description_1': 'Revenues', 'amount_1': 0, 'ledger_description_2': 'Expenses', 'amount_2': 0, 'param_1': 0, 'ledger_description_3': 'Expenses', 'amount_3': 0, 'ledger_description_4': 'Revenues', 'amount_4': 0, 'param_2': 0}
2025-02-23 18:07:27,290 - BEGIN (implicit)
2025-02-23 18:07:27,290 - [generated in 0.00177s] {'ledger_description_1': 'Revenues', 'param_1': 0, 'ledger_description_2': 'Expenses', 'param_2': 0, 'param_3': 5}
2025-02-23 18:07:27,296 - SELECT department.department_name AS department_department_name, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount ELSE %(param_1)s END + CASE WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_2)s END) AS total_expenditure 
FROM ledger INNER JOIN department ON ledger.department_id = department.department_id GROUP BY department.department_name ORDER BY sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount ELSE %(param_1)s END + CASE WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_2)s END) DESC 
 LIMIT %(param_3)s
2025-02-23 18:07:27,296 - [generated in 0.00156s] {'ledger_description_1': 'Expenses', 'amount_1': 0, 'param_1': 0, 'ledger_description_2': 'Revenues', 'amount_2': 0, 'param_2': 0, 'param_3': 10}
2025-02-23 18:07:29,744 - BEGIN (implicit)
2025-02-23 18:07:29,744 - SELECT department.department_id AS department_department_id, department.department_name AS department_department_name 
FROM department
2025-02-23 18:07:29,746 - [generated in 0.00084s] {}
2025-02-23 18:07:29,752 - SELECT min(ledger.general_ledger_date) AS min_1 
FROM ledger
2025-02-23 18:07:29,754 - [generated in 0.00080s] {}
2025-02-23 18:07:29,758 - SELECT max(ledger.general_ledger_date) AS max_1 
FROM ledger
2025-02-23 18:07:29,758 - [generated in 0.00087s] {}
2025-02-23 18:07:29,764 - ROLLBACK
2025-02-23 18:07:29,766 - GET http://127.0.0.1:8000/api/initialise - 0.03 ms
2025-02-23 18:07:29,775 - BEGIN (implicit)
2025-02-23 18:07:29,775 - SELECT department.department_id AS department_department_id, department.department_name AS department_department_name 
FROM department
2025-02-23 18:07:29,777 - [cached since 0.03144s ago] {}
2025-02-23 18:07:29,779 - SELECT min(ledger.general_ledger_date) AS min_1 
FROM ledger
2025-02-23 18:07:29,779 - [cached since 0.02751s ago] {}
2025-02-23 18:07:29,783 - SELECT max(ledger.general_ledger_date) AS max_1 
FROM ledger
2025-02-23 18:07:29,783 - [cached since 0.0254s ago] {}
2025-02-23 18:07:29,787 - ROLLBACK
2025-02-23 18:07:29,791 - GET http://127.0.0.1:8000/api/initialise - 0.02 ms
2025-02-23 18:07:29,856 - ROLLBACK
2025-02-23 18:07:29,860 - GET http://127.0.0.1:8000/api/revenue-expenses/ - 2.68 ms
2025-02-23 18:07:29,868 - BEGIN (implicit)
2025-02-23 18:07:29,870 - SELECT year(ledger.general_ledger_date) AS time, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_1)s END) AS total_revenue, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_3)s AND ledger.amount > %(amount_3)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_4)s AND ledger.amount < %(amount_4)s) THEN -ledger.amount ELSE %(param_2)s END) AS total_expenses 
FROM ledger GROUP BY year(ledger.general_ledger_date) ORDER BY year(ledger.general_ledger_date)
2025-02-23 18:07:29,870 - [cached since 2.586s ago] {'ledger_description_1': 'Revenues', 'amount_1': 0, 'ledger_description_2': 'Expenses', 'amount_2': 0, 'param_1': 0, 'ledger_description_3': 'Expenses', 'amount_3': 0, 'ledger_description_4': 'Revenues', 'amount_4': 0, 'param_2': 0}
2025-02-23 18:07:31,303 - ROLLBACK
2025-02-23 18:07:31,307 - GET http://127.0.0.1:8000/api/top-roi/ - 4.13 ms
2025-02-23 18:07:31,315 - BEGIN (implicit)
2025-02-23 18:07:31,317 - SELECT department.department_name AS department_department_name, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s) THEN ledger.amount ELSE %(param_1)s END) - sum(CASE WHEN (ledger.ledger_description = %(ledger_description_2)s) THEN ledger.amount ELSE %(param_2)s END) AS roi 
FROM ledger INNER JOIN department ON ledger.department_id = department.department_id GROUP BY department.department_name ORDER BY sum(ledger.amount) DESC 
 LIMIT %(param_3)s
2025-02-23 18:07:31,318 - [cached since 4.029s ago] {'ledger_description_1': 'Revenues', 'param_1': 0, 'ledger_description_2': 'Expenses', 'param_2': 0, 'param_3': 5}
2025-02-23 18:07:31,583 - ROLLBACK
2025-02-23 18:07:31,586 - GET http://127.0.0.1:8000/api/top-budget/ - 4.40 ms
2025-02-23 18:07:31,593 - BEGIN (implicit)
2025-02-23 18:07:31,595 - SELECT department.department_name AS department_department_name, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount ELSE %(param_1)s END + CASE WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_2)s END) AS total_expenditure 
FROM ledger INNER JOIN department ON ledger.department_id = department.department_id GROUP BY department.department_name ORDER BY sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount ELSE %(param_1)s END + CASE WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_2)s END) DESC 
 LIMIT %(param_3)s
2025-02-23 18:07:31,596 - [cached since 4.3s ago] {'ledger_description_1': 'Expenses', 'amount_1': 0, 'param_1': 0, 'ledger_description_2': 'Revenues', 'amount_2': 0, 'param_2': 0, 'param_3': 10}
2025-02-23 18:07:32,232 - ROLLBACK
2025-02-23 18:07:32,234 - GET http://127.0.0.1:8000/api/revenue-expenses/ - 2.37 ms
2025-02-23 18:07:34,788 - ROLLBACK
2025-02-23 18:07:34,788 - GET http://127.0.0.1:8000/api/top-roi/ - 3.48 ms
2025-02-23 18:07:35,176 - ROLLBACK
2025-02-23 18:07:35,176 - GET http://127.0.0.1:8000/api/top-budget/ - 3.59 ms
2025-02-23 18:07:38,910 - GET http://127.0.0.1:8000/api/initialise/ - 0.00 ms
2025-02-23 18:07:39,106 - BEGIN (implicit)
2025-02-23 18:07:39,109 - BEGIN (implicit)
2025-02-23 18:07:39,111 - SELECT department.department_name AS department_department_name, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s) THEN ledger.amount ELSE %(param_1)s END) - sum(CASE WHEN (ledger.ledger_description = %(ledger_description_2)s) THEN ledger.amount ELSE %(param_2)s END) AS roi 
FROM ledger INNER JOIN department ON ledger.department_id = department.department_id GROUP BY department.department_name ORDER BY sum(ledger.amount) DESC 
 LIMIT %(param_3)s
2025-02-23 18:07:39,114 - BEGIN (implicit)
2025-02-23 18:07:39,122 - GET http://127.0.0.1:8000/api/initialise/ - 0.00 ms
2025-02-23 18:07:39,115 - SELECT department.department_name AS department_department_name, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount ELSE %(param_1)s END + CASE WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_2)s END) AS total_expenditure 
FROM ledger INNER JOIN department ON ledger.department_id = department.department_id GROUP BY department.department_name ORDER BY sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount ELSE %(param_1)s END + CASE WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_2)s END) DESC 
 LIMIT %(param_3)s
2025-02-23 18:07:39,117 - [cached since 11.83s ago] {'ledger_description_1': 'Revenues', 'param_1': 0, 'ledger_description_2': 'Expenses', 'param_2': 0, 'param_3': 5}
2025-02-23 18:07:39,124 - SELECT year(ledger.general_ledger_date) AS time, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_1)s END) AS total_revenue, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_3)s AND ledger.amount > %(amount_3)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_4)s AND ledger.amount < %(amount_4)s) THEN -ledger.amount ELSE %(param_2)s END) AS total_expenses 
FROM ledger GROUP BY year(ledger.general_ledger_date) ORDER BY year(ledger.general_ledger_date)
2025-02-23 18:07:39,124 - [cached since 11.83s ago] {'ledger_description_1': 'Expenses', 'amount_1': 0, 'param_1': 0, 'ledger_description_2': 'Revenues', 'amount_2': 0, 'param_2': 0, 'param_3': 10}
2025-02-23 18:07:39,128 - [cached since 11.84s ago] {'ledger_description_1': 'Revenues', 'amount_1': 0, 'ledger_description_2': 'Expenses', 'amount_2': 0, 'param_1': 0, 'ledger_description_3': 'Expenses', 'amount_3': 0, 'ledger_description_4': 'Revenues', 'amount_4': 0, 'param_2': 0}
2025-02-23 18:07:39,865 - BEGIN (implicit)
2025-02-23 18:07:39,867 - SELECT department.department_id AS department_department_id, department.department_name AS department_department_name 
FROM department
2025-02-23 18:07:39,867 - [cached since 10.12s ago] {}
2025-02-23 18:07:39,887 - SELECT min(ledger.general_ledger_date) AS min_1 
FROM ledger
2025-02-23 18:07:39,887 - [cached since 10.14s ago] {}
2025-02-23 18:07:39,891 - SELECT max(ledger.general_ledger_date) AS max_1 
FROM ledger
2025-02-23 18:07:39,892 - [cached since 10.13s ago] {}
2025-02-23 18:07:39,896 - ROLLBACK
2025-02-23 18:07:39,902 - GET http://127.0.0.1:8000/api/initialise - 0.04 ms
2025-02-23 18:07:39,910 - BEGIN (implicit)
2025-02-23 18:07:39,910 - SELECT department.department_id AS department_department_id, department.department_name AS department_department_name 
FROM department
2025-02-23 18:07:39,912 - [cached since 10.17s ago] {}
2025-02-23 18:07:39,917 - SELECT min(ledger.general_ledger_date) AS min_1 
FROM ledger
2025-02-23 18:07:39,919 - [cached since 10.17s ago] {}
2025-02-23 18:07:39,923 - SELECT max(ledger.general_ledger_date) AS max_1 
FROM ledger
2025-02-23 18:07:39,923 - [cached since 10.17s ago] {}
2025-02-23 18:07:39,927 - ROLLBACK
2025-02-23 18:07:39,931 - GET http://127.0.0.1:8000/api/initialise - 0.02 ms
2025-02-23 18:07:41,562 - ROLLBACK
2025-02-23 18:07:41,572 - GET http://127.0.0.1:8000/api/revenue-expenses/ - 2.47 ms
2025-02-23 18:07:41,580 - BEGIN (implicit)
2025-02-23 18:07:41,582 - SELECT year(ledger.general_ledger_date) AS time, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_1)s END) AS total_revenue, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_3)s AND ledger.amount > %(amount_3)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_4)s AND ledger.amount < %(amount_4)s) THEN -ledger.amount ELSE %(param_2)s END) AS total_expenses 
FROM ledger GROUP BY year(ledger.general_ledger_date) ORDER BY year(ledger.general_ledger_date)
2025-02-23 18:07:41,582 - [cached since 14.3s ago] {'ledger_description_1': 'Revenues', 'amount_1': 0, 'ledger_description_2': 'Expenses', 'amount_2': 0, 'param_1': 0, 'ledger_description_3': 'Expenses', 'amount_3': 0, 'ledger_description_4': 'Revenues', 'amount_4': 0, 'param_2': 0}
2025-02-23 18:07:42,738 - ROLLBACK
2025-02-23 18:07:42,739 - GET http://127.0.0.1:8000/api/top-roi/ - 3.64 ms
2025-02-23 18:07:42,745 - BEGIN (implicit)
2025-02-23 18:07:42,747 - SELECT department.department_name AS department_department_name, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s) THEN ledger.amount ELSE %(param_1)s END) - sum(CASE WHEN (ledger.ledger_description = %(ledger_description_2)s) THEN ledger.amount ELSE %(param_2)s END) AS roi 
FROM ledger INNER JOIN department ON ledger.department_id = department.department_id GROUP BY department.department_name ORDER BY sum(ledger.amount) DESC 
 LIMIT %(param_3)s
2025-02-23 18:07:42,748 - [cached since 15.46s ago] {'ledger_description_1': 'Revenues', 'param_1': 0, 'ledger_description_2': 'Expenses', 'param_2': 0, 'param_3': 5}
2025-02-23 18:07:42,995 - ROLLBACK
2025-02-23 18:07:42,995 - GET http://127.0.0.1:8000/api/top-budget/ - 3.90 ms
2025-02-23 18:07:43,004 - BEGIN (implicit)
2025-02-23 18:07:43,006 - SELECT department.department_name AS department_department_name, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount ELSE %(param_1)s END + CASE WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_2)s END) AS total_expenditure 
FROM ledger INNER JOIN department ON ledger.department_id = department.department_id GROUP BY department.department_name ORDER BY sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount ELSE %(param_1)s END + CASE WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_2)s END) DESC 
 LIMIT %(param_3)s
2025-02-23 18:07:43,008 - [cached since 15.71s ago] {'ledger_description_1': 'Expenses', 'amount_1': 0, 'param_1': 0, 'ledger_description_2': 'Revenues', 'amount_2': 0, 'param_2': 0, 'param_3': 10}
2025-02-23 18:07:43,671 - ROLLBACK
2025-02-23 18:07:43,672 - GET http://127.0.0.1:8000/api/revenue-expenses/ - 2.10 ms
2025-02-23 18:07:46,263 - ROLLBACK
2025-02-23 18:07:46,266 - GET http://127.0.0.1:8000/api/top-roi/ - 3.52 ms
2025-02-23 18:07:46,621 - ROLLBACK
2025-02-23 18:07:46,621 - GET http://127.0.0.1:8000/api/top-budget/ - 3.62 ms
2025-02-23 18:07:47,616 - GET http://127.0.0.1:8000/api/initialise/ - 0.00 ms
2025-02-23 18:07:47,837 - BEGIN (implicit)
2025-02-23 18:07:47,843 - GET http://127.0.0.1:8000/api/initialise/ - 0.00 ms
2025-02-23 18:07:47,839 - BEGIN (implicit)
2025-02-23 18:07:47,841 - BEGIN (implicit)
2025-02-23 18:07:47,845 - SELECT department.department_name AS department_department_name, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s) THEN ledger.amount ELSE %(param_1)s END) - sum(CASE WHEN (ledger.ledger_description = %(ledger_description_2)s) THEN ledger.amount ELSE %(param_2)s END) AS roi 
FROM ledger INNER JOIN department ON ledger.department_id = department.department_id GROUP BY department.department_name ORDER BY sum(ledger.amount) DESC 
 LIMIT %(param_3)s
2025-02-23 18:07:47,855 - [cached since 20.57s ago] {'ledger_description_1': 'Revenues', 'param_1': 0, 'ledger_description_2': 'Expenses', 'param_2': 0, 'param_3': 5}
2025-02-23 18:07:47,853 - SELECT year(ledger.general_ledger_date) AS time, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_1)s END) AS total_revenue, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_3)s AND ledger.amount > %(amount_3)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_4)s AND ledger.amount < %(amount_4)s) THEN -ledger.amount ELSE %(param_2)s END) AS total_expenses 
FROM ledger GROUP BY year(ledger.general_ledger_date) ORDER BY year(ledger.general_ledger_date)
2025-02-23 18:07:47,849 - SELECT department.department_name AS department_department_name, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount ELSE %(param_1)s END + CASE WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_2)s END) AS total_expenditure 
FROM ledger INNER JOIN department ON ledger.department_id = department.department_id GROUP BY department.department_name ORDER BY sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount ELSE %(param_1)s END + CASE WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_2)s END) DESC 
 LIMIT %(param_3)s
2025-02-23 18:07:47,857 - [cached since 20.57s ago] {'ledger_description_1': 'Revenues', 'amount_1': 0, 'ledger_description_2': 'Expenses', 'amount_2': 0, 'param_1': 0, 'ledger_description_3': 'Expenses', 'amount_3': 0, 'ledger_description_4': 'Revenues', 'amount_4': 0, 'param_2': 0}
2025-02-23 18:07:47,859 - [cached since 20.56s ago] {'ledger_description_1': 'Expenses', 'amount_1': 0, 'param_1': 0, 'ledger_description_2': 'Revenues', 'amount_2': 0, 'param_2': 0, 'param_3': 10}
2025-02-23 18:07:48,632 - BEGIN (implicit)
2025-02-23 18:07:48,636 - SELECT department.department_id AS department_department_id, department.department_name AS department_department_name 
FROM department
2025-02-23 18:07:48,636 - [cached since 18.89s ago] {}
2025-02-23 18:07:48,650 - SELECT min(ledger.general_ledger_date) AS min_1 
FROM ledger
2025-02-23 18:07:48,651 - [cached since 18.9s ago] {}
2025-02-23 18:07:48,658 - SELECT max(ledger.general_ledger_date) AS max_1 
FROM ledger
2025-02-23 18:07:48,661 - [cached since 18.9s ago] {}
2025-02-23 18:07:48,675 - ROLLBACK
2025-02-23 18:07:48,677 - GET http://127.0.0.1:8000/api/initialise - 0.05 ms
2025-02-23 18:07:48,689 - BEGIN (implicit)
2025-02-23 18:07:48,689 - SELECT department.department_id AS department_department_id, department.department_name AS department_department_name 
FROM department
2025-02-23 18:07:48,689 - [cached since 18.95s ago] {}
2025-02-23 18:07:48,699 - SELECT min(ledger.general_ledger_date) AS min_1 
FROM ledger
2025-02-23 18:07:48,699 - [cached since 18.95s ago] {}
2025-02-23 18:07:48,703 - SELECT max(ledger.general_ledger_date) AS max_1 
FROM ledger
2025-02-23 18:07:48,703 - [cached since 18.95s ago] {}
2025-02-23 18:07:48,714 - ROLLBACK
2025-02-23 18:07:48,720 - GET http://127.0.0.1:8000/api/initialise - 0.04 ms
2025-02-23 18:07:50,786 - ROLLBACK
2025-02-23 18:07:50,786 - GET http://127.0.0.1:8000/api/revenue-expenses/ - 2.96 ms
2025-02-23 18:07:50,798 - BEGIN (implicit)
2025-02-23 18:07:50,799 - SELECT year(ledger.general_ledger_date) AS time, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_1)s END) AS total_revenue, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_3)s AND ledger.amount > %(amount_3)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_4)s AND ledger.amount < %(amount_4)s) THEN -ledger.amount ELSE %(param_2)s END) AS total_expenses 
FROM ledger GROUP BY year(ledger.general_ledger_date) ORDER BY year(ledger.general_ledger_date)
2025-02-23 18:07:50,799 - [cached since 23.52s ago] {'ledger_description_1': 'Revenues', 'amount_1': 0, 'ledger_description_2': 'Expenses', 'amount_2': 0, 'param_1': 0, 'ledger_description_3': 'Expenses', 'amount_3': 0, 'ledger_description_4': 'Revenues', 'amount_4': 0, 'param_2': 0}
2025-02-23 18:07:51,859 - ROLLBACK
2025-02-23 18:07:51,864 - GET http://127.0.0.1:8000/api/top-roi/ - 4.04 ms
2025-02-23 18:07:51,870 - BEGIN (implicit)
2025-02-23 18:07:51,872 - SELECT department.department_name AS department_department_name, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s) THEN ledger.amount ELSE %(param_1)s END) - sum(CASE WHEN (ledger.ledger_description = %(ledger_description_2)s) THEN ledger.amount ELSE %(param_2)s END) AS roi 
FROM ledger INNER JOIN department ON ledger.department_id = department.department_id GROUP BY department.department_name ORDER BY sum(ledger.amount) DESC 
 LIMIT %(param_3)s
2025-02-23 18:07:51,874 - [cached since 24.58s ago] {'ledger_description_1': 'Revenues', 'param_1': 0, 'ledger_description_2': 'Expenses', 'param_2': 0, 'param_3': 5}
2025-02-23 18:07:51,999 - ROLLBACK
2025-02-23 18:07:52,002 - GET http://127.0.0.1:8000/api/top-budget/ - 4.17 ms
2025-02-23 18:07:52,009 - BEGIN (implicit)
2025-02-23 18:07:52,011 - SELECT department.department_name AS department_department_name, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount ELSE %(param_1)s END + CASE WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_2)s END) AS total_expenditure 
FROM ledger INNER JOIN department ON ledger.department_id = department.department_id GROUP BY department.department_name ORDER BY sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount ELSE %(param_1)s END + CASE WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_2)s END) DESC 
 LIMIT %(param_3)s
2025-02-23 18:07:52,011 - [cached since 24.72s ago] {'ledger_description_1': 'Expenses', 'amount_1': 0, 'param_1': 0, 'ledger_description_2': 'Revenues', 'amount_2': 0, 'param_2': 0, 'param_3': 10}
2025-02-23 18:07:53,018 - ROLLBACK
2025-02-23 18:07:53,022 - GET http://127.0.0.1:8000/api/revenue-expenses/ - 2.23 ms
2025-02-23 18:07:55,699 - ROLLBACK
2025-02-23 18:07:55,699 - GET http://127.0.0.1:8000/api/top-roi/ - 3.83 ms
2025-02-23 18:07:55,950 - ROLLBACK
2025-02-23 18:07:55,954 - GET http://127.0.0.1:8000/api/top-budget/ - 3.95 ms
2025-02-23 18:08:05,970 - BEGIN (implicit)
2025-02-23 18:08:05,972 - BEGIN (implicit)
2025-02-23 18:08:05,974 - BEGIN (implicit)
2025-02-23 18:08:05,979 - SELECT year(ledger.general_ledger_date) AS time, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_1)s END) AS total_revenue, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_3)s AND ledger.amount > %(amount_3)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_4)s AND ledger.amount < %(amount_4)s) THEN -ledger.amount ELSE %(param_2)s END) AS total_expenses 
FROM ledger 
WHERE ledger.department_id = %(department_id_1)s GROUP BY year(ledger.general_ledger_date) ORDER BY year(ledger.general_ledger_date)
2025-02-23 18:08:05,985 - SELECT cost_center.cost_center_description AS cost_center_cost_center_description, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s) THEN ledger.amount ELSE %(param_1)s END) - sum(CASE WHEN (ledger.ledger_description = %(ledger_description_2)s) THEN ledger.amount ELSE %(param_2)s END) AS roi 
FROM ledger INNER JOIN cost_center ON ledger.cost_center_id = cost_center.cost_center_id 
WHERE ledger.department_id = %(department_id_1)s GROUP BY cost_center.cost_center_description ORDER BY sum(ledger.amount) DESC 
 LIMIT %(param_3)s
2025-02-23 18:08:05,990 - SELECT cost_center.cost_center_description AS cost_center_cost_center_description, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount ELSE %(param_1)s END + CASE WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_2)s END) AS total_expenditure 
FROM ledger INNER JOIN cost_center ON ledger.cost_center_id = cost_center.cost_center_id 
WHERE ledger.department_id = %(department_id_1)s GROUP BY cost_center.cost_center_description ORDER BY sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount ELSE %(param_1)s END + CASE WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_2)s END) DESC 
 LIMIT %(param_3)s
2025-02-23 18:08:06,000 - [generated in 0.02108s] {'ledger_description_1': 'Revenues', 'amount_1': 0, 'ledger_description_2': 'Expenses', 'amount_2': 0, 'param_1': 0, 'ledger_description_3': 'Expenses', 'amount_3': 0, 'ledger_description_4': 'Revenues', 'amount_4': 0, 'param_2': 0, 'department_id_1': 101}
2025-02-23 18:08:06,000 - [generated in 0.01519s] {'ledger_description_1': 'Revenues', 'param_1': 0, 'ledger_description_2': 'Expenses', 'param_2': 0, 'department_id_1': 101, 'param_3': 5}
2025-02-23 18:08:06,002 - [generated in 0.01295s] {'ledger_description_1': 'Expenses', 'amount_1': 0, 'param_1': 0, 'ledger_description_2': 'Revenues', 'amount_2': 0, 'param_2': 0, 'department_id_1': 101, 'param_3': 10}
2025-02-23 18:08:06,103 - ROLLBACK
2025-02-23 18:08:06,105 - GET http://127.0.0.1:8000/api/revenue-expenses/?department=101 - 0.14 ms
2025-02-23 18:08:06,647 - ROLLBACK
2025-02-23 18:08:06,649 - ROLLBACK
2025-02-23 18:08:06,650 - GET http://127.0.0.1:8000/api/top-roi/?department=101 - 0.69 ms
2025-02-23 18:08:06,653 - GET http://127.0.0.1:8000/api/top-budget/?department=101 - 0.69 ms
2025-02-23 18:09:48,873 - GET http://127.0.0.1:8000/docs - 0.00 ms
2025-02-23 18:09:49,510 - GET http://127.0.0.1:8000/openapi.json - 0.04 ms
2025-02-23 18:09:59,377 - BEGIN (implicit)
2025-02-23 18:09:59,381 - SELECT year(ledger.general_ledger_date) AS time, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_1)s END) - sum(CASE WHEN (ledger.ledger_description = %(ledger_description_3)s AND ledger.amount > %(amount_3)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_4)s AND ledger.amount < %(amount_4)s) THEN -ledger.amount ELSE %(param_2)s END) AS net_profit 
FROM ledger GROUP BY year(ledger.general_ledger_date) ORDER BY year(ledger.general_ledger_date)
2025-02-23 18:09:59,381 - [generated in 0.00113s] {'ledger_description_1': 'Revenues', 'amount_1': 0, 'ledger_description_2': 'Expenses', 'amount_2': 0, 'param_1': 0, 'ledger_description_3': 'Expenses', 'amount_3': 0, 'ledger_description_4': 'Revenues', 'amount_4': 0, 'param_2': 0}
2025-02-23 18:10:01,479 - ROLLBACK
2025-02-23 18:10:01,482 - GET http://127.0.0.1:8000/api/net-profit/ - 2.11 ms
2025-02-23 18:11:43,239 - GET http://127.0.0.1:8000/api/initialise/ - 0.00 ms
2025-02-23 18:11:43,413 - BEGIN (implicit)
2025-02-23 18:11:43,418 - BEGIN (implicit)
2025-02-23 18:11:43,420 - BEGIN (implicit)
2025-02-23 18:11:43,449 - BEGIN (implicit)
2025-02-23 18:11:43,488 - SELECT department.department_name AS department_department_name, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s) THEN ledger.amount ELSE %(param_1)s END) - sum(CASE WHEN (ledger.ledger_description = %(ledger_description_2)s) THEN ledger.amount ELSE %(param_2)s END) AS roi 
FROM ledger INNER JOIN department ON ledger.department_id = department.department_id GROUP BY department.department_name ORDER BY sum(ledger.amount) DESC 
 LIMIT %(param_3)s
2025-02-23 18:11:43,490 - SELECT year(ledger.general_ledger_date) AS time, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_1)s END) AS total_revenue, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_3)s AND ledger.amount > %(amount_3)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_4)s AND ledger.amount < %(amount_4)s) THEN -ledger.amount ELSE %(param_2)s END) AS total_expenses 
FROM ledger GROUP BY year(ledger.general_ledger_date) ORDER BY year(ledger.general_ledger_date)
2025-02-23 18:11:43,492 - SELECT department.department_name AS department_department_name, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount ELSE %(param_1)s END + CASE WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_2)s END) AS total_expenditure 
FROM ledger INNER JOIN department ON ledger.department_id = department.department_id GROUP BY department.department_name ORDER BY sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount ELSE %(param_1)s END + CASE WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_2)s END) DESC 
 LIMIT %(param_3)s
2025-02-23 18:11:43,493 - SELECT department.department_id AS department_department_id, department.department_name AS department_department_name 
FROM department
2025-02-23 18:11:43,494 - [cached since 256.2s ago] {'ledger_description_1': 'Revenues', 'param_1': 0, 'ledger_description_2': 'Expenses', 'param_2': 0, 'param_3': 5}
2025-02-23 18:11:43,495 - [cached since 256.2s ago] {'ledger_description_1': 'Revenues', 'amount_1': 0, 'ledger_description_2': 'Expenses', 'amount_2': 0, 'param_1': 0, 'ledger_description_3': 'Expenses', 'amount_3': 0, 'ledger_description_4': 'Revenues', 'amount_4': 0, 'param_2': 0}
2025-02-23 18:11:43,496 - [cached since 256.2s ago] {'ledger_description_1': 'Expenses', 'amount_1': 0, 'param_1': 0, 'ledger_description_2': 'Revenues', 'amount_2': 0, 'param_2': 0, 'param_3': 10}
2025-02-23 18:11:43,496 - [cached since 253.8s ago] {}
2025-02-23 18:11:43,520 - SELECT min(ledger.general_ledger_date) AS min_1 
FROM ledger
2025-02-23 18:11:43,522 - [cached since 253.8s ago] {}
2025-02-23 18:11:43,530 - SELECT max(ledger.general_ledger_date) AS max_1 
FROM ledger
2025-02-23 18:11:43,531 - [cached since 253.8s ago] {}
2025-02-23 18:11:43,553 - ROLLBACK
2025-02-23 18:11:43,556 - GET http://127.0.0.1:8000/api/initialise - 0.11 ms
2025-02-23 18:11:47,948 - ROLLBACK
2025-02-23 18:11:47,952 - GET http://127.0.0.1:8000/api/revenue-expenses/ - 4.54 ms
2025-02-23 18:11:49,104 - ROLLBACK
2025-02-23 18:11:49,106 - ROLLBACK
2025-02-23 18:11:49,108 - GET http://127.0.0.1:8000/api/top-roi/ - 5.70 ms
2025-02-23 18:11:49,110 - GET http://127.0.0.1:8000/api/top-budget/ - 5.70 ms
2025-02-23 18:14:00,780 - GET http://127.0.0.1:8000/api/initialise/ - 0.00 ms
2025-02-23 18:14:01,021 - BEGIN (implicit)
2025-02-23 18:14:01,024 - SELECT department.department_name AS department_department_name, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s) THEN ledger.amount ELSE %(param_1)s END) - sum(CASE WHEN (ledger.ledger_description = %(ledger_description_2)s) THEN ledger.amount ELSE %(param_2)s END) AS roi 
FROM ledger INNER JOIN department ON ledger.department_id = department.department_id GROUP BY department.department_name ORDER BY sum(ledger.amount) DESC 
 LIMIT %(param_3)s
2025-02-23 18:14:01,025 - [cached since 393.7s ago] {'ledger_description_1': 'Revenues', 'param_1': 0, 'ledger_description_2': 'Expenses', 'param_2': 0, 'param_3': 5}
2025-02-23 18:14:01,042 - BEGIN (implicit)
2025-02-23 18:14:01,047 - SELECT year(ledger.general_ledger_date) AS time, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_1)s END) - sum(CASE WHEN (ledger.ledger_description = %(ledger_description_3)s AND ledger.amount > %(amount_3)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_4)s AND ledger.amount < %(amount_4)s) THEN -ledger.amount ELSE %(param_2)s END) AS net_profit 
FROM ledger GROUP BY year(ledger.general_ledger_date) ORDER BY year(ledger.general_ledger_date)
2025-02-23 18:14:01,051 - BEGIN (implicit)
2025-02-23 18:14:01,057 - GET http://127.0.0.1:8000/api/initialise/ - 0.01 ms
2025-02-23 18:14:01,053 - [cached since 241.7s ago] {'ledger_description_1': 'Revenues', 'amount_1': 0, 'ledger_description_2': 'Expenses', 'amount_2': 0, 'param_1': 0, 'ledger_description_3': 'Expenses', 'amount_3': 0, 'ledger_description_4': 'Revenues', 'amount_4': 0, 'param_2': 0}
2025-02-23 18:14:01,056 - BEGIN (implicit)
2025-02-23 18:14:01,059 - SELECT year(ledger.general_ledger_date) AS time, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_1)s END) AS total_revenue, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_3)s AND ledger.amount > %(amount_3)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_4)s AND ledger.amount < %(amount_4)s) THEN -ledger.amount ELSE %(param_2)s END) AS total_expenses 
FROM ledger GROUP BY year(ledger.general_ledger_date) ORDER BY year(ledger.general_ledger_date)
2025-02-23 18:14:01,063 - SELECT department.department_name AS department_department_name, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount ELSE %(param_1)s END + CASE WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_2)s END) AS total_expenditure 
FROM ledger INNER JOIN department ON ledger.department_id = department.department_id GROUP BY department.department_name ORDER BY sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount ELSE %(param_1)s END + CASE WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_2)s END) DESC 
 LIMIT %(param_3)s
2025-02-23 18:14:01,065 - [cached since 393.8s ago] {'ledger_description_1': 'Revenues', 'amount_1': 0, 'ledger_description_2': 'Expenses', 'amount_2': 0, 'param_1': 0, 'ledger_description_3': 'Expenses', 'amount_3': 0, 'ledger_description_4': 'Revenues', 'amount_4': 0, 'param_2': 0}
2025-02-23 18:14:01,066 - [cached since 393.8s ago] {'ledger_description_1': 'Expenses', 'amount_1': 0, 'param_1': 0, 'ledger_description_2': 'Revenues', 'amount_2': 0, 'param_2': 0, 'param_3': 10}
2025-02-23 18:14:02,743 - BEGIN (implicit)
2025-02-23 18:14:02,747 - SELECT department.department_id AS department_department_id, department.department_name AS department_department_name 
FROM department
2025-02-23 18:14:02,759 - [cached since 393s ago] {}
2025-02-23 18:14:02,790 - SELECT min(ledger.general_ledger_date) AS min_1 
FROM ledger
2025-02-23 18:14:02,792 - [cached since 393s ago] {}
2025-02-23 18:14:02,795 - SELECT max(ledger.general_ledger_date) AS max_1 
FROM ledger
2025-02-23 18:14:02,805 - [cached since 393s ago] {}
2025-02-23 18:14:02,813 - ROLLBACK
2025-02-23 18:14:02,823 - GET http://127.0.0.1:8000/api/initialise - 0.14 ms
2025-02-23 18:14:02,841 - BEGIN (implicit)
2025-02-23 18:14:02,842 - SELECT department.department_id AS department_department_id, department.department_name AS department_department_name 
FROM department
2025-02-23 18:14:02,842 - [cached since 393.1s ago] {}
2025-02-23 18:14:02,859 - SELECT min(ledger.general_ledger_date) AS min_1 
FROM ledger
2025-02-23 18:14:02,860 - [cached since 393.1s ago] {}
2025-02-23 18:14:02,865 - SELECT max(ledger.general_ledger_date) AS max_1 
FROM ledger
2025-02-23 18:14:02,868 - [cached since 393.1s ago] {}
2025-02-23 18:14:02,872 - ROLLBACK
2025-02-23 18:14:02,874 - GET http://127.0.0.1:8000/api/initialise - 0.04 ms
2025-02-23 18:14:04,527 - ROLLBACK
2025-02-23 18:14:04,529 - GET http://127.0.0.1:8000/api/net-profit/ - 3.50 ms
2025-02-23 18:14:04,537 - BEGIN (implicit)
2025-02-23 18:14:04,540 - SELECT year(ledger.general_ledger_date) AS time, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_1)s END) - sum(CASE WHEN (ledger.ledger_description = %(ledger_description_3)s AND ledger.amount > %(amount_3)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_4)s AND ledger.amount < %(amount_4)s) THEN -ledger.amount ELSE %(param_2)s END) AS net_profit 
FROM ledger GROUP BY year(ledger.general_ledger_date) ORDER BY year(ledger.general_ledger_date)
2025-02-23 18:14:04,541 - [cached since 245.2s ago] {'ledger_description_1': 'Revenues', 'amount_1': 0, 'ledger_description_2': 'Expenses', 'amount_2': 0, 'param_1': 0, 'ledger_description_3': 'Expenses', 'amount_3': 0, 'ledger_description_4': 'Revenues', 'amount_4': 0, 'param_2': 0}
2025-02-23 18:14:04,543 - ROLLBACK
2025-02-23 18:14:04,545 - GET http://127.0.0.1:8000/api/revenue-expenses/ - 3.51 ms
2025-02-23 18:14:04,553 - BEGIN (implicit)
2025-02-23 18:14:04,555 - SELECT year(ledger.general_ledger_date) AS time, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_1)s END) AS total_revenue, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_3)s AND ledger.amount > %(amount_3)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_4)s AND ledger.amount < %(amount_4)s) THEN -ledger.amount ELSE %(param_2)s END) AS total_expenses 
FROM ledger GROUP BY year(ledger.general_ledger_date) ORDER BY year(ledger.general_ledger_date)
2025-02-23 18:14:04,556 - [cached since 397.3s ago] {'ledger_description_1': 'Revenues', 'amount_1': 0, 'ledger_description_2': 'Expenses', 'amount_2': 0, 'param_1': 0, 'ledger_description_3': 'Expenses', 'amount_3': 0, 'ledger_description_4': 'Revenues', 'amount_4': 0, 'param_2': 0}
2025-02-23 18:14:05,926 - ROLLBACK
2025-02-23 18:14:05,928 - GET http://127.0.0.1:8000/api/top-roi/ - 4.91 ms
2025-02-23 18:14:05,937 - BEGIN (implicit)
2025-02-23 18:14:05,938 - SELECT department.department_name AS department_department_name, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s) THEN ledger.amount ELSE %(param_1)s END) - sum(CASE WHEN (ledger.ledger_description = %(ledger_description_2)s) THEN ledger.amount ELSE %(param_2)s END) AS roi 
FROM ledger INNER JOIN department ON ledger.department_id = department.department_id GROUP BY department.department_name ORDER BY sum(ledger.amount) DESC 
 LIMIT %(param_3)s
2025-02-23 18:14:05,940 - [cached since 398.7s ago] {'ledger_description_1': 'Revenues', 'param_1': 0, 'ledger_description_2': 'Expenses', 'param_2': 0, 'param_3': 5}
2025-02-23 18:14:05,976 - ROLLBACK
2025-02-23 18:14:05,979 - GET http://127.0.0.1:8000/api/top-budget/ - 4.95 ms
2025-02-23 18:14:05,987 - BEGIN (implicit)
2025-02-23 18:14:05,989 - SELECT department.department_name AS department_department_name, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount ELSE %(param_1)s END + CASE WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_2)s END) AS total_expenditure 
FROM ledger INNER JOIN department ON ledger.department_id = department.department_id GROUP BY department.department_name ORDER BY sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount ELSE %(param_1)s END + CASE WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_2)s END) DESC 
 LIMIT %(param_3)s
2025-02-23 18:14:05,990 - [cached since 398.7s ago] {'ledger_description_1': 'Expenses', 'amount_1': 0, 'param_1': 0, 'ledger_description_2': 'Revenues', 'amount_2': 0, 'param_2': 0, 'param_3': 10}
2025-02-23 18:14:07,005 - ROLLBACK
2025-02-23 18:14:07,007 - GET http://127.0.0.1:8000/api/net-profit/ - 2.48 ms
2025-02-23 18:14:07,012 - ROLLBACK
2025-02-23 18:14:07,016 - GET http://127.0.0.1:8000/api/revenue-expenses/ - 2.47 ms
2025-02-23 18:14:09,821 - ROLLBACK
2025-02-23 18:14:09,823 - GET http://127.0.0.1:8000/api/top-roi/ - 3.89 ms
2025-02-23 18:14:09,850 - ROLLBACK
2025-02-23 18:14:09,853 - GET http://127.0.0.1:8000/api/top-budget/ - 3.87 ms
2025-02-23 18:14:22,227 - BEGIN (implicit)
2025-02-23 18:14:22,235 - BEGIN (implicit)
2025-02-23 18:14:22,240 - SELECT department.department_name AS department_department_name, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s) THEN ledger.amount ELSE %(param_1)s END) - sum(CASE WHEN (ledger.ledger_description = %(ledger_description_2)s) THEN ledger.amount ELSE %(param_2)s END) AS roi 
FROM ledger INNER JOIN department ON ledger.department_id = department.department_id 
WHERE ledger.general_ledger_date BETWEEN %(general_ledger_date_1)s AND %(general_ledger_date_2)s GROUP BY department.department_name ORDER BY sum(ledger.amount) DESC 
 LIMIT %(param_3)s
2025-02-23 18:14:22,247 - SELECT department.department_name AS department_department_name, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount ELSE %(param_1)s END + CASE WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_2)s END) AS total_expenditure 
FROM ledger INNER JOIN department ON ledger.department_id = department.department_id 
WHERE ledger.general_ledger_date BETWEEN %(general_ledger_date_1)s AND %(general_ledger_date_2)s GROUP BY department.department_name ORDER BY sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount ELSE %(param_1)s END + CASE WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_2)s END) DESC 
 LIMIT %(param_3)s
2025-02-23 18:14:22,251 - [generated in 0.01062s] {'ledger_description_1': 'Revenues', 'param_1': 0, 'ledger_description_2': 'Expenses', 'param_2': 0, 'general_ledger_date_1': '2020-12-01', 'general_ledger_date_2': '2020-12-16', 'param_3': 5}
2025-02-23 18:14:22,253 - [generated in 0.00628s] {'ledger_description_1': 'Expenses', 'amount_1': 0, 'param_1': 0, 'ledger_description_2': 'Revenues', 'amount_2': 0, 'param_2': 0, 'general_ledger_date_1': '2020-12-01', 'general_ledger_date_2': '2020-12-16', 'param_3': 10}
2025-02-23 18:14:22,273 - BEGIN (implicit)
2025-02-23 18:14:22,275 - BEGIN (implicit)
2025-02-23 18:14:22,295 - SELECT day(ledger.general_ledger_date) AS time, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_1)s END) - sum(CASE WHEN (ledger.ledger_description = %(ledger_description_3)s AND ledger.amount > %(amount_3)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_4)s AND ledger.amount < %(amount_4)s) THEN -ledger.amount ELSE %(param_2)s END) AS net_profit 
FROM ledger 
WHERE ledger.general_ledger_date BETWEEN %(general_ledger_date_1)s AND %(general_ledger_date_2)s GROUP BY day(ledger.general_ledger_date) ORDER BY day(ledger.general_ledger_date)
2025-02-23 18:14:22,307 - SELECT day(ledger.general_ledger_date) AS time, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_1)s END) AS total_revenue, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_3)s AND ledger.amount > %(amount_3)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_4)s AND ledger.amount < %(amount_4)s) THEN -ledger.amount ELSE %(param_2)s END) AS total_expenses 
FROM ledger 
WHERE ledger.general_ledger_date BETWEEN %(general_ledger_date_1)s AND %(general_ledger_date_2)s GROUP BY day(ledger.general_ledger_date) ORDER BY day(ledger.general_ledger_date)
2025-02-23 18:14:22,310 - [generated in 0.01314s] {'ledger_description_1': 'Revenues', 'amount_1': 0, 'ledger_description_2': 'Expenses', 'amount_2': 0, 'param_1': 0, 'ledger_description_3': 'Expenses', 'amount_3': 0, 'ledger_description_4': 'Revenues', 'amount_4': 0, 'param_2': 0, 'general_ledger_date_1': '2020-12-01', 'general_ledger_date_2': '2020-12-16'}
2025-02-23 18:14:22,311 - [generated in 0.00439s] {'ledger_description_1': 'Revenues', 'amount_1': 0, 'ledger_description_2': 'Expenses', 'amount_2': 0, 'param_1': 0, 'ledger_description_3': 'Expenses', 'amount_3': 0, 'ledger_description_4': 'Revenues', 'amount_4': 0, 'param_2': 0, 'general_ledger_date_1': '2020-12-01', 'general_ledger_date_2': '2020-12-16'}
2025-02-23 18:14:22,356 - ROLLBACK
2025-02-23 18:14:22,397 - ROLLBACK
2025-02-23 18:14:22,452 - GET http://127.0.0.1:8000/api/net-profit/?start_date=2020-12-01&end_date=2020-12-16 - 0.23 ms
2025-02-23 18:14:22,459 - GET http://127.0.0.1:8000/api/revenue-expenses/?start_date=2020-12-01&end_date=2020-12-16 - 0.24 ms
2025-02-23 18:14:22,617 - ROLLBACK
2025-02-23 18:14:22,623 - GET http://127.0.0.1:8000/api/top-roi/?start_date=2020-12-01&end_date=2020-12-16 - 0.41 ms
2025-02-23 18:14:22,625 - ROLLBACK
2025-02-23 18:14:22,629 - GET http://127.0.0.1:8000/api/top-budget/?start_date=2020-12-01&end_date=2020-12-16 - 0.41 ms
2025-02-23 18:14:42,219 - BEGIN (implicit)
2025-02-23 18:14:42,221 - BEGIN (implicit)
2025-02-23 18:14:42,223 - SELECT department.department_name AS department_department_name, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount ELSE %(param_1)s END + CASE WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_2)s END) AS total_expenditure 
FROM ledger INNER JOIN department ON ledger.department_id = department.department_id 
WHERE ledger.general_ledger_date BETWEEN %(general_ledger_date_1)s AND %(general_ledger_date_2)s GROUP BY department.department_name ORDER BY sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount ELSE %(param_1)s END + CASE WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_2)s END) DESC 
 LIMIT %(param_3)s
2025-02-23 18:14:42,224 - SELECT department.department_name AS department_department_name, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s) THEN ledger.amount ELSE %(param_1)s END) - sum(CASE WHEN (ledger.ledger_description = %(ledger_description_2)s) THEN ledger.amount ELSE %(param_2)s END) AS roi 
FROM ledger INNER JOIN department ON ledger.department_id = department.department_id 
WHERE ledger.general_ledger_date BETWEEN %(general_ledger_date_1)s AND %(general_ledger_date_2)s GROUP BY department.department_name ORDER BY sum(ledger.amount) DESC 
 LIMIT %(param_3)s
2025-02-23 18:14:42,232 - [cached since 19.99s ago] {'ledger_description_1': 'Expenses', 'amount_1': 0, 'param_1': 0, 'ledger_description_2': 'Revenues', 'amount_2': 0, 'param_2': 0, 'general_ledger_date_1': '2020-01-01', 'general_ledger_date_2': '2020-07-16', 'param_3': 10}
2025-02-23 18:14:42,233 - [cached since 19.99s ago] {'ledger_description_1': 'Revenues', 'param_1': 0, 'ledger_description_2': 'Expenses', 'param_2': 0, 'general_ledger_date_1': '2020-01-01', 'general_ledger_date_2': '2020-07-16', 'param_3': 5}
2025-02-23 18:14:42,239 - BEGIN (implicit)
2025-02-23 18:14:42,248 - SELECT month(ledger.general_ledger_date) AS time, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_1)s END) AS total_revenue, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_3)s AND ledger.amount > %(amount_3)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_4)s AND ledger.amount < %(amount_4)s) THEN -ledger.amount ELSE %(param_2)s END) AS total_expenses 
FROM ledger 
WHERE ledger.general_ledger_date BETWEEN %(general_ledger_date_1)s AND %(general_ledger_date_2)s GROUP BY month(ledger.general_ledger_date) ORDER BY month(ledger.general_ledger_date)
2025-02-23 18:14:42,252 - [generated in 0.00361s] {'ledger_description_1': 'Revenues', 'amount_1': 0, 'ledger_description_2': 'Expenses', 'amount_2': 0, 'param_1': 0, 'ledger_description_3': 'Expenses', 'amount_3': 0, 'ledger_description_4': 'Revenues', 'amount_4': 0, 'param_2': 0, 'general_ledger_date_1': '2020-01-01', 'general_ledger_date_2': '2020-07-16'}
2025-02-23 18:14:42,254 - BEGIN (implicit)
2025-02-23 18:14:42,263 - SELECT month(ledger.general_ledger_date) AS time, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_1)s END) - sum(CASE WHEN (ledger.ledger_description = %(ledger_description_3)s AND ledger.amount > %(amount_3)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_4)s AND ledger.amount < %(amount_4)s) THEN -ledger.amount ELSE %(param_2)s END) AS net_profit 
FROM ledger 
WHERE ledger.general_ledger_date BETWEEN %(general_ledger_date_1)s AND %(general_ledger_date_2)s GROUP BY month(ledger.general_ledger_date) ORDER BY month(ledger.general_ledger_date)
2025-02-23 18:14:42,266 - [generated in 0.00295s] {'ledger_description_1': 'Revenues', 'amount_1': 0, 'ledger_description_2': 'Expenses', 'amount_2': 0, 'param_1': 0, 'ledger_description_3': 'Expenses', 'amount_3': 0, 'ledger_description_4': 'Revenues', 'amount_4': 0, 'param_2': 0, 'general_ledger_date_1': '2020-01-01', 'general_ledger_date_2': '2020-07-16'}
2025-02-23 18:14:43,098 - ROLLBACK
2025-02-23 18:14:43,099 - ROLLBACK
2025-02-23 18:14:43,102 - GET http://127.0.0.1:8000/api/net-profit/?start_date=2020-01-01&end_date=2020-07-16 - 0.86 ms
2025-02-23 18:14:43,105 - GET http://127.0.0.1:8000/api/revenue-expenses/?start_date=2020-01-01&end_date=2020-07-16 - 0.88 ms
2025-02-23 18:14:45,895 - ROLLBACK
2025-02-23 18:14:45,896 - ROLLBACK
2025-02-23 18:14:45,898 - GET http://127.0.0.1:8000/api/top-roi/?start_date=2020-01-01&end_date=2020-07-16 - 3.69 ms
2025-02-23 18:14:45,901 - GET http://127.0.0.1:8000/api/top-budget/?start_date=2020-01-01&end_date=2020-07-16 - 3.69 ms
2025-02-23 18:22:09,837 - GET http://127.0.0.1:8000/docs - 0.00 ms
2025-02-23 18:22:10,059 - GET http://127.0.0.1:8000/openapi.json - 0.02 ms
2025-02-23 18:22:15,974 - SELECT DATABASE()
2025-02-23 18:22:15,974 - [raw sql] {}
2025-02-23 18:22:15,975 - SELECT @@sql_mode
2025-02-23 18:22:15,976 - [raw sql] {}
2025-02-23 18:22:15,976 - SELECT @@lower_case_table_names
2025-02-23 18:22:15,978 - [raw sql] {}
2025-02-23 18:22:15,979 - BEGIN (implicit)
2025-02-23 18:22:15,995 - SELECT department.department_name AS department_department_name, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s) THEN ledger.amount ELSE %(param_1)s END) - sum(CASE WHEN (ledger.ledger_description = %(ledger_description_2)s) THEN ledger.amount ELSE %(param_2)s END) AS roi 
FROM ledger INNER JOIN department ON ledger.department_id = department.department_id GROUP BY department.department_name ORDER BY sum(ledger.amount) DESC 
 LIMIT %(param_3)s
2025-02-23 18:22:15,995 - [generated in 0.00085s] {'ledger_description_1': 'Revenues', 'param_1': 0, 'ledger_description_2': 'Expenses', 'param_2': 0, 'param_3': 5}
2025-02-23 18:22:17,221 - ROLLBACK
2025-02-23 18:22:17,222 - GET http://127.0.0.1:8000/api/top-roi/ - 1.30 ms
2025-02-23 19:14:46,888 - GET http://127.0.0.1:8000/docs - 0.00 ms
2025-02-23 19:14:47,233 - GET http://127.0.0.1:8000/openapi.json - 0.03 ms
2025-02-23 19:15:37,198 - SELECT DATABASE()
2025-02-23 19:15:37,198 - [raw sql] {}
2025-02-23 19:15:37,200 - SELECT @@sql_mode
2025-02-23 19:15:37,201 - [raw sql] {}
2025-02-23 19:15:37,201 - SELECT @@lower_case_table_names
2025-02-23 19:15:37,202 - [raw sql] {}
2025-02-23 19:15:37,205 - BEGIN (implicit)
2025-02-23 19:15:37,221 - SELECT fund.fund_description AS fund_fund_description, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_1)s END) AS total_revenue, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_3)s AND ledger.amount > %(amount_3)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_4)s AND ledger.amount < %(amount_4)s) THEN -ledger.amount ELSE %(param_2)s END) AS total_expenses, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_1)s END) / nullif(sum(CASE WHEN (ledger.ledger_description = %(ledger_description_3)s AND ledger.amount > %(amount_3)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_4)s AND ledger.amount < %(amount_4)s) THEN -ledger.amount ELSE %(param_2)s END), %(nullif_1)s) AS ratio, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_1)s END) - sum(CASE WHEN (ledger.ledger_description = %(ledger_description_3)s AND ledger.amount > %(amount_3)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_4)s AND ledger.amount < %(amount_4)s) THEN -ledger.amount ELSE %(param_2)s END) AS roi 
FROM ledger INNER JOIN fund ON ledger.fund_id = fund.fund_id GROUP BY fund.fund_description ORDER BY roi DESC
2025-02-23 19:15:37,222 - [generated in 0.00069s] {'ledger_description_1': 'Revenues', 'amount_1': 0, 'ledger_description_2': 'Expenses', 'amount_2': 0, 'param_1': 0, 'ledger_description_3': 'Expenses', 'amount_3': 0, 'ledger_description_4': 'Revenues', 'amount_4': 0, 'param_2': 0, 'nullif_1': 0}
2025-02-23 19:15:46,837 - ROLLBACK
2025-02-23 19:15:46,838 - GET http://127.0.0.1:8000/api/fund-table/ - 9.65 ms
2025-02-23 19:15:52,632 - BEGIN (implicit)
2025-02-23 19:15:52,633 - SELECT fund.fund_description AS fund_fund_description, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_1)s END) AS total_revenue, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_3)s AND ledger.amount > %(amount_3)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_4)s AND ledger.amount < %(amount_4)s) THEN -ledger.amount ELSE %(param_2)s END) AS total_expenses, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_1)s END) / nullif(sum(CASE WHEN (ledger.ledger_description = %(ledger_description_3)s AND ledger.amount > %(amount_3)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_4)s AND ledger.amount < %(amount_4)s) THEN -ledger.amount ELSE %(param_2)s END), %(nullif_1)s) AS ratio, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_1)s END) - sum(CASE WHEN (ledger.ledger_description = %(ledger_description_3)s AND ledger.amount > %(amount_3)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_4)s AND ledger.amount < %(amount_4)s) THEN -ledger.amount ELSE %(param_2)s END) AS roi 
FROM ledger INNER JOIN fund ON ledger.fund_id = fund.fund_id GROUP BY fund.fund_description ORDER BY roi DESC
2025-02-23 19:15:52,633 - [cached since 15.41s ago] {'ledger_description_1': 'Revenues', 'amount_1': 0, 'ledger_description_2': 'Expenses', 'amount_2': 0, 'param_1': 0, 'ledger_description_3': 'Expenses', 'amount_3': 0, 'ledger_description_4': 'Revenues', 'amount_4': 0, 'param_2': 0, 'nullif_1': 0}
2025-02-23 19:16:03,439 - ROLLBACK
2025-02-23 19:16:03,440 - GET http://127.0.0.1:8000/api/fund-table/ - 10.81 ms
2025-02-23 19:18:13,596 - BEGIN (implicit)
2025-02-23 19:18:13,597 - SELECT fund.fund_description AS fund_fund_description, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_1)s END) AS total_revenue, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_3)s AND ledger.amount > %(amount_3)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_4)s AND ledger.amount < %(amount_4)s) THEN -ledger.amount ELSE %(param_2)s END) AS total_expenses, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_1)s END) / nullif(sum(CASE WHEN (ledger.ledger_description = %(ledger_description_3)s AND ledger.amount > %(amount_3)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_4)s AND ledger.amount < %(amount_4)s) THEN -ledger.amount ELSE %(param_2)s END), %(nullif_1)s) AS ratio, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_1)s END) - sum(CASE WHEN (ledger.ledger_description = %(ledger_description_3)s AND ledger.amount > %(amount_3)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_4)s AND ledger.amount < %(amount_4)s) THEN -ledger.amount ELSE %(param_2)s END) AS roi 
FROM ledger INNER JOIN fund ON ledger.fund_id = fund.fund_id GROUP BY fund.fund_description ORDER BY roi DESC
2025-02-23 19:18:13,597 - [cached since 156.4s ago] {'ledger_description_1': 'Revenues', 'amount_1': 0, 'ledger_description_2': 'Expenses', 'amount_2': 0, 'param_1': 0, 'ledger_description_3': 'Expenses', 'amount_3': 0, 'ledger_description_4': 'Revenues', 'amount_4': 0, 'param_2': 0, 'nullif_1': 0}
2025-02-23 19:18:25,015 - ROLLBACK
2025-02-23 19:18:25,016 - GET http://127.0.0.1:8000/api/fund-table/ - 11.42 ms
2025-02-23 19:59:25,363 - GET http://127.0.0.1:8000/api/initialise/ - 0.00 ms
2025-02-23 19:59:25,555 - GET http://127.0.0.1:8000/api/initialise/ - 0.00 ms
2025-02-23 20:00:44,082 - GET http://127.0.0.1:8000/api/initialise/ - 0.00 ms
2025-02-23 20:00:44,213 - GET http://127.0.0.1:8000/api/initialise/ - 0.00 ms
2025-02-23 20:01:44,570 - GET http://127.0.0.1:8000/api/initialise/ - 0.00 ms
2025-02-23 20:01:44,664 - GET http://127.0.0.1:8000/api/initialise/ - 0.01 ms
2025-02-23 20:01:44,698 - SELECT DATABASE()
2025-02-23 20:01:44,698 - [raw sql] {}
2025-02-23 20:01:44,700 - SELECT @@sql_mode
2025-02-23 20:01:44,701 - [raw sql] {}
2025-02-23 20:01:44,702 - SELECT @@lower_case_table_names
2025-02-23 20:01:44,702 - [raw sql] {}
2025-02-23 20:01:44,708 - BEGIN (implicit)
2025-02-23 20:01:44,708 - BEGIN (implicit)
2025-02-23 20:01:44,724 - SELECT department.department_name AS department_department_name, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s) THEN ledger.amount ELSE %(param_1)s END) - sum(CASE WHEN (ledger.ledger_description = %(ledger_description_2)s) THEN ledger.amount ELSE %(param_2)s END) AS roi 
FROM ledger INNER JOIN department ON ledger.department_id = department.department_id GROUP BY department.department_name ORDER BY sum(ledger.amount) DESC 
 LIMIT %(param_3)s
2025-02-23 20:01:44,731 - SELECT fund.fund_description AS fund_fund_description, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_1)s END) AS total_revenue, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_3)s AND ledger.amount > %(amount_3)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_4)s AND ledger.amount < %(amount_4)s) THEN -ledger.amount ELSE %(param_2)s END) AS total_expenses, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_1)s END) / nullif(sum(CASE WHEN (ledger.ledger_description = %(ledger_description_3)s AND ledger.amount > %(amount_3)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_4)s AND ledger.amount < %(amount_4)s) THEN -ledger.amount ELSE %(param_2)s END), %(nullif_1)s) AS ratio, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_1)s END) - sum(CASE WHEN (ledger.ledger_description = %(ledger_description_3)s AND ledger.amount > %(amount_3)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_4)s AND ledger.amount < %(amount_4)s) THEN -ledger.amount ELSE %(param_2)s END) AS roi 
FROM ledger INNER JOIN fund ON ledger.fund_id = fund.fund_id GROUP BY fund.fund_description ORDER BY roi DESC
2025-02-23 20:01:44,731 - BEGIN (implicit)
2025-02-23 20:01:44,731 - [generated in 0.00866s] {'ledger_description_1': 'Revenues', 'param_1': 0, 'ledger_description_2': 'Expenses', 'param_2': 0, 'param_3': 5}
2025-02-23 20:01:44,731 - BEGIN (implicit)
2025-02-23 20:01:44,731 - [generated in 0.00158s] {'ledger_description_1': 'Revenues', 'amount_1': 0, 'ledger_description_2': 'Expenses', 'amount_2': 0, 'param_1': 0, 'ledger_description_3': 'Expenses', 'amount_3': 0, 'ledger_description_4': 'Revenues', 'amount_4': 0, 'param_2': 0, 'nullif_1': 0}
2025-02-23 20:01:44,731 - BEGIN (implicit)
2025-02-23 20:01:44,735 - SELECT year(ledger.general_ledger_date) AS time, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_1)s END) - sum(CASE WHEN (ledger.ledger_description = %(ledger_description_3)s AND ledger.amount > %(amount_3)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_4)s AND ledger.amount < %(amount_4)s) THEN -ledger.amount ELSE %(param_2)s END) AS net_profit 
FROM ledger GROUP BY year(ledger.general_ledger_date) ORDER BY year(ledger.general_ledger_date)
2025-02-23 20:01:44,743 - SELECT department.department_name AS department_department_name, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount ELSE %(param_1)s END + CASE WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_2)s END) AS total_expenditure 
FROM ledger INNER JOIN department ON ledger.department_id = department.department_id GROUP BY department.department_name ORDER BY sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount ELSE %(param_1)s END + CASE WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_2)s END) DESC 
 LIMIT %(param_3)s
2025-02-23 20:01:44,747 - SELECT year(ledger.general_ledger_date) AS time, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_1)s END) AS total_revenue, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_3)s AND ledger.amount > %(amount_3)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_4)s AND ledger.amount < %(amount_4)s) THEN -ledger.amount ELSE %(param_2)s END) AS total_expenses 
FROM ledger GROUP BY year(ledger.general_ledger_date) ORDER BY year(ledger.general_ledger_date)
2025-02-23 20:01:44,748 - [generated in 0.01215s] {'ledger_description_1': 'Revenues', 'amount_1': 0, 'ledger_description_2': 'Expenses', 'amount_2': 0, 'param_1': 0, 'ledger_description_3': 'Expenses', 'amount_3': 0, 'ledger_description_4': 'Revenues', 'amount_4': 0, 'param_2': 0}
2025-02-23 20:01:44,749 - [generated in 0.00550s] {'ledger_description_1': 'Expenses', 'amount_1': 0, 'param_1': 0, 'ledger_description_2': 'Revenues', 'amount_2': 0, 'param_2': 0, 'param_3': 10}
2025-02-23 20:01:44,749 - [generated in 0.00215s] {'ledger_description_1': 'Revenues', 'amount_1': 0, 'ledger_description_2': 'Expenses', 'amount_2': 0, 'param_1': 0, 'ledger_description_3': 'Expenses', 'amount_3': 0, 'ledger_description_4': 'Revenues', 'amount_4': 0, 'param_2': 0}
2025-02-23 20:01:45,382 - BEGIN (implicit)
2025-02-23 20:01:45,383 - SELECT department.department_id AS department_department_id, department.department_name AS department_department_name 
FROM department
2025-02-23 20:01:45,384 - [generated in 0.00091s] {}
2025-02-23 20:01:45,390 - SELECT min(ledger.general_ledger_date) AS min_1 
FROM ledger
2025-02-23 20:01:45,392 - [generated in 0.00131s] {}
2025-02-23 20:01:45,396 - SELECT max(ledger.general_ledger_date) AS max_1 
FROM ledger
2025-02-23 20:01:45,397 - [generated in 0.00076s] {}
2025-02-23 20:01:45,400 - ROLLBACK
2025-02-23 20:01:45,401 - GET http://127.0.0.1:8000/api/initialise - 0.03 ms
2025-02-23 20:01:45,421 - BEGIN (implicit)
2025-02-23 20:01:45,423 - SELECT department.department_id AS department_department_id, department.department_name AS department_department_name 
FROM department
2025-02-23 20:01:45,424 - [cached since 0.0408s ago] {}
2025-02-23 20:01:45,430 - SELECT min(ledger.general_ledger_date) AS min_1 
FROM ledger
2025-02-23 20:01:45,432 - [cached since 0.04192s ago] {}
2025-02-23 20:01:45,435 - SELECT max(ledger.general_ledger_date) AS max_1 
FROM ledger
2025-02-23 20:01:45,436 - [cached since 0.04019s ago] {}
2025-02-23 20:01:45,440 - ROLLBACK
2025-02-23 20:01:45,445 - GET http://127.0.0.1:8000/api/initialise - 0.03 ms
2025-02-23 20:01:46,964 - ROLLBACK
2025-02-23 20:01:46,964 - ROLLBACK
2025-02-23 20:01:46,964 - GET http://127.0.0.1:8000/api/revenue-expenses/ - 2.32 ms
2025-02-23 20:01:46,967 - GET http://127.0.0.1:8000/api/net-profit/ - 2.32 ms
2025-02-23 20:01:46,974 - BEGIN (implicit)
2025-02-23 20:01:46,975 - SELECT year(ledger.general_ledger_date) AS time, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_1)s END) AS total_revenue, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_3)s AND ledger.amount > %(amount_3)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_4)s AND ledger.amount < %(amount_4)s) THEN -ledger.amount ELSE %(param_2)s END) AS total_expenses 
FROM ledger GROUP BY year(ledger.general_ledger_date) ORDER BY year(ledger.general_ledger_date)
2025-02-23 20:01:46,977 - BEGIN (implicit)
2025-02-23 20:01:46,977 - [cached since 2.231s ago] {'ledger_description_1': 'Revenues', 'amount_1': 0, 'ledger_description_2': 'Expenses', 'amount_2': 0, 'param_1': 0, 'ledger_description_3': 'Expenses', 'amount_3': 0, 'ledger_description_4': 'Revenues', 'amount_4': 0, 'param_2': 0}
2025-02-23 20:01:46,978 - SELECT year(ledger.general_ledger_date) AS time, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_1)s END) - sum(CASE WHEN (ledger.ledger_description = %(ledger_description_3)s AND ledger.amount > %(amount_3)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_4)s AND ledger.amount < %(amount_4)s) THEN -ledger.amount ELSE %(param_2)s END) AS net_profit 
FROM ledger GROUP BY year(ledger.general_ledger_date) ORDER BY year(ledger.general_ledger_date)
2025-02-23 20:01:46,979 - [cached since 2.244s ago] {'ledger_description_1': 'Revenues', 'amount_1': 0, 'ledger_description_2': 'Expenses', 'amount_2': 0, 'param_1': 0, 'ledger_description_3': 'Expenses', 'amount_3': 0, 'ledger_description_4': 'Revenues', 'amount_4': 0, 'param_2': 0}
2025-02-23 20:01:48,235 - ROLLBACK
2025-02-23 20:01:48,236 - GET http://127.0.0.1:8000/api/top-roi/ - 3.60 ms
2025-02-23 20:01:48,241 - BEGIN (implicit)
2025-02-23 20:01:48,244 - SELECT department.department_name AS department_department_name, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s) THEN ledger.amount ELSE %(param_1)s END) - sum(CASE WHEN (ledger.ledger_description = %(ledger_description_2)s) THEN ledger.amount ELSE %(param_2)s END) AS roi 
FROM ledger INNER JOIN department ON ledger.department_id = department.department_id GROUP BY department.department_name ORDER BY sum(ledger.amount) DESC 
 LIMIT %(param_3)s
2025-02-23 20:01:48,244 - [cached since 3.521s ago] {'ledger_description_1': 'Revenues', 'param_1': 0, 'ledger_description_2': 'Expenses', 'param_2': 0, 'param_3': 5}
2025-02-23 20:01:48,361 - ROLLBACK
2025-02-23 20:01:48,363 - GET http://127.0.0.1:8000/api/top-budget/ - 3.72 ms
2025-02-23 20:01:48,369 - BEGIN (implicit)
2025-02-23 20:01:48,370 - SELECT department.department_name AS department_department_name, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount ELSE %(param_1)s END + CASE WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_2)s END) AS total_expenditure 
FROM ledger INNER JOIN department ON ledger.department_id = department.department_id GROUP BY department.department_name ORDER BY sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount ELSE %(param_1)s END + CASE WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_2)s END) DESC 
 LIMIT %(param_3)s
2025-02-23 20:01:48,371 - [cached since 3.629s ago] {'ledger_description_1': 'Expenses', 'amount_1': 0, 'param_1': 0, 'ledger_description_2': 'Revenues', 'amount_2': 0, 'param_2': 0, 'param_3': 10}
2025-02-23 20:01:48,753 - ROLLBACK
2025-02-23 20:01:48,755 - GET http://127.0.0.1:8000/api/revenue-expenses/ - 1.79 ms
2025-02-23 20:01:48,761 - ROLLBACK
2025-02-23 20:01:48,764 - GET http://127.0.0.1:8000/api/net-profit/ - 1.79 ms
2025-02-23 20:01:51,004 - ROLLBACK
2025-02-23 20:01:51,005 - GET http://127.0.0.1:8000/api/top-roi/ - 2.77 ms
2025-02-23 20:01:51,062 - ROLLBACK
2025-02-23 20:01:51,064 - GET http://127.0.0.1:8000/api/top-budget/ - 2.70 ms
2025-02-23 20:01:58,495 - ROLLBACK
2025-02-23 20:01:58,497 - GET http://127.0.0.1:8000/api/fund-table/ - 13.85 ms
2025-02-23 20:01:58,504 - BEGIN (implicit)
2025-02-23 20:01:58,505 - SELECT fund.fund_description AS fund_fund_description, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_1)s END) AS total_revenue, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_3)s AND ledger.amount > %(amount_3)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_4)s AND ledger.amount < %(amount_4)s) THEN -ledger.amount ELSE %(param_2)s END) AS total_expenses, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_1)s END) / nullif(sum(CASE WHEN (ledger.ledger_description = %(ledger_description_3)s AND ledger.amount > %(amount_3)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_4)s AND ledger.amount < %(amount_4)s) THEN -ledger.amount ELSE %(param_2)s END), %(nullif_1)s) AS ratio, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_1)s END) - sum(CASE WHEN (ledger.ledger_description = %(ledger_description_3)s AND ledger.amount > %(amount_3)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_4)s AND ledger.amount < %(amount_4)s) THEN -ledger.amount ELSE %(param_2)s END) AS roi 
FROM ledger INNER JOIN fund ON ledger.fund_id = fund.fund_id GROUP BY fund.fund_description ORDER BY roi DESC
2025-02-23 20:01:58,505 - [cached since 13.77s ago] {'ledger_description_1': 'Revenues', 'amount_1': 0, 'ledger_description_2': 'Expenses', 'amount_2': 0, 'param_1': 0, 'ledger_description_3': 'Expenses', 'amount_3': 0, 'ledger_description_4': 'Revenues', 'amount_4': 0, 'param_2': 0, 'nullif_1': 0}
2025-02-23 20:02:22,538 - ROLLBACK
2025-02-23 20:02:22,540 - GET http://127.0.0.1:8000/api/fund-table/ - 24.04 ms
2025-02-23 20:03:42,834 - GET http://127.0.0.1:8000/api/initialise/ - 0.00 ms
2025-02-23 20:03:42,994 - BEGIN (implicit)
2025-02-23 20:03:42,996 - SELECT department.department_name AS department_department_name, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s) THEN ledger.amount ELSE %(param_1)s END) - sum(CASE WHEN (ledger.ledger_description = %(ledger_description_2)s) THEN ledger.amount ELSE %(param_2)s END) AS roi 
FROM ledger INNER JOIN department ON ledger.department_id = department.department_id GROUP BY department.department_name ORDER BY sum(ledger.amount) DESC 
 LIMIT %(param_3)s
2025-02-23 20:03:42,998 - BEGIN (implicit)
2025-02-23 20:03:42,998 - [cached since 118.3s ago] {'ledger_description_1': 'Revenues', 'param_1': 0, 'ledger_description_2': 'Expenses', 'param_2': 0, 'param_3': 5}
2025-02-23 20:03:43,001 - SELECT department.department_name AS department_department_name, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount ELSE %(param_1)s END + CASE WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_2)s END) AS total_expenditure 
FROM ledger INNER JOIN department ON ledger.department_id = department.department_id GROUP BY department.department_name ORDER BY sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount ELSE %(param_1)s END + CASE WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_2)s END) DESC 
 LIMIT %(param_3)s
2025-02-23 20:03:43,011 - GET http://127.0.0.1:8000/api/initialise/ - 0.00 ms
2025-02-23 20:03:43,006 - BEGIN (implicit)
2025-02-23 20:03:43,009 - BEGIN (implicit)
2025-02-23 20:03:43,010 - [cached since 118.3s ago] {'ledger_description_1': 'Expenses', 'amount_1': 0, 'param_1': 0, 'ledger_description_2': 'Revenues', 'amount_2': 0, 'param_2': 0, 'param_3': 10}
2025-02-23 20:03:43,013 - SELECT year(ledger.general_ledger_date) AS time, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_1)s END) - sum(CASE WHEN (ledger.ledger_description = %(ledger_description_3)s AND ledger.amount > %(amount_3)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_4)s AND ledger.amount < %(amount_4)s) THEN -ledger.amount ELSE %(param_2)s END) AS net_profit 
FROM ledger GROUP BY year(ledger.general_ledger_date) ORDER BY year(ledger.general_ledger_date)
2025-02-23 20:03:43,014 - SELECT year(ledger.general_ledger_date) AS time, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_1)s END) AS total_revenue, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_3)s AND ledger.amount > %(amount_3)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_4)s AND ledger.amount < %(amount_4)s) THEN -ledger.amount ELSE %(param_2)s END) AS total_expenses 
FROM ledger GROUP BY year(ledger.general_ledger_date) ORDER BY year(ledger.general_ledger_date)
2025-02-23 20:03:43,020 - [cached since 118.3s ago] {'ledger_description_1': 'Revenues', 'amount_1': 0, 'ledger_description_2': 'Expenses', 'amount_2': 0, 'param_1': 0, 'ledger_description_3': 'Expenses', 'amount_3': 0, 'ledger_description_4': 'Revenues', 'amount_4': 0, 'param_2': 0}
2025-02-23 20:03:43,020 - [cached since 118.3s ago] {'ledger_description_1': 'Revenues', 'amount_1': 0, 'ledger_description_2': 'Expenses', 'amount_2': 0, 'param_1': 0, 'ledger_description_3': 'Expenses', 'amount_3': 0, 'ledger_description_4': 'Revenues', 'amount_4': 0, 'param_2': 0}
2025-02-23 20:03:44,199 - BEGIN (implicit)
2025-02-23 20:03:44,199 - SELECT department.department_id AS department_department_id, department.department_name AS department_department_name 
FROM department
2025-02-23 20:03:44,199 - [cached since 118.8s ago] {}
2025-02-23 20:03:44,203 - SELECT min(ledger.general_ledger_date) AS min_1 
FROM ledger
2025-02-23 20:03:44,204 - [cached since 118.8s ago] {}
2025-02-23 20:03:44,209 - SELECT max(ledger.general_ledger_date) AS max_1 
FROM ledger
2025-02-23 20:03:44,210 - [cached since 118.8s ago] {}
2025-02-23 20:03:44,222 - ROLLBACK
2025-02-23 20:03:44,224 - GET http://127.0.0.1:8000/api/initialise - 0.03 ms
2025-02-23 20:03:44,232 - BEGIN (implicit)
2025-02-23 20:03:44,233 - SELECT department.department_id AS department_department_id, department.department_name AS department_department_name 
FROM department
2025-02-23 20:03:44,234 - [cached since 118.9s ago] {}
2025-02-23 20:03:44,236 - SELECT min(ledger.general_ledger_date) AS min_1 
FROM ledger
2025-02-23 20:03:44,237 - [cached since 118.8s ago] {}
2025-02-23 20:03:44,239 - SELECT max(ledger.general_ledger_date) AS max_1 
FROM ledger
2025-02-23 20:03:44,239 - [cached since 118.8s ago] {}
2025-02-23 20:03:44,246 - ROLLBACK
2025-02-23 20:03:44,248 - GET http://127.0.0.1:8000/api/initialise - 0.02 ms
2025-02-23 20:03:45,648 - ROLLBACK
2025-02-23 20:03:45,652 - GET http://127.0.0.1:8000/api/revenue-expenses/ - 2.66 ms
2025-02-23 20:03:45,664 - BEGIN (implicit)
2025-02-23 20:03:45,666 - SELECT year(ledger.general_ledger_date) AS time, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_1)s END) AS total_revenue, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_3)s AND ledger.amount > %(amount_3)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_4)s AND ledger.amount < %(amount_4)s) THEN -ledger.amount ELSE %(param_2)s END) AS total_expenses 
FROM ledger GROUP BY year(ledger.general_ledger_date) ORDER BY year(ledger.general_ledger_date)
2025-02-23 20:03:45,666 - [cached since 120.9s ago] {'ledger_description_1': 'Revenues', 'amount_1': 0, 'ledger_description_2': 'Expenses', 'amount_2': 0, 'param_1': 0, 'ledger_description_3': 'Expenses', 'amount_3': 0, 'ledger_description_4': 'Revenues', 'amount_4': 0, 'param_2': 0}
2025-02-23 20:03:45,670 - ROLLBACK
2025-02-23 20:03:45,674 - GET http://127.0.0.1:8000/api/net-profit/ - 2.68 ms
2025-02-23 20:03:45,684 - BEGIN (implicit)
2025-02-23 20:03:45,684 - SELECT year(ledger.general_ledger_date) AS time, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_1)s END) - sum(CASE WHEN (ledger.ledger_description = %(ledger_description_3)s AND ledger.amount > %(amount_3)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_4)s AND ledger.amount < %(amount_4)s) THEN -ledger.amount ELSE %(param_2)s END) AS net_profit 
FROM ledger GROUP BY year(ledger.general_ledger_date) ORDER BY year(ledger.general_ledger_date)
2025-02-23 20:03:45,685 - [cached since 120.9s ago] {'ledger_description_1': 'Revenues', 'amount_1': 0, 'ledger_description_2': 'Expenses', 'amount_2': 0, 'param_1': 0, 'ledger_description_3': 'Expenses', 'amount_3': 0, 'ledger_description_4': 'Revenues', 'amount_4': 0, 'param_2': 0}
2025-02-23 20:03:46,695 - ROLLBACK
2025-02-23 20:03:46,697 - GET http://127.0.0.1:8000/api/top-roi/ - 3.71 ms
2025-02-23 20:03:46,703 - BEGIN (implicit)
2025-02-23 20:03:46,704 - SELECT department.department_name AS department_department_name, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s) THEN ledger.amount ELSE %(param_1)s END) - sum(CASE WHEN (ledger.ledger_description = %(ledger_description_2)s) THEN ledger.amount ELSE %(param_2)s END) AS roi 
FROM ledger INNER JOIN department ON ledger.department_id = department.department_id GROUP BY department.department_name ORDER BY sum(ledger.amount) DESC 
 LIMIT %(param_3)s
2025-02-23 20:03:46,704 - [cached since 122s ago] {'ledger_description_1': 'Revenues', 'param_1': 0, 'ledger_description_2': 'Expenses', 'param_2': 0, 'param_3': 5}
2025-02-23 20:03:46,828 - ROLLBACK
2025-02-23 20:03:46,830 - GET http://127.0.0.1:8000/api/top-budget/ - 3.84 ms
2025-02-23 20:03:46,836 - BEGIN (implicit)
2025-02-23 20:03:46,838 - SELECT department.department_name AS department_department_name, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount ELSE %(param_1)s END + CASE WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_2)s END) AS total_expenditure 
FROM ledger INNER JOIN department ON ledger.department_id = department.department_id GROUP BY department.department_name ORDER BY sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount ELSE %(param_1)s END + CASE WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_2)s END) DESC 
 LIMIT %(param_3)s
2025-02-23 20:03:46,839 - [cached since 122.1s ago] {'ledger_description_1': 'Expenses', 'amount_1': 0, 'param_1': 0, 'ledger_description_2': 'Revenues', 'amount_2': 0, 'param_2': 0, 'param_3': 10}
2025-02-23 20:03:47,512 - ROLLBACK
2025-02-23 20:03:47,514 - ROLLBACK
2025-02-23 20:03:47,516 - GET http://127.0.0.1:8000/api/net-profit/ - 1.84 ms
2025-02-23 20:03:47,518 - GET http://127.0.0.1:8000/api/revenue-expenses/ - 1.86 ms
2025-02-23 20:03:49,572 - ROLLBACK
2025-02-23 20:03:49,574 - GET http://127.0.0.1:8000/api/top-roi/ - 2.87 ms
2025-02-23 20:03:49,681 - ROLLBACK
2025-02-23 20:03:49,683 - GET http://127.0.0.1:8000/api/top-budget/ - 2.85 ms
2025-02-23 20:03:51,544 - GET http://127.0.0.1:8000/api/initialise/ - 0.00 ms
2025-02-23 20:03:51,696 - BEGIN (implicit)
2025-02-23 20:03:51,699 - BEGIN (implicit)
2025-02-23 20:03:51,706 - GET http://127.0.0.1:8000/api/initialise/ - 0.00 ms
2025-02-23 20:03:51,700 - BEGIN (implicit)
2025-02-23 20:03:51,702 - BEGIN (implicit)
2025-02-23 20:03:51,705 - SELECT department.department_name AS department_department_name, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s) THEN ledger.amount ELSE %(param_1)s END) - sum(CASE WHEN (ledger.ledger_description = %(ledger_description_2)s) THEN ledger.amount ELSE %(param_2)s END) AS roi 
FROM ledger INNER JOIN department ON ledger.department_id = department.department_id GROUP BY department.department_name ORDER BY sum(ledger.amount) DESC 
 LIMIT %(param_3)s
2025-02-23 20:03:51,708 - SELECT department.department_name AS department_department_name, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount ELSE %(param_1)s END + CASE WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_2)s END) AS total_expenditure 
FROM ledger INNER JOIN department ON ledger.department_id = department.department_id GROUP BY department.department_name ORDER BY sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount ELSE %(param_1)s END + CASE WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_2)s END) DESC 
 LIMIT %(param_3)s
2025-02-23 20:03:51,710 - SELECT year(ledger.general_ledger_date) AS time, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_1)s END) AS total_revenue, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_3)s AND ledger.amount > %(amount_3)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_4)s AND ledger.amount < %(amount_4)s) THEN -ledger.amount ELSE %(param_2)s END) AS total_expenses 
FROM ledger GROUP BY year(ledger.general_ledger_date) ORDER BY year(ledger.general_ledger_date)
2025-02-23 20:03:51,713 - SELECT year(ledger.general_ledger_date) AS time, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_1)s END) - sum(CASE WHEN (ledger.ledger_description = %(ledger_description_3)s AND ledger.amount > %(amount_3)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_4)s AND ledger.amount < %(amount_4)s) THEN -ledger.amount ELSE %(param_2)s END) AS net_profit 
FROM ledger GROUP BY year(ledger.general_ledger_date) ORDER BY year(ledger.general_ledger_date)
2025-02-23 20:03:51,714 - [cached since 127s ago] {'ledger_description_1': 'Revenues', 'param_1': 0, 'ledger_description_2': 'Expenses', 'param_2': 0, 'param_3': 5}
2025-02-23 20:03:51,714 - [cached since 127s ago] {'ledger_description_1': 'Expenses', 'amount_1': 0, 'param_1': 0, 'ledger_description_2': 'Revenues', 'amount_2': 0, 'param_2': 0, 'param_3': 10}
2025-02-23 20:03:51,714 - [cached since 127s ago] {'ledger_description_1': 'Revenues', 'amount_1': 0, 'ledger_description_2': 'Expenses', 'amount_2': 0, 'param_1': 0, 'ledger_description_3': 'Expenses', 'amount_3': 0, 'ledger_description_4': 'Revenues', 'amount_4': 0, 'param_2': 0}
2025-02-23 20:03:51,717 - [cached since 127s ago] {'ledger_description_1': 'Revenues', 'amount_1': 0, 'ledger_description_2': 'Expenses', 'amount_2': 0, 'param_1': 0, 'ledger_description_3': 'Expenses', 'amount_3': 0, 'ledger_description_4': 'Revenues', 'amount_4': 0, 'param_2': 0}
2025-02-23 20:03:52,428 - BEGIN (implicit)
2025-02-23 20:03:52,429 - SELECT department.department_id AS department_department_id, department.department_name AS department_department_name 
FROM department
2025-02-23 20:03:52,430 - [cached since 127s ago] {}
2025-02-23 20:03:52,433 - SELECT min(ledger.general_ledger_date) AS min_1 
FROM ledger
2025-02-23 20:03:52,434 - [cached since 127s ago] {}
2025-02-23 20:03:52,436 - SELECT max(ledger.general_ledger_date) AS max_1 
FROM ledger
2025-02-23 20:03:52,437 - [cached since 127s ago] {}
2025-02-23 20:03:52,441 - ROLLBACK
2025-02-23 20:03:52,444 - GET http://127.0.0.1:8000/api/initialise - 0.02 ms
2025-02-23 20:03:52,459 - BEGIN (implicit)
2025-02-23 20:03:52,460 - SELECT department.department_id AS department_department_id, department.department_name AS department_department_name 
FROM department
2025-02-23 20:03:52,461 - [cached since 127.1s ago] {}
2025-02-23 20:03:52,464 - SELECT min(ledger.general_ledger_date) AS min_1 
FROM ledger
2025-02-23 20:03:52,465 - [cached since 127.1s ago] {}
2025-02-23 20:03:52,494 - SELECT max(ledger.general_ledger_date) AS max_1 
FROM ledger
2025-02-23 20:03:52,495 - [cached since 127.1s ago] {}
2025-02-23 20:03:52,498 - ROLLBACK
2025-02-23 20:03:52,500 - GET http://127.0.0.1:8000/api/initialise - 0.04 ms
2025-02-23 20:03:54,191 - ROLLBACK
2025-02-23 20:03:54,194 - GET http://127.0.0.1:8000/api/net-profit/ - 2.51 ms
2025-02-23 20:03:54,195 - ROLLBACK
2025-02-23 20:03:54,199 - GET http://127.0.0.1:8000/api/revenue-expenses/ - 2.52 ms
2025-02-23 20:03:54,207 - BEGIN (implicit)
2025-02-23 20:03:54,208 - SELECT year(ledger.general_ledger_date) AS time, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_1)s END) - sum(CASE WHEN (ledger.ledger_description = %(ledger_description_3)s AND ledger.amount > %(amount_3)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_4)s AND ledger.amount < %(amount_4)s) THEN -ledger.amount ELSE %(param_2)s END) AS net_profit 
FROM ledger GROUP BY year(ledger.general_ledger_date) ORDER BY year(ledger.general_ledger_date)
2025-02-23 20:03:54,209 - BEGIN (implicit)
2025-02-23 20:03:54,210 - [cached since 129.5s ago] {'ledger_description_1': 'Revenues', 'amount_1': 0, 'ledger_description_2': 'Expenses', 'amount_2': 0, 'param_1': 0, 'ledger_description_3': 'Expenses', 'amount_3': 0, 'ledger_description_4': 'Revenues', 'amount_4': 0, 'param_2': 0}
2025-02-23 20:03:54,210 - SELECT year(ledger.general_ledger_date) AS time, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_1)s END) AS total_revenue, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_3)s AND ledger.amount > %(amount_3)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_4)s AND ledger.amount < %(amount_4)s) THEN -ledger.amount ELSE %(param_2)s END) AS total_expenses 
FROM ledger GROUP BY year(ledger.general_ledger_date) ORDER BY year(ledger.general_ledger_date)
2025-02-23 20:03:54,212 - [cached since 129.5s ago] {'ledger_description_1': 'Revenues', 'amount_1': 0, 'ledger_description_2': 'Expenses', 'amount_2': 0, 'param_1': 0, 'ledger_description_3': 'Expenses', 'amount_3': 0, 'ledger_description_4': 'Revenues', 'amount_4': 0, 'param_2': 0}
2025-02-23 20:03:55,319 - ROLLBACK
2025-02-23 20:03:55,321 - GET http://127.0.0.1:8000/api/top-roi/ - 3.64 ms
2025-02-23 20:03:55,327 - BEGIN (implicit)
2025-02-23 20:03:55,328 - SELECT department.department_name AS department_department_name, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s) THEN ledger.amount ELSE %(param_1)s END) - sum(CASE WHEN (ledger.ledger_description = %(ledger_description_2)s) THEN ledger.amount ELSE %(param_2)s END) AS roi 
FROM ledger INNER JOIN department ON ledger.department_id = department.department_id GROUP BY department.department_name ORDER BY sum(ledger.amount) DESC 
 LIMIT %(param_3)s
2025-02-23 20:03:55,329 - [cached since 130.6s ago] {'ledger_description_1': 'Revenues', 'param_1': 0, 'ledger_description_2': 'Expenses', 'param_2': 0, 'param_3': 5}
2025-02-23 20:03:55,332 - ROLLBACK
2025-02-23 20:03:55,333 - GET http://127.0.0.1:8000/api/top-budget/ - 3.65 ms
2025-02-23 20:03:55,339 - BEGIN (implicit)
2025-02-23 20:03:55,340 - SELECT department.department_name AS department_department_name, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount ELSE %(param_1)s END + CASE WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_2)s END) AS total_expenditure 
FROM ledger INNER JOIN department ON ledger.department_id = department.department_id GROUP BY department.department_name ORDER BY sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount ELSE %(param_1)s END + CASE WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_2)s END) DESC 
 LIMIT %(param_3)s
2025-02-23 20:03:55,341 - [cached since 130.6s ago] {'ledger_description_1': 'Expenses', 'amount_1': 0, 'param_1': 0, 'ledger_description_2': 'Revenues', 'amount_2': 0, 'param_2': 0, 'param_3': 10}
2025-02-23 20:03:56,360 - ROLLBACK
2025-02-23 20:03:56,363 - ROLLBACK
2025-02-23 20:03:56,364 - GET http://127.0.0.1:8000/api/net-profit/ - 2.16 ms
2025-02-23 20:03:56,367 - GET http://127.0.0.1:8000/api/revenue-expenses/ - 2.16 ms
2025-02-23 20:03:58,521 - ROLLBACK
2025-02-23 20:03:58,524 - GET http://127.0.0.1:8000/api/top-roi/ - 3.20 ms
2025-02-23 20:03:58,551 - ROLLBACK
2025-02-23 20:03:58,553 - GET http://127.0.0.1:8000/api/top-budget/ - 3.22 ms
2025-02-23 20:04:02,211 - BEGIN (implicit)
2025-02-23 20:04:02,213 - BEGIN (implicit)
2025-02-23 20:04:02,216 - SELECT cost_center.cost_center_description AS cost_center_cost_center_description, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount ELSE %(param_1)s END + CASE WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_2)s END) AS total_expenditure 
FROM ledger INNER JOIN cost_center ON ledger.cost_center_id = cost_center.cost_center_id 
WHERE ledger.department_id = %(department_id_1)s GROUP BY cost_center.cost_center_description ORDER BY sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount ELSE %(param_1)s END + CASE WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_2)s END) DESC 
 LIMIT %(param_3)s
2025-02-23 20:04:02,218 - BEGIN (implicit)
2025-02-23 20:04:02,223 - SELECT year(ledger.general_ledger_date) AS time, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_1)s END) AS total_revenue, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_3)s AND ledger.amount > %(amount_3)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_4)s AND ledger.amount < %(amount_4)s) THEN -ledger.amount ELSE %(param_2)s END) AS total_expenses 
FROM ledger 
WHERE ledger.department_id = %(department_id_1)s GROUP BY year(ledger.general_ledger_date) ORDER BY year(ledger.general_ledger_date)
2025-02-23 20:04:02,225 - BEGIN (implicit)
2025-02-23 20:04:02,225 - [generated in 0.00941s] {'ledger_description_1': 'Expenses', 'amount_1': 0, 'param_1': 0, 'ledger_description_2': 'Revenues', 'amount_2': 0, 'param_2': 0, 'department_id_1': 102, 'param_3': 10}
2025-02-23 20:04:02,227 - SELECT cost_center.cost_center_description AS cost_center_cost_center_description, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s) THEN ledger.amount ELSE %(param_1)s END) - sum(CASE WHEN (ledger.ledger_description = %(ledger_description_2)s) THEN ledger.amount ELSE %(param_2)s END) AS roi 
FROM ledger INNER JOIN cost_center ON ledger.cost_center_id = cost_center.cost_center_id 
WHERE ledger.department_id = %(department_id_1)s GROUP BY cost_center.cost_center_description ORDER BY sum(ledger.amount) DESC 
 LIMIT %(param_3)s
2025-02-23 20:04:02,228 - [generated in 0.00575s] {'ledger_description_1': 'Revenues', 'amount_1': 0, 'ledger_description_2': 'Expenses', 'amount_2': 0, 'param_1': 0, 'ledger_description_3': 'Expenses', 'amount_3': 0, 'ledger_description_4': 'Revenues', 'amount_4': 0, 'param_2': 0, 'department_id_1': 102}
2025-02-23 20:04:02,232 - SELECT year(ledger.general_ledger_date) AS time, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_1)s END) - sum(CASE WHEN (ledger.ledger_description = %(ledger_description_3)s AND ledger.amount > %(amount_3)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_4)s AND ledger.amount < %(amount_4)s) THEN -ledger.amount ELSE %(param_2)s END) AS net_profit 
FROM ledger 
WHERE ledger.department_id = %(department_id_1)s GROUP BY year(ledger.general_ledger_date) ORDER BY year(ledger.general_ledger_date)
2025-02-23 20:04:02,235 - [generated in 0.00300s] {'ledger_description_1': 'Revenues', 'amount_1': 0, 'ledger_description_2': 'Expenses', 'amount_2': 0, 'param_1': 0, 'ledger_description_3': 'Expenses', 'amount_3': 0, 'ledger_description_4': 'Revenues', 'amount_4': 0, 'param_2': 0, 'department_id_1': 102}
2025-02-23 20:04:02,233 - [generated in 0.00539s] {'ledger_description_1': 'Revenues', 'param_1': 0, 'ledger_description_2': 'Expenses', 'param_2': 0, 'department_id_1': 102, 'param_3': 5}
2025-02-23 20:04:02,338 - ROLLBACK
2025-02-23 20:04:02,342 - ROLLBACK
2025-02-23 20:04:02,347 - GET http://127.0.0.1:8000/api/revenue-expenses/?department=102 - 0.14 ms
2025-02-23 20:04:02,348 - GET http://127.0.0.1:8000/api/net-profit/?department=102 - 0.14 ms
2025-02-23 20:04:03,073 - ROLLBACK
2025-02-23 20:04:03,073 - ROLLBACK
2025-02-23 20:04:03,075 - GET http://127.0.0.1:8000/api/top-roi/?department=102 - 0.87 ms
2025-02-23 20:04:03,076 - GET http://127.0.0.1:8000/api/top-budget/?department=102 - 0.88 ms
2025-02-23 20:04:36,737 - BEGIN (implicit)
2025-02-23 20:04:36,740 - SELECT fund.fund_description AS fund_fund_description, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_1)s END) AS total_revenue, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_3)s AND ledger.amount > %(amount_3)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_4)s AND ledger.amount < %(amount_4)s) THEN -ledger.amount ELSE %(param_2)s END) AS total_expenses, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_1)s END) / nullif(sum(CASE WHEN (ledger.ledger_description = %(ledger_description_3)s AND ledger.amount > %(amount_3)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_4)s AND ledger.amount < %(amount_4)s) THEN -ledger.amount ELSE %(param_2)s END), %(nullif_1)s) AS ratio, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_1)s END) - sum(CASE WHEN (ledger.ledger_description = %(ledger_description_3)s AND ledger.amount > %(amount_3)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_4)s AND ledger.amount < %(amount_4)s) THEN -ledger.amount ELSE %(param_2)s END) AS roi 
FROM ledger INNER JOIN fund ON ledger.fund_id = fund.fund_id GROUP BY fund.fund_description ORDER BY roi DESC
2025-02-23 20:04:36,741 - [cached since 172s ago] {'ledger_description_1': 'Revenues', 'amount_1': 0, 'ledger_description_2': 'Expenses', 'amount_2': 0, 'param_1': 0, 'ledger_description_3': 'Expenses', 'amount_3': 0, 'ledger_description_4': 'Revenues', 'amount_4': 0, 'param_2': 0, 'nullif_1': 0}
2025-02-23 20:04:52,943 - ROLLBACK
2025-02-23 20:04:52,945 - GET http://localhost:8000/api/fund-table/ - 16.21 ms
2025-02-23 20:07:14,684 - GET http://127.0.0.1:8000/api/initialise/ - 0.00 ms
2025-02-23 20:07:14,868 - BEGIN (implicit)
2025-02-23 20:07:14,868 - SELECT department.department_name AS department_department_name, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s) THEN ledger.amount ELSE %(param_1)s END) - sum(CASE WHEN (ledger.ledger_description = %(ledger_description_2)s) THEN ledger.amount ELSE %(param_2)s END) AS roi 
FROM ledger INNER JOIN department ON ledger.department_id = department.department_id GROUP BY department.department_name ORDER BY sum(ledger.amount) DESC 
 LIMIT %(param_3)s
2025-02-23 20:07:14,869 - [cached since 330.1s ago] {'ledger_description_1': 'Revenues', 'param_1': 0, 'ledger_description_2': 'Expenses', 'param_2': 0, 'param_3': 5}
2025-02-23 20:07:14,885 - BEGIN (implicit)
2025-02-23 20:07:14,887 - SELECT year(ledger.general_ledger_date) AS time, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_1)s END) AS total_revenue, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_3)s AND ledger.amount > %(amount_3)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_4)s AND ledger.amount < %(amount_4)s) THEN -ledger.amount ELSE %(param_2)s END) AS total_expenses 
FROM ledger GROUP BY year(ledger.general_ledger_date) ORDER BY year(ledger.general_ledger_date)
2025-02-23 20:07:14,889 - BEGIN (implicit)
2025-02-23 20:07:14,889 - [cached since 330.1s ago] {'ledger_description_1': 'Revenues', 'amount_1': 0, 'ledger_description_2': 'Expenses', 'amount_2': 0, 'param_1': 0, 'ledger_description_3': 'Expenses', 'amount_3': 0, 'ledger_description_4': 'Revenues', 'amount_4': 0, 'param_2': 0}
2025-02-23 20:07:14,898 - GET http://127.0.0.1:8000/api/initialise/ - 0.01 ms
2025-02-23 20:07:14,892 - BEGIN (implicit)
2025-02-23 20:07:14,893 - SELECT department.department_name AS department_department_name, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount ELSE %(param_1)s END + CASE WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_2)s END) AS total_expenditure 
FROM ledger INNER JOIN department ON ledger.department_id = department.department_id GROUP BY department.department_name ORDER BY sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount ELSE %(param_1)s END + CASE WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_2)s END) DESC 
 LIMIT %(param_3)s
2025-02-23 20:07:14,900 - BEGIN (implicit)
2025-02-23 20:07:14,901 - SELECT year(ledger.general_ledger_date) AS time, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_1)s END) - sum(CASE WHEN (ledger.ledger_description = %(ledger_description_3)s AND ledger.amount > %(amount_3)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_4)s AND ledger.amount < %(amount_4)s) THEN -ledger.amount ELSE %(param_2)s END) AS net_profit 
FROM ledger GROUP BY year(ledger.general_ledger_date) ORDER BY year(ledger.general_ledger_date)
2025-02-23 20:07:14,901 - [cached since 330.2s ago] {'ledger_description_1': 'Expenses', 'amount_1': 0, 'param_1': 0, 'ledger_description_2': 'Revenues', 'amount_2': 0, 'param_2': 0, 'param_3': 10}
2025-02-23 20:07:14,904 - SELECT fund.fund_description AS fund_fund_description, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_1)s END) AS total_revenue, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_3)s AND ledger.amount > %(amount_3)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_4)s AND ledger.amount < %(amount_4)s) THEN -ledger.amount ELSE %(param_2)s END) AS total_expenses, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_1)s END) / nullif(sum(CASE WHEN (ledger.ledger_description = %(ledger_description_3)s AND ledger.amount > %(amount_3)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_4)s AND ledger.amount < %(amount_4)s) THEN -ledger.amount ELSE %(param_2)s END), %(nullif_1)s) AS ratio, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_1)s END) - sum(CASE WHEN (ledger.ledger_description = %(ledger_description_3)s AND ledger.amount > %(amount_3)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_4)s AND ledger.amount < %(amount_4)s) THEN -ledger.amount ELSE %(param_2)s END) AS roi 
FROM ledger INNER JOIN fund ON ledger.fund_id = fund.fund_id GROUP BY fund.fund_description ORDER BY roi DESC
2025-02-23 20:07:14,904 - [cached since 330.2s ago] {'ledger_description_1': 'Revenues', 'amount_1': 0, 'ledger_description_2': 'Expenses', 'amount_2': 0, 'param_1': 0, 'ledger_description_3': 'Expenses', 'amount_3': 0, 'ledger_description_4': 'Revenues', 'amount_4': 0, 'param_2': 0}
2025-02-23 20:07:14,907 - [cached since 330.2s ago] {'ledger_description_1': 'Revenues', 'amount_1': 0, 'ledger_description_2': 'Expenses', 'amount_2': 0, 'param_1': 0, 'ledger_description_3': 'Expenses', 'amount_3': 0, 'ledger_description_4': 'Revenues', 'amount_4': 0, 'param_2': 0, 'nullif_1': 0}
2025-02-23 20:07:17,079 - BEGIN (implicit)
2025-02-23 20:07:17,080 - SELECT department.department_id AS department_department_id, department.department_name AS department_department_name 
FROM department
2025-02-23 20:07:17,080 - [cached since 331.7s ago] {}
2025-02-23 20:07:17,084 - SELECT min(ledger.general_ledger_date) AS min_1 
FROM ledger
2025-02-23 20:07:17,084 - [cached since 331.7s ago] {}
2025-02-23 20:07:17,087 - SELECT max(ledger.general_ledger_date) AS max_1 
FROM ledger
2025-02-23 20:07:17,088 - [cached since 331.7s ago] {}
2025-02-23 20:07:17,098 - ROLLBACK
2025-02-23 20:07:17,105 - GET http://127.0.0.1:8000/api/initialise - 0.03 ms
2025-02-23 20:07:17,122 - ROLLBACK
2025-02-23 20:07:17,125 - GET http://127.0.0.1:8000/api/net-profit/ - 2.25 ms
2025-02-23 20:07:17,130 - BEGIN (implicit)
2025-02-23 20:07:17,131 - SELECT department.department_id AS department_department_id, department.department_name AS department_department_name 
FROM department
2025-02-23 20:07:17,132 - [cached since 331.7s ago] {}
2025-02-23 20:07:17,136 - ROLLBACK
2025-02-23 20:07:17,138 - SELECT min(ledger.general_ledger_date) AS min_1 
FROM ledger
2025-02-23 20:07:17,141 - BEGIN (implicit)
2025-02-23 20:07:17,141 - [cached since 331.8s ago] {}
2025-02-23 20:07:17,144 - GET http://127.0.0.1:8000/api/revenue-expenses/ - 2.27 ms
2025-02-23 20:07:17,144 - SELECT year(ledger.general_ledger_date) AS time, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_1)s END) - sum(CASE WHEN (ledger.ledger_description = %(ledger_description_3)s AND ledger.amount > %(amount_3)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_4)s AND ledger.amount < %(amount_4)s) THEN -ledger.amount ELSE %(param_2)s END) AS net_profit 
FROM ledger GROUP BY year(ledger.general_ledger_date) ORDER BY year(ledger.general_ledger_date)
2025-02-23 20:07:17,145 - [cached since 332.4s ago] {'ledger_description_1': 'Revenues', 'amount_1': 0, 'ledger_description_2': 'Expenses', 'amount_2': 0, 'param_1': 0, 'ledger_description_3': 'Expenses', 'amount_3': 0, 'ledger_description_4': 'Revenues', 'amount_4': 0, 'param_2': 0}
2025-02-23 20:07:17,147 - SELECT max(ledger.general_ledger_date) AS max_1 
FROM ledger
2025-02-23 20:07:17,148 - [cached since 331.8s ago] {}
2025-02-23 20:07:17,154 - ROLLBACK
2025-02-23 20:07:17,157 - BEGIN (implicit)
2025-02-23 20:07:17,158 - SELECT year(ledger.general_ledger_date) AS time, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_1)s END) AS total_revenue, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_3)s AND ledger.amount > %(amount_3)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_4)s AND ledger.amount < %(amount_4)s) THEN -ledger.amount ELSE %(param_2)s END) AS total_expenses 
FROM ledger GROUP BY year(ledger.general_ledger_date) ORDER BY year(ledger.general_ledger_date)
2025-02-23 20:07:17,159 - [cached since 332.4s ago] {'ledger_description_1': 'Revenues', 'amount_1': 0, 'ledger_description_2': 'Expenses', 'amount_2': 0, 'param_1': 0, 'ledger_description_3': 'Expenses', 'amount_3': 0, 'ledger_description_4': 'Revenues', 'amount_4': 0, 'param_2': 0}
2025-02-23 20:07:17,160 - GET http://127.0.0.1:8000/api/initialise - 0.03 ms
2025-02-23 20:07:18,470 - ROLLBACK
2025-02-23 20:07:18,472 - GET http://127.0.0.1:8000/api/top-roi/ - 3.61 ms
2025-02-23 20:07:18,478 - BEGIN (implicit)
2025-02-23 20:07:18,479 - SELECT department.department_name AS department_department_name, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s) THEN ledger.amount ELSE %(param_1)s END) - sum(CASE WHEN (ledger.ledger_description = %(ledger_description_2)s) THEN ledger.amount ELSE %(param_2)s END) AS roi 
FROM ledger INNER JOIN department ON ledger.department_id = department.department_id GROUP BY department.department_name ORDER BY sum(ledger.amount) DESC 
 LIMIT %(param_3)s
2025-02-23 20:07:18,483 - [cached since 333.8s ago] {'ledger_description_1': 'Revenues', 'param_1': 0, 'ledger_description_2': 'Expenses', 'param_2': 0, 'param_3': 5}
2025-02-23 20:07:18,855 - ROLLBACK
2025-02-23 20:07:18,857 - GET http://127.0.0.1:8000/api/top-budget/ - 3.99 ms
2025-02-23 20:07:18,863 - BEGIN (implicit)
2025-02-23 20:07:18,864 - SELECT department.department_name AS department_department_name, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount ELSE %(param_1)s END + CASE WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_2)s END) AS total_expenditure 
FROM ledger INNER JOIN department ON ledger.department_id = department.department_id GROUP BY department.department_name ORDER BY sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount ELSE %(param_1)s END + CASE WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_2)s END) DESC 
 LIMIT %(param_3)s
2025-02-23 20:07:18,865 - [cached since 334.1s ago] {'ledger_description_1': 'Expenses', 'amount_1': 0, 'param_1': 0, 'ledger_description_2': 'Revenues', 'amount_2': 0, 'param_2': 0, 'param_3': 10}
2025-02-23 20:07:19,240 - ROLLBACK
2025-02-23 20:07:19,240 - ROLLBACK
2025-02-23 20:07:19,243 - GET http://127.0.0.1:8000/api/net-profit/ - 2.11 ms
2025-02-23 20:07:19,244 - GET http://127.0.0.1:8000/api/revenue-expenses/ - 2.09 ms
2025-02-23 20:07:21,070 - ROLLBACK
2025-02-23 20:07:21,072 - GET http://127.0.0.1:8000/api/top-roi/ - 2.60 ms
2025-02-23 20:07:21,452 - ROLLBACK
2025-02-23 20:07:21,453 - GET http://127.0.0.1:8000/api/top-budget/ - 2.59 ms
2025-02-23 20:07:30,447 - ROLLBACK
2025-02-23 20:07:30,449 - GET http://127.0.0.1:8000/api/fund-table/ - 15.57 ms
2025-02-23 20:07:30,457 - BEGIN (implicit)
2025-02-23 20:07:30,458 - SELECT fund.fund_description AS fund_fund_description, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_1)s END) AS total_revenue, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_3)s AND ledger.amount > %(amount_3)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_4)s AND ledger.amount < %(amount_4)s) THEN -ledger.amount ELSE %(param_2)s END) AS total_expenses, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_1)s END) / nullif(sum(CASE WHEN (ledger.ledger_description = %(ledger_description_3)s AND ledger.amount > %(amount_3)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_4)s AND ledger.amount < %(amount_4)s) THEN -ledger.amount ELSE %(param_2)s END), %(nullif_1)s) AS ratio, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_1)s END) - sum(CASE WHEN (ledger.ledger_description = %(ledger_description_3)s AND ledger.amount > %(amount_3)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_4)s AND ledger.amount < %(amount_4)s) THEN -ledger.amount ELSE %(param_2)s END) AS roi 
FROM ledger INNER JOIN fund ON ledger.fund_id = fund.fund_id GROUP BY fund.fund_description ORDER BY roi DESC
2025-02-23 20:07:30,459 - [cached since 345.7s ago] {'ledger_description_1': 'Revenues', 'amount_1': 0, 'ledger_description_2': 'Expenses', 'amount_2': 0, 'param_1': 0, 'ledger_description_3': 'Expenses', 'amount_3': 0, 'ledger_description_4': 'Revenues', 'amount_4': 0, 'param_2': 0, 'nullif_1': 0}
2025-02-23 20:07:46,110 - ROLLBACK
2025-02-23 20:07:46,111 - GET http://127.0.0.1:8000/api/fund-table/ - 15.66 ms
2025-02-23 20:12:22,051 - GET http://127.0.0.1:8000/api/initialise/ - 0.00 ms
2025-02-23 20:12:22,212 - BEGIN (implicit)
2025-02-23 20:12:22,214 - SELECT department.department_name AS department_department_name, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s) THEN ledger.amount ELSE %(param_1)s END) - sum(CASE WHEN (ledger.ledger_description = %(ledger_description_2)s) THEN ledger.amount ELSE %(param_2)s END) AS roi 
FROM ledger INNER JOIN department ON ledger.department_id = department.department_id GROUP BY department.department_name ORDER BY sum(ledger.amount) DESC 
 LIMIT %(param_3)s
2025-02-23 20:12:22,215 - [cached since 637.5s ago] {'ledger_description_1': 'Revenues', 'param_1': 0, 'ledger_description_2': 'Expenses', 'param_2': 0, 'param_3': 5}
2025-02-23 20:12:22,232 - BEGIN (implicit)
2025-02-23 20:12:22,235 - BEGIN (implicit)
2025-02-23 20:12:22,243 - GET http://127.0.0.1:8000/api/initialise/ - 0.01 ms
2025-02-23 20:12:22,239 - SELECT department.department_name AS department_department_name, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount ELSE %(param_1)s END + CASE WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_2)s END) AS total_expenditure 
FROM ledger INNER JOIN department ON ledger.department_id = department.department_id GROUP BY department.department_name ORDER BY sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount ELSE %(param_1)s END + CASE WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_2)s END) DESC 
 LIMIT %(param_3)s
2025-02-23 20:12:22,241 - SELECT year(ledger.general_ledger_date) AS time, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_1)s END) AS total_revenue, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_3)s AND ledger.amount > %(amount_3)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_4)s AND ledger.amount < %(amount_4)s) THEN -ledger.amount ELSE %(param_2)s END) AS total_expenses 
FROM ledger GROUP BY year(ledger.general_ledger_date) ORDER BY year(ledger.general_ledger_date)
2025-02-23 20:12:22,243 - BEGIN (implicit)
2025-02-23 20:12:22,245 - BEGIN (implicit)
2025-02-23 20:12:22,245 - [cached since 637.5s ago] {'ledger_description_1': 'Expenses', 'amount_1': 0, 'param_1': 0, 'ledger_description_2': 'Revenues', 'amount_2': 0, 'param_2': 0, 'param_3': 10}
2025-02-23 20:12:22,247 - [cached since 637.5s ago] {'ledger_description_1': 'Revenues', 'amount_1': 0, 'ledger_description_2': 'Expenses', 'amount_2': 0, 'param_1': 0, 'ledger_description_3': 'Expenses', 'amount_3': 0, 'ledger_description_4': 'Revenues', 'amount_4': 0, 'param_2': 0}
2025-02-23 20:12:22,249 - SELECT fund.fund_description AS fund_fund_description, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_1)s END) AS total_revenue, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_3)s AND ledger.amount > %(amount_3)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_4)s AND ledger.amount < %(amount_4)s) THEN -ledger.amount ELSE %(param_2)s END) AS total_expenses, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_1)s END) / nullif(sum(CASE WHEN (ledger.ledger_description = %(ledger_description_3)s AND ledger.amount > %(amount_3)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_4)s AND ledger.amount < %(amount_4)s) THEN -ledger.amount ELSE %(param_2)s END), %(nullif_1)s) AS ratio, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_1)s END) - sum(CASE WHEN (ledger.ledger_description = %(ledger_description_3)s AND ledger.amount > %(amount_3)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_4)s AND ledger.amount < %(amount_4)s) THEN -ledger.amount ELSE %(param_2)s END) AS roi 
FROM ledger INNER JOIN fund ON ledger.fund_id = fund.fund_id GROUP BY fund.fund_description ORDER BY roi DESC
2025-02-23 20:12:22,251 - SELECT year(ledger.general_ledger_date) AS time, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_1)s END) - sum(CASE WHEN (ledger.ledger_description = %(ledger_description_3)s AND ledger.amount > %(amount_3)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_4)s AND ledger.amount < %(amount_4)s) THEN -ledger.amount ELSE %(param_2)s END) AS net_profit 
FROM ledger GROUP BY year(ledger.general_ledger_date) ORDER BY year(ledger.general_ledger_date)
2025-02-23 20:12:22,258 - [cached since 637.5s ago] {'ledger_description_1': 'Revenues', 'amount_1': 0, 'ledger_description_2': 'Expenses', 'amount_2': 0, 'param_1': 0, 'ledger_description_3': 'Expenses', 'amount_3': 0, 'ledger_description_4': 'Revenues', 'amount_4': 0, 'param_2': 0, 'nullif_1': 0}
2025-02-23 20:12:22,259 - [cached since 637.5s ago] {'ledger_description_1': 'Revenues', 'amount_1': 0, 'ledger_description_2': 'Expenses', 'amount_2': 0, 'param_1': 0, 'ledger_description_3': 'Expenses', 'amount_3': 0, 'ledger_description_4': 'Revenues', 'amount_4': 0, 'param_2': 0}
2025-02-23 20:12:23,400 - BEGIN (implicit)
2025-02-23 20:12:23,402 - SELECT department.department_id AS department_department_id, department.department_name AS department_department_name 
FROM department
2025-02-23 20:12:23,402 - [cached since 638s ago] {}
2025-02-23 20:12:23,409 - SELECT min(ledger.general_ledger_date) AS min_1 
FROM ledger
2025-02-23 20:12:23,410 - [cached since 638s ago] {}
2025-02-23 20:12:23,427 - SELECT max(ledger.general_ledger_date) AS max_1 
FROM ledger
2025-02-23 20:12:23,428 - [cached since 638s ago] {}
2025-02-23 20:12:23,445 - ROLLBACK
2025-02-23 20:12:23,454 - GET http://127.0.0.1:8000/api/initialise - 0.09 ms
2025-02-23 20:12:23,481 - BEGIN (implicit)
2025-02-23 20:12:23,482 - SELECT department.department_id AS department_department_id, department.department_name AS department_department_name 
FROM department
2025-02-23 20:12:23,484 - [cached since 638.1s ago] {}
2025-02-23 20:12:23,496 - SELECT min(ledger.general_ledger_date) AS min_1 
FROM ledger
2025-02-23 20:12:23,497 - [cached since 638.1s ago] {}
2025-02-23 20:12:23,499 - SELECT max(ledger.general_ledger_date) AS max_1 
FROM ledger
2025-02-23 20:12:23,500 - [cached since 638.1s ago] {}
2025-02-23 20:12:23,514 - ROLLBACK
2025-02-23 20:12:23,515 - GET http://127.0.0.1:8000/api/initialise - 0.04 ms
2025-02-23 20:12:24,735 - ROLLBACK
2025-02-23 20:12:24,737 - GET http://127.0.0.1:8000/api/revenue-expenses/ - 2.52 ms
2025-02-23 20:12:24,746 - BEGIN (implicit)
2025-02-23 20:12:24,747 - SELECT year(ledger.general_ledger_date) AS time, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_1)s END) AS total_revenue, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_3)s AND ledger.amount > %(amount_3)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_4)s AND ledger.amount < %(amount_4)s) THEN -ledger.amount ELSE %(param_2)s END) AS total_expenses 
FROM ledger GROUP BY year(ledger.general_ledger_date) ORDER BY year(ledger.general_ledger_date)
2025-02-23 20:12:24,748 - [cached since 640s ago] {'ledger_description_1': 'Revenues', 'amount_1': 0, 'ledger_description_2': 'Expenses', 'amount_2': 0, 'param_1': 0, 'ledger_description_3': 'Expenses', 'amount_3': 0, 'ledger_description_4': 'Revenues', 'amount_4': 0, 'param_2': 0}
2025-02-23 20:12:24,809 - ROLLBACK
2025-02-23 20:12:24,810 - GET http://127.0.0.1:8000/api/net-profit/ - 2.58 ms
2025-02-23 20:12:24,819 - BEGIN (implicit)
2025-02-23 20:12:24,820 - SELECT year(ledger.general_ledger_date) AS time, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_1)s END) - sum(CASE WHEN (ledger.ledger_description = %(ledger_description_3)s AND ledger.amount > %(amount_3)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_4)s AND ledger.amount < %(amount_4)s) THEN -ledger.amount ELSE %(param_2)s END) AS net_profit 
FROM ledger GROUP BY year(ledger.general_ledger_date) ORDER BY year(ledger.general_ledger_date)
2025-02-23 20:12:24,821 - [cached since 640.1s ago] {'ledger_description_1': 'Revenues', 'amount_1': 0, 'ledger_description_2': 'Expenses', 'amount_2': 0, 'param_1': 0, 'ledger_description_3': 'Expenses', 'amount_3': 0, 'ledger_description_4': 'Revenues', 'amount_4': 0, 'param_2': 0}
2025-02-23 20:12:26,287 - ROLLBACK
2025-02-23 20:12:26,290 - GET http://127.0.0.1:8000/api/top-roi/ - 4.08 ms
2025-02-23 20:12:26,296 - BEGIN (implicit)
2025-02-23 20:12:26,298 - SELECT department.department_name AS department_department_name, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s) THEN ledger.amount ELSE %(param_1)s END) - sum(CASE WHEN (ledger.ledger_description = %(ledger_description_2)s) THEN ledger.amount ELSE %(param_2)s END) AS roi 
FROM ledger INNER JOIN department ON ledger.department_id = department.department_id GROUP BY department.department_name ORDER BY sum(ledger.amount) DESC 
 LIMIT %(param_3)s
2025-02-23 20:12:26,301 - [cached since 641.6s ago] {'ledger_description_1': 'Revenues', 'param_1': 0, 'ledger_description_2': 'Expenses', 'param_2': 0, 'param_3': 5}
2025-02-23 20:12:26,540 - ROLLBACK
2025-02-23 20:12:26,544 - GET http://127.0.0.1:8000/api/top-budget/ - 4.33 ms
2025-02-23 20:12:26,552 - BEGIN (implicit)
2025-02-23 20:12:26,554 - SELECT department.department_name AS department_department_name, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount ELSE %(param_1)s END + CASE WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_2)s END) AS total_expenditure 
FROM ledger INNER JOIN department ON ledger.department_id = department.department_id GROUP BY department.department_name ORDER BY sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount ELSE %(param_1)s END + CASE WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_2)s END) DESC 
 LIMIT %(param_3)s
2025-02-23 20:12:26,554 - [cached since 641.8s ago] {'ledger_description_1': 'Expenses', 'amount_1': 0, 'param_1': 0, 'ledger_description_2': 'Revenues', 'amount_2': 0, 'param_2': 0, 'param_3': 10}
2025-02-23 20:12:26,866 - ROLLBACK
2025-02-23 20:12:26,868 - GET http://127.0.0.1:8000/api/revenue-expenses/ - 2.13 ms
2025-02-23 20:12:26,893 - ROLLBACK
2025-02-23 20:12:26,895 - GET http://127.0.0.1:8000/api/net-profit/ - 2.08 ms
2025-02-23 20:12:27,862 - ROLLBACK
2025-02-23 20:12:27,864 - GET http://127.0.0.1:8000/api/fund-table/ - 5.64 ms
2025-02-23 20:12:27,870 - BEGIN (implicit)
2025-02-23 20:12:27,871 - SELECT fund.fund_description AS fund_fund_description, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_1)s END) AS total_revenue, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_3)s AND ledger.amount > %(amount_3)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_4)s AND ledger.amount < %(amount_4)s) THEN -ledger.amount ELSE %(param_2)s END) AS total_expenses, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_1)s END) / nullif(sum(CASE WHEN (ledger.ledger_description = %(ledger_description_3)s AND ledger.amount > %(amount_3)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_4)s AND ledger.amount < %(amount_4)s) THEN -ledger.amount ELSE %(param_2)s END), %(nullif_1)s) AS ratio, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_1)s END) - sum(CASE WHEN (ledger.ledger_description = %(ledger_description_3)s AND ledger.amount > %(amount_3)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_4)s AND ledger.amount < %(amount_4)s) THEN -ledger.amount ELSE %(param_2)s END) AS roi 
FROM ledger INNER JOIN fund ON ledger.fund_id = fund.fund_id GROUP BY fund.fund_description ORDER BY roi DESC
2025-02-23 20:12:27,873 - [cached since 643.1s ago] {'ledger_description_1': 'Revenues', 'amount_1': 0, 'ledger_description_2': 'Expenses', 'amount_2': 0, 'param_1': 0, 'ledger_description_3': 'Expenses', 'amount_3': 0, 'ledger_description_4': 'Revenues', 'amount_4': 0, 'param_2': 0, 'nullif_1': 0}
2025-02-23 20:12:29,435 - ROLLBACK
2025-02-23 20:12:29,437 - GET http://127.0.0.1:8000/api/top-roi/ - 3.14 ms
2025-02-23 20:12:29,847 - ROLLBACK
2025-02-23 20:12:29,848 - GET http://127.0.0.1:8000/api/top-budget/ - 3.30 ms
2025-02-23 20:12:31,848 - ROLLBACK
2025-02-23 20:12:31,851 - GET http://127.0.0.1:8000/api/fund-table/ - 3.98 ms
2025-02-23 20:12:41,637 - BEGIN (implicit)
2025-02-23 20:12:41,639 - SELECT fund.fund_description AS fund_fund_description, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_1)s END) AS total_revenue, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_3)s AND ledger.amount > %(amount_3)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_4)s AND ledger.amount < %(amount_4)s) THEN -ledger.amount ELSE %(param_2)s END) AS total_expenses, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_1)s END) / nullif(sum(CASE WHEN (ledger.ledger_description = %(ledger_description_3)s AND ledger.amount > %(amount_3)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_4)s AND ledger.amount < %(amount_4)s) THEN -ledger.amount ELSE %(param_2)s END), %(nullif_1)s) AS ratio, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_1)s END) - sum(CASE WHEN (ledger.ledger_description = %(ledger_description_3)s AND ledger.amount > %(amount_3)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_4)s AND ledger.amount < %(amount_4)s) THEN -ledger.amount ELSE %(param_2)s END) AS roi 
FROM ledger INNER JOIN fund ON ledger.fund_id = fund.fund_id GROUP BY fund.fund_description ORDER BY roi DESC
2025-02-23 20:12:41,639 - [cached since 656.9s ago] {'ledger_description_1': 'Revenues', 'amount_1': 0, 'ledger_description_2': 'Expenses', 'amount_2': 0, 'param_1': 0, 'ledger_description_3': 'Expenses', 'amount_3': 0, 'ledger_description_4': 'Revenues', 'amount_4': 0, 'param_2': 0, 'nullif_1': 0}
2025-02-23 20:12:44,196 - ROLLBACK
2025-02-23 20:12:44,197 - GET http://localhost:8000/api/fund-table/ - 2.56 ms
2025-02-23 20:12:56,160 - GET http://127.0.0.1:8000/api/initialise/ - 0.00 ms
2025-02-23 20:12:56,349 - BEGIN (implicit)
2025-02-23 20:12:56,355 - SELECT department.department_name AS department_department_name, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s) THEN ledger.amount ELSE %(param_1)s END) - sum(CASE WHEN (ledger.ledger_description = %(ledger_description_2)s) THEN ledger.amount ELSE %(param_2)s END) AS roi 
FROM ledger INNER JOIN department ON ledger.department_id = department.department_id GROUP BY department.department_name ORDER BY sum(ledger.amount) DESC 
 LIMIT %(param_3)s
2025-02-23 20:12:56,358 - [cached since 671.6s ago] {'ledger_description_1': 'Revenues', 'param_1': 0, 'ledger_description_2': 'Expenses', 'param_2': 0, 'param_3': 5}
2025-02-23 20:12:56,377 - BEGIN (implicit)
2025-02-23 20:12:56,380 - GET http://127.0.0.1:8000/api/initialise/ - 0.01 ms
2025-02-23 20:12:56,380 - BEGIN (implicit)
2025-02-23 20:12:56,382 - SELECT department.department_name AS department_department_name, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount ELSE %(param_1)s END + CASE WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_2)s END) AS total_expenditure 
FROM ledger INNER JOIN department ON ledger.department_id = department.department_id GROUP BY department.department_name ORDER BY sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount ELSE %(param_1)s END + CASE WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_2)s END) DESC 
 LIMIT %(param_3)s
2025-02-23 20:12:56,383 - SELECT year(ledger.general_ledger_date) AS time, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_1)s END) AS total_revenue, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_3)s AND ledger.amount > %(amount_3)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_4)s AND ledger.amount < %(amount_4)s) THEN -ledger.amount ELSE %(param_2)s END) AS total_expenses 
FROM ledger GROUP BY year(ledger.general_ledger_date) ORDER BY year(ledger.general_ledger_date)
2025-02-23 20:12:56,385 - [cached since 671.6s ago] {'ledger_description_1': 'Expenses', 'amount_1': 0, 'param_1': 0, 'ledger_description_2': 'Revenues', 'amount_2': 0, 'param_2': 0, 'param_3': 10}
2025-02-23 20:12:56,387 - [cached since 671.6s ago] {'ledger_description_1': 'Revenues', 'amount_1': 0, 'ledger_description_2': 'Expenses', 'amount_2': 0, 'param_1': 0, 'ledger_description_3': 'Expenses', 'amount_3': 0, 'ledger_description_4': 'Revenues', 'amount_4': 0, 'param_2': 0}
2025-02-23 20:12:56,391 - BEGIN (implicit)
2025-02-23 20:12:56,394 - SELECT year(ledger.general_ledger_date) AS time, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_1)s END) - sum(CASE WHEN (ledger.ledger_description = %(ledger_description_3)s AND ledger.amount > %(amount_3)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_4)s AND ledger.amount < %(amount_4)s) THEN -ledger.amount ELSE %(param_2)s END) AS net_profit 
FROM ledger GROUP BY year(ledger.general_ledger_date) ORDER BY year(ledger.general_ledger_date)
2025-02-23 20:12:56,399 - BEGIN (implicit)
2025-02-23 20:12:56,401 - [cached since 671.7s ago] {'ledger_description_1': 'Revenues', 'amount_1': 0, 'ledger_description_2': 'Expenses', 'amount_2': 0, 'param_1': 0, 'ledger_description_3': 'Expenses', 'amount_3': 0, 'ledger_description_4': 'Revenues', 'amount_4': 0, 'param_2': 0}
2025-02-23 20:12:56,406 - SELECT fund.fund_description AS fund_fund_description, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_1)s END) AS total_revenue, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_3)s AND ledger.amount > %(amount_3)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_4)s AND ledger.amount < %(amount_4)s) THEN -ledger.amount ELSE %(param_2)s END) AS total_expenses, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_1)s END) / nullif(sum(CASE WHEN (ledger.ledger_description = %(ledger_description_3)s AND ledger.amount > %(amount_3)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_4)s AND ledger.amount < %(amount_4)s) THEN -ledger.amount ELSE %(param_2)s END), %(nullif_1)s) AS ratio, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_1)s END) - sum(CASE WHEN (ledger.ledger_description = %(ledger_description_3)s AND ledger.amount > %(amount_3)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_4)s AND ledger.amount < %(amount_4)s) THEN -ledger.amount ELSE %(param_2)s END) AS roi 
FROM ledger INNER JOIN fund ON ledger.fund_id = fund.fund_id GROUP BY fund.fund_description ORDER BY roi DESC
2025-02-23 20:12:56,407 - [cached since 671.7s ago] {'ledger_description_1': 'Revenues', 'amount_1': 0, 'ledger_description_2': 'Expenses', 'amount_2': 0, 'param_1': 0, 'ledger_description_3': 'Expenses', 'amount_3': 0, 'ledger_description_4': 'Revenues', 'amount_4': 0, 'param_2': 0, 'nullif_1': 0}
2025-02-23 20:12:57,249 - BEGIN (implicit)
2025-02-23 20:12:57,249 - SELECT department.department_id AS department_department_id, department.department_name AS department_department_name 
FROM department
2025-02-23 20:12:57,250 - [cached since 671.9s ago] {}
2025-02-23 20:12:57,254 - SELECT min(ledger.general_ledger_date) AS min_1 
FROM ledger
2025-02-23 20:12:57,255 - [cached since 671.9s ago] {}
2025-02-23 20:12:57,262 - SELECT max(ledger.general_ledger_date) AS max_1 
FROM ledger
2025-02-23 20:12:57,275 - [cached since 671.9s ago] {}
2025-02-23 20:12:57,280 - ROLLBACK
2025-02-23 20:12:57,283 - GET http://127.0.0.1:8000/api/initialise - 0.06 ms
2025-02-23 20:12:57,312 - BEGIN (implicit)
2025-02-23 20:12:57,313 - SELECT department.department_id AS department_department_id, department.department_name AS department_department_name 
FROM department
2025-02-23 20:12:57,313 - [cached since 671.9s ago] {}
2025-02-23 20:12:57,331 - SELECT min(ledger.general_ledger_date) AS min_1 
FROM ledger
2025-02-23 20:12:57,332 - [cached since 671.9s ago] {}
2025-02-23 20:12:57,335 - SELECT max(ledger.general_ledger_date) AS max_1 
FROM ledger
2025-02-23 20:12:57,337 - [cached since 671.9s ago] {}
2025-02-23 20:12:57,340 - ROLLBACK
2025-02-23 20:12:57,342 - GET http://127.0.0.1:8000/api/initialise - 0.03 ms
2025-02-23 20:12:59,086 - ROLLBACK
2025-02-23 20:12:59,088 - GET http://127.0.0.1:8000/api/revenue-expenses/ - 2.73 ms
2025-02-23 20:12:59,097 - BEGIN (implicit)
2025-02-23 20:12:59,098 - SELECT year(ledger.general_ledger_date) AS time, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_1)s END) AS total_revenue, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_3)s AND ledger.amount > %(amount_3)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_4)s AND ledger.amount < %(amount_4)s) THEN -ledger.amount ELSE %(param_2)s END) AS total_expenses 
FROM ledger GROUP BY year(ledger.general_ledger_date) ORDER BY year(ledger.general_ledger_date)
2025-02-23 20:12:59,099 - [cached since 674.4s ago] {'ledger_description_1': 'Revenues', 'amount_1': 0, 'ledger_description_2': 'Expenses', 'amount_2': 0, 'param_1': 0, 'ledger_description_3': 'Expenses', 'amount_3': 0, 'ledger_description_4': 'Revenues', 'amount_4': 0, 'param_2': 0}
2025-02-23 20:12:59,116 - ROLLBACK
2025-02-23 20:12:59,120 - GET http://127.0.0.1:8000/api/net-profit/ - 2.76 ms
2025-02-23 20:12:59,127 - BEGIN (implicit)
2025-02-23 20:12:59,128 - SELECT year(ledger.general_ledger_date) AS time, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_1)s END) - sum(CASE WHEN (ledger.ledger_description = %(ledger_description_3)s AND ledger.amount > %(amount_3)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_4)s AND ledger.amount < %(amount_4)s) THEN -ledger.amount ELSE %(param_2)s END) AS net_profit 
FROM ledger GROUP BY year(ledger.general_ledger_date) ORDER BY year(ledger.general_ledger_date)
2025-02-23 20:12:59,129 - [cached since 674.4s ago] {'ledger_description_1': 'Revenues', 'amount_1': 0, 'ledger_description_2': 'Expenses', 'amount_2': 0, 'param_1': 0, 'ledger_description_3': 'Expenses', 'amount_3': 0, 'ledger_description_4': 'Revenues', 'amount_4': 0, 'param_2': 0}
2025-02-23 20:13:00,501 - ROLLBACK
2025-02-23 20:13:00,503 - GET http://127.0.0.1:8000/api/top-roi/ - 4.16 ms
2025-02-23 20:13:00,508 - BEGIN (implicit)
2025-02-23 20:13:00,510 - SELECT department.department_name AS department_department_name, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s) THEN ledger.amount ELSE %(param_1)s END) - sum(CASE WHEN (ledger.ledger_description = %(ledger_description_2)s) THEN ledger.amount ELSE %(param_2)s END) AS roi 
FROM ledger INNER JOIN department ON ledger.department_id = department.department_id GROUP BY department.department_name ORDER BY sum(ledger.amount) DESC 
 LIMIT %(param_3)s
2025-02-23 20:13:00,510 - [cached since 675.8s ago] {'ledger_description_1': 'Revenues', 'param_1': 0, 'ledger_description_2': 'Expenses', 'param_2': 0, 'param_3': 5}
2025-02-23 20:13:00,813 - ROLLBACK
2025-02-23 20:13:00,817 - GET http://127.0.0.1:8000/api/top-budget/ - 4.46 ms
2025-02-23 20:13:00,867 - BEGIN (implicit)
2025-02-23 20:13:00,893 - SELECT department.department_name AS department_department_name, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount ELSE %(param_1)s END + CASE WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_2)s END) AS total_expenditure 
FROM ledger INNER JOIN department ON ledger.department_id = department.department_id GROUP BY department.department_name ORDER BY sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount ELSE %(param_1)s END + CASE WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_2)s END) DESC 
 LIMIT %(param_3)s
2025-02-23 20:13:00,898 - [cached since 676.2s ago] {'ledger_description_1': 'Expenses', 'amount_1': 0, 'param_1': 0, 'ledger_description_2': 'Revenues', 'amount_2': 0, 'param_2': 0, 'param_3': 10}
2025-02-23 20:13:01,348 - ROLLBACK
2025-02-23 20:13:01,350 - ROLLBACK
2025-02-23 20:13:01,351 - GET http://127.0.0.1:8000/api/net-profit/ - 2.23 ms
2025-02-23 20:13:01,361 - GET http://127.0.0.1:8000/api/revenue-expenses/ - 2.27 ms
2025-02-23 20:13:02,555 - ROLLBACK
2025-02-23 20:13:02,557 - GET http://127.0.0.1:8000/api/fund-table/ - 6.19 ms
2025-02-23 20:13:02,564 - BEGIN (implicit)
2025-02-23 20:13:02,566 - SELECT fund.fund_description AS fund_fund_description, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_1)s END) AS total_revenue, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_3)s AND ledger.amount > %(amount_3)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_4)s AND ledger.amount < %(amount_4)s) THEN -ledger.amount ELSE %(param_2)s END) AS total_expenses, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_1)s END) / nullif(sum(CASE WHEN (ledger.ledger_description = %(ledger_description_3)s AND ledger.amount > %(amount_3)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_4)s AND ledger.amount < %(amount_4)s) THEN -ledger.amount ELSE %(param_2)s END), %(nullif_1)s) AS ratio, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_1)s END) - sum(CASE WHEN (ledger.ledger_description = %(ledger_description_3)s AND ledger.amount > %(amount_3)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_4)s AND ledger.amount < %(amount_4)s) THEN -ledger.amount ELSE %(param_2)s END) AS roi 
FROM ledger INNER JOIN fund ON ledger.fund_id = fund.fund_id GROUP BY fund.fund_description ORDER BY roi DESC
2025-02-23 20:13:02,567 - [cached since 677.8s ago] {'ledger_description_1': 'Revenues', 'amount_1': 0, 'ledger_description_2': 'Expenses', 'amount_2': 0, 'param_1': 0, 'ledger_description_3': 'Expenses', 'amount_3': 0, 'ledger_description_4': 'Revenues', 'amount_4': 0, 'param_2': 0, 'nullif_1': 0}
2025-02-23 20:13:03,955 - ROLLBACK
2025-02-23 20:13:03,956 - GET http://127.0.0.1:8000/api/top-roi/ - 3.45 ms
2025-02-23 20:13:04,306 - ROLLBACK
2025-02-23 20:13:04,307 - GET http://127.0.0.1:8000/api/top-budget/ - 3.45 ms
2025-02-23 20:13:06,288 - GET http://127.0.0.1:8000/api/initialise/ - 0.00 ms
2025-02-23 20:13:06,376 - ROLLBACK
2025-02-23 20:13:06,379 - GET http://127.0.0.1:8000/api/fund-table/ - 3.82 ms
2025-02-23 20:13:06,431 - BEGIN (implicit)
2025-02-23 20:13:06,435 - SELECT department.department_name AS department_department_name, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s) THEN ledger.amount ELSE %(param_1)s END) - sum(CASE WHEN (ledger.ledger_description = %(ledger_description_2)s) THEN ledger.amount ELSE %(param_2)s END) AS roi 
FROM ledger INNER JOIN department ON ledger.department_id = department.department_id GROUP BY department.department_name ORDER BY sum(ledger.amount) DESC 
 LIMIT %(param_3)s
2025-02-23 20:13:06,437 - [cached since 681.7s ago] {'ledger_description_1': 'Revenues', 'param_1': 0, 'ledger_description_2': 'Expenses', 'param_2': 0, 'param_3': 5}
2025-02-23 20:13:06,440 - BEGIN (implicit)
2025-02-23 20:13:06,442 - BEGIN (implicit)
2025-02-23 20:13:06,443 - SELECT department.department_name AS department_department_name, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount ELSE %(param_1)s END + CASE WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_2)s END) AS total_expenditure 
FROM ledger INNER JOIN department ON ledger.department_id = department.department_id GROUP BY department.department_name ORDER BY sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount ELSE %(param_1)s END + CASE WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_2)s END) DESC 
 LIMIT %(param_3)s
2025-02-23 20:13:06,445 - SELECT year(ledger.general_ledger_date) AS time, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_1)s END) AS total_revenue, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_3)s AND ledger.amount > %(amount_3)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_4)s AND ledger.amount < %(amount_4)s) THEN -ledger.amount ELSE %(param_2)s END) AS total_expenses 
FROM ledger GROUP BY year(ledger.general_ledger_date) ORDER BY year(ledger.general_ledger_date)
2025-02-23 20:13:06,446 - [cached since 681.7s ago] {'ledger_description_1': 'Expenses', 'amount_1': 0, 'param_1': 0, 'ledger_description_2': 'Revenues', 'amount_2': 0, 'param_2': 0, 'param_3': 10}
2025-02-23 20:13:06,453 - GET http://127.0.0.1:8000/api/initialise/ - 0.01 ms
2025-02-23 20:13:06,447 - [cached since 681.7s ago] {'ledger_description_1': 'Revenues', 'amount_1': 0, 'ledger_description_2': 'Expenses', 'amount_2': 0, 'param_1': 0, 'ledger_description_3': 'Expenses', 'amount_3': 0, 'ledger_description_4': 'Revenues', 'amount_4': 0, 'param_2': 0}
2025-02-23 20:13:06,451 - BEGIN (implicit)
2025-02-23 20:13:06,453 - BEGIN (implicit)
2025-02-23 20:13:06,458 - SELECT year(ledger.general_ledger_date) AS time, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_1)s END) - sum(CASE WHEN (ledger.ledger_description = %(ledger_description_3)s AND ledger.amount > %(amount_3)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_4)s AND ledger.amount < %(amount_4)s) THEN -ledger.amount ELSE %(param_2)s END) AS net_profit 
FROM ledger GROUP BY year(ledger.general_ledger_date) ORDER BY year(ledger.general_ledger_date)
2025-02-23 20:13:06,460 - SELECT fund.fund_description AS fund_fund_description, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_1)s END) AS total_revenue, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_3)s AND ledger.amount > %(amount_3)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_4)s AND ledger.amount < %(amount_4)s) THEN -ledger.amount ELSE %(param_2)s END) AS total_expenses, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_1)s END) / nullif(sum(CASE WHEN (ledger.ledger_description = %(ledger_description_3)s AND ledger.amount > %(amount_3)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_4)s AND ledger.amount < %(amount_4)s) THEN -ledger.amount ELSE %(param_2)s END), %(nullif_1)s) AS ratio, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_1)s END) - sum(CASE WHEN (ledger.ledger_description = %(ledger_description_3)s AND ledger.amount > %(amount_3)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_4)s AND ledger.amount < %(amount_4)s) THEN -ledger.amount ELSE %(param_2)s END) AS roi 
FROM ledger INNER JOIN fund ON ledger.fund_id = fund.fund_id GROUP BY fund.fund_description ORDER BY roi DESC
2025-02-23 20:13:06,460 - [cached since 681.7s ago] {'ledger_description_1': 'Revenues', 'amount_1': 0, 'ledger_description_2': 'Expenses', 'amount_2': 0, 'param_1': 0, 'ledger_description_3': 'Expenses', 'amount_3': 0, 'ledger_description_4': 'Revenues', 'amount_4': 0, 'param_2': 0}
2025-02-23 20:13:06,460 - [cached since 681.7s ago] {'ledger_description_1': 'Revenues', 'amount_1': 0, 'ledger_description_2': 'Expenses', 'amount_2': 0, 'param_1': 0, 'ledger_description_3': 'Expenses', 'amount_3': 0, 'ledger_description_4': 'Revenues', 'amount_4': 0, 'param_2': 0, 'nullif_1': 0}
2025-02-23 20:13:07,189 - BEGIN (implicit)
2025-02-23 20:13:07,190 - SELECT department.department_id AS department_department_id, department.department_name AS department_department_name 
FROM department
2025-02-23 20:13:07,191 - [cached since 681.8s ago] {}
2025-02-23 20:13:07,193 - SELECT min(ledger.general_ledger_date) AS min_1 
FROM ledger
2025-02-23 20:13:07,194 - [cached since 681.8s ago] {}
2025-02-23 20:13:07,196 - SELECT max(ledger.general_ledger_date) AS max_1 
FROM ledger
2025-02-23 20:13:07,196 - [cached since 681.8s ago] {}
2025-02-23 20:13:07,213 - ROLLBACK
2025-02-23 20:13:07,215 - GET http://127.0.0.1:8000/api/initialise - 0.03 ms
2025-02-23 20:13:07,224 - BEGIN (implicit)
2025-02-23 20:13:07,224 - SELECT department.department_id AS department_department_id, department.department_name AS department_department_name 
FROM department
2025-02-23 20:13:07,225 - [cached since 681.8s ago] {}
2025-02-23 20:13:07,227 - SELECT min(ledger.general_ledger_date) AS min_1 
FROM ledger
2025-02-23 20:13:07,228 - [cached since 681.8s ago] {}
2025-02-23 20:13:07,231 - SELECT max(ledger.general_ledger_date) AS max_1 
FROM ledger
2025-02-23 20:13:07,231 - [cached since 681.8s ago] {}
2025-02-23 20:13:07,235 - ROLLBACK
2025-02-23 20:13:07,239 - GET http://127.0.0.1:8000/api/initialise - 0.02 ms
2025-02-23 20:13:08,759 - ROLLBACK
2025-02-23 20:13:08,764 - GET http://127.0.0.1:8000/api/net-profit/ - 2.33 ms
2025-02-23 20:13:08,771 - BEGIN (implicit)
2025-02-23 20:13:08,772 - SELECT year(ledger.general_ledger_date) AS time, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_1)s END) - sum(CASE WHEN (ledger.ledger_description = %(ledger_description_3)s AND ledger.amount > %(amount_3)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_4)s AND ledger.amount < %(amount_4)s) THEN -ledger.amount ELSE %(param_2)s END) AS net_profit 
FROM ledger GROUP BY year(ledger.general_ledger_date) ORDER BY year(ledger.general_ledger_date)
2025-02-23 20:13:08,773 - [cached since 684s ago] {'ledger_description_1': 'Revenues', 'amount_1': 0, 'ledger_description_2': 'Expenses', 'amount_2': 0, 'param_1': 0, 'ledger_description_3': 'Expenses', 'amount_3': 0, 'ledger_description_4': 'Revenues', 'amount_4': 0, 'param_2': 0}
2025-02-23 20:13:08,899 - ROLLBACK
2025-02-23 20:13:08,901 - GET http://127.0.0.1:8000/api/revenue-expenses/ - 2.48 ms
2025-02-23 20:13:08,909 - BEGIN (implicit)
2025-02-23 20:13:08,910 - SELECT year(ledger.general_ledger_date) AS time, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_1)s END) AS total_revenue, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_3)s AND ledger.amount > %(amount_3)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_4)s AND ledger.amount < %(amount_4)s) THEN -ledger.amount ELSE %(param_2)s END) AS total_expenses 
FROM ledger GROUP BY year(ledger.general_ledger_date) ORDER BY year(ledger.general_ledger_date)
2025-02-23 20:13:08,911 - [cached since 684.2s ago] {'ledger_description_1': 'Revenues', 'amount_1': 0, 'ledger_description_2': 'Expenses', 'amount_2': 0, 'param_1': 0, 'ledger_description_3': 'Expenses', 'amount_3': 0, 'ledger_description_4': 'Revenues', 'amount_4': 0, 'param_2': 0}
2025-02-23 20:13:10,068 - ROLLBACK
2025-02-23 20:13:10,069 - GET http://127.0.0.1:8000/api/top-roi/ - 3.65 ms
2025-02-23 20:13:10,075 - BEGIN (implicit)
2025-02-23 20:13:10,077 - SELECT department.department_name AS department_department_name, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s) THEN ledger.amount ELSE %(param_1)s END) - sum(CASE WHEN (ledger.ledger_description = %(ledger_description_2)s) THEN ledger.amount ELSE %(param_2)s END) AS roi 
FROM ledger INNER JOIN department ON ledger.department_id = department.department_id GROUP BY department.department_name ORDER BY sum(ledger.amount) DESC 
 LIMIT %(param_3)s
2025-02-23 20:13:10,077 - [cached since 685.4s ago] {'ledger_description_1': 'Revenues', 'param_1': 0, 'ledger_description_2': 'Expenses', 'param_2': 0, 'param_3': 5}
2025-02-23 20:13:10,476 - ROLLBACK
2025-02-23 20:13:10,478 - GET http://127.0.0.1:8000/api/top-budget/ - 4.05 ms
2025-02-23 20:13:10,487 - BEGIN (implicit)
2025-02-23 20:13:10,489 - SELECT department.department_name AS department_department_name, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount ELSE %(param_1)s END + CASE WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_2)s END) AS total_expenditure 
FROM ledger INNER JOIN department ON ledger.department_id = department.department_id GROUP BY department.department_name ORDER BY sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount ELSE %(param_1)s END + CASE WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_2)s END) DESC 
 LIMIT %(param_3)s
2025-02-23 20:13:10,490 - [cached since 685.7s ago] {'ledger_description_1': 'Expenses', 'amount_1': 0, 'param_1': 0, 'ledger_description_2': 'Revenues', 'amount_2': 0, 'param_2': 0, 'param_3': 10}
2025-02-23 20:13:10,751 - ROLLBACK
2025-02-23 20:13:10,753 - GET http://127.0.0.1:8000/api/net-profit/ - 1.98 ms
2025-02-23 20:13:10,770 - ROLLBACK
2025-02-23 20:13:10,772 - GET http://127.0.0.1:8000/api/revenue-expenses/ - 1.87 ms
2025-02-23 20:13:11,409 - ROLLBACK
2025-02-23 20:13:11,412 - GET http://127.0.0.1:8000/api/fund-table/ - 4.98 ms
2025-02-23 20:13:11,417 - BEGIN (implicit)
2025-02-23 20:13:11,418 - SELECT fund.fund_description AS fund_fund_description, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_1)s END) AS total_revenue, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_3)s AND ledger.amount > %(amount_3)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_4)s AND ledger.amount < %(amount_4)s) THEN -ledger.amount ELSE %(param_2)s END) AS total_expenses, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_1)s END) / nullif(sum(CASE WHEN (ledger.ledger_description = %(ledger_description_3)s AND ledger.amount > %(amount_3)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_4)s AND ledger.amount < %(amount_4)s) THEN -ledger.amount ELSE %(param_2)s END), %(nullif_1)s) AS ratio, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_1)s END) - sum(CASE WHEN (ledger.ledger_description = %(ledger_description_3)s AND ledger.amount > %(amount_3)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_4)s AND ledger.amount < %(amount_4)s) THEN -ledger.amount ELSE %(param_2)s END) AS roi 
FROM ledger INNER JOIN fund ON ledger.fund_id = fund.fund_id GROUP BY fund.fund_description ORDER BY roi DESC
2025-02-23 20:13:11,419 - [cached since 686.7s ago] {'ledger_description_1': 'Revenues', 'amount_1': 0, 'ledger_description_2': 'Expenses', 'amount_2': 0, 'param_1': 0, 'ledger_description_3': 'Expenses', 'amount_3': 0, 'ledger_description_4': 'Revenues', 'amount_4': 0, 'param_2': 0, 'nullif_1': 0}
2025-02-23 20:13:13,037 - ROLLBACK
2025-02-23 20:13:13,039 - GET http://127.0.0.1:8000/api/top-roi/ - 2.97 ms
2025-02-23 20:13:13,672 - ROLLBACK
2025-02-23 20:13:13,674 - GET http://127.0.0.1:8000/api/top-budget/ - 3.19 ms
2025-02-23 20:13:15,321 - ROLLBACK
2025-02-23 20:13:15,324 - GET http://127.0.0.1:8000/api/fund-table/ - 3.91 ms
2025-02-23 20:13:21,080 - BEGIN (implicit)
2025-02-23 20:13:21,080 - SELECT department.department_id AS department_department_id, department.department_name AS department_department_name 
FROM department
2025-02-23 20:13:21,081 - [cached since 695.7s ago] {}
2025-02-23 20:13:21,098 - SELECT min(ledger.general_ledger_date) AS min_1 
FROM ledger
2025-02-23 20:13:21,098 - [cached since 695.7s ago] {}
2025-02-23 20:13:21,151 - SELECT max(ledger.general_ledger_date) AS max_1 
FROM ledger
2025-02-23 20:13:21,152 - [cached since 695.8s ago] {}
2025-02-23 20:13:21,199 - ROLLBACK
2025-02-23 20:13:21,201 - GET http://localhost:8000/api/initialise - 0.12 ms
2025-02-23 20:13:30,987 - BEGIN (implicit)
2025-02-23 20:13:30,989 - SELECT department.department_name AS department_department_name, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s) THEN ledger.amount ELSE %(param_1)s END) - sum(CASE WHEN (ledger.ledger_description = %(ledger_description_2)s) THEN ledger.amount ELSE %(param_2)s END) AS roi 
FROM ledger INNER JOIN department ON ledger.department_id = department.department_id GROUP BY department.department_name ORDER BY sum(ledger.amount) DESC 
 LIMIT %(param_3)s
2025-02-23 20:13:30,990 - [cached since 706.3s ago] {'ledger_description_1': 'Revenues', 'param_1': 0, 'ledger_description_2': 'Expenses', 'param_2': 0, 'param_3': 5}
2025-02-23 20:13:33,233 - ROLLBACK
2025-02-23 20:13:33,234 - GET http://localhost:8000/api/top-roi/ - 2.25 ms
2025-02-23 20:13:43,075 - BEGIN (implicit)
2025-02-23 20:13:43,077 - SELECT department.department_name AS department_department_name, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount ELSE %(param_1)s END + CASE WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_2)s END) AS total_expenditure 
FROM ledger INNER JOIN department ON ledger.department_id = department.department_id GROUP BY department.department_name ORDER BY sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount ELSE %(param_1)s END + CASE WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_2)s END) DESC 
 LIMIT %(param_3)s
2025-02-23 20:13:43,078 - [cached since 718.3s ago] {'ledger_description_1': 'Expenses', 'amount_1': 0, 'param_1': 0, 'ledger_description_2': 'Revenues', 'amount_2': 0, 'param_2': 0, 'param_3': 10}
2025-02-23 20:13:45,402 - ROLLBACK
2025-02-23 20:13:45,404 - GET http://localhost:8000/api/top-budget/ - 2.33 ms
2025-02-23 20:13:55,149 - BEGIN (implicit)
2025-02-23 20:13:55,151 - SELECT year(ledger.general_ledger_date) AS time, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_1)s END) AS total_revenue, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_3)s AND ledger.amount > %(amount_3)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_4)s AND ledger.amount < %(amount_4)s) THEN -ledger.amount ELSE %(param_2)s END) AS total_expenses 
FROM ledger GROUP BY year(ledger.general_ledger_date) ORDER BY year(ledger.general_ledger_date)
2025-02-23 20:13:55,152 - [cached since 730.4s ago] {'ledger_description_1': 'Revenues', 'amount_1': 0, 'ledger_description_2': 'Expenses', 'amount_2': 0, 'param_1': 0, 'ledger_description_3': 'Expenses', 'amount_3': 0, 'ledger_description_4': 'Revenues', 'amount_4': 0, 'param_2': 0}
2025-02-23 20:13:56,400 - ROLLBACK
2025-02-23 20:13:56,401 - GET http://localhost:8000/api/revenue-expenses/ - 1.25 ms
2025-02-23 20:14:03,838 - BEGIN (implicit)
2025-02-23 20:14:03,840 - SELECT fund.fund_description AS fund_fund_description, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_1)s END) AS total_revenue, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_3)s AND ledger.amount > %(amount_3)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_4)s AND ledger.amount < %(amount_4)s) THEN -ledger.amount ELSE %(param_2)s END) AS total_expenses, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_1)s END) / nullif(sum(CASE WHEN (ledger.ledger_description = %(ledger_description_3)s AND ledger.amount > %(amount_3)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_4)s AND ledger.amount < %(amount_4)s) THEN -ledger.amount ELSE %(param_2)s END), %(nullif_1)s) AS ratio, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_1)s END) - sum(CASE WHEN (ledger.ledger_description = %(ledger_description_3)s AND ledger.amount > %(amount_3)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_4)s AND ledger.amount < %(amount_4)s) THEN -ledger.amount ELSE %(param_2)s END) AS roi 
FROM ledger INNER JOIN fund ON ledger.fund_id = fund.fund_id GROUP BY fund.fund_description ORDER BY roi DESC
2025-02-23 20:14:03,841 - [cached since 739.1s ago] {'ledger_description_1': 'Revenues', 'amount_1': 0, 'ledger_description_2': 'Expenses', 'amount_2': 0, 'param_1': 0, 'ledger_description_3': 'Expenses', 'amount_3': 0, 'ledger_description_4': 'Revenues', 'amount_4': 0, 'param_2': 0, 'nullif_1': 0}
2025-02-23 20:14:06,943 - ROLLBACK
2025-02-23 20:14:06,944 - GET http://localhost:8000/api/fund-table/ - 3.11 ms
2025-02-23 20:14:17,446 - BEGIN (implicit)
2025-02-23 20:14:17,447 - SELECT year(ledger.general_ledger_date) AS time, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_1)s END) - sum(CASE WHEN (ledger.ledger_description = %(ledger_description_3)s AND ledger.amount > %(amount_3)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_4)s AND ledger.amount < %(amount_4)s) THEN -ledger.amount ELSE %(param_2)s END) AS net_profit 
FROM ledger GROUP BY year(ledger.general_ledger_date) ORDER BY year(ledger.general_ledger_date)
2025-02-23 20:14:17,448 - [cached since 752.7s ago] {'ledger_description_1': 'Revenues', 'amount_1': 0, 'ledger_description_2': 'Expenses', 'amount_2': 0, 'param_1': 0, 'ledger_description_3': 'Expenses', 'amount_3': 0, 'ledger_description_4': 'Revenues', 'amount_4': 0, 'param_2': 0}
2025-02-23 20:14:18,673 - ROLLBACK
2025-02-23 20:14:18,675 - GET http://localhost:8000/api/net-profit/ - 1.23 ms
2025-02-23 20:15:47,938 - BEGIN (implicit)
2025-02-23 20:15:47,939 - SELECT fund.fund_description AS fund_fund_description, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_1)s END) AS total_revenue, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_3)s AND ledger.amount > %(amount_3)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_4)s AND ledger.amount < %(amount_4)s) THEN -ledger.amount ELSE %(param_2)s END) AS total_expenses, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_1)s END) / nullif(sum(CASE WHEN (ledger.ledger_description = %(ledger_description_3)s AND ledger.amount > %(amount_3)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_4)s AND ledger.amount < %(amount_4)s) THEN -ledger.amount ELSE %(param_2)s END), %(nullif_1)s) AS ratio, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_1)s END) - sum(CASE WHEN (ledger.ledger_description = %(ledger_description_3)s AND ledger.amount > %(amount_3)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_4)s AND ledger.amount < %(amount_4)s) THEN -ledger.amount ELSE %(param_2)s END) AS roi 
FROM ledger INNER JOIN fund ON ledger.fund_id = fund.fund_id GROUP BY fund.fund_description ORDER BY roi DESC
2025-02-23 20:15:47,939 - [cached since 843.2s ago] {'ledger_description_1': 'Revenues', 'amount_1': 0, 'ledger_description_2': 'Expenses', 'amount_2': 0, 'param_1': 0, 'ledger_description_3': 'Expenses', 'amount_3': 0, 'ledger_description_4': 'Revenues', 'amount_4': 0, 'param_2': 0, 'nullif_1': 0}
2025-02-23 20:15:51,570 - ROLLBACK
2025-02-23 20:15:51,572 - GET http://localhost:8000/api/fund-table/ - 3.64 ms
2025-02-23 20:15:55,462 - BEGIN (implicit)
2025-02-23 20:15:55,465 - SELECT fund.fund_description AS fund_fund_description, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_1)s END) AS total_revenue, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_3)s AND ledger.amount > %(amount_3)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_4)s AND ledger.amount < %(amount_4)s) THEN -ledger.amount ELSE %(param_2)s END) AS total_expenses, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_1)s END) / nullif(sum(CASE WHEN (ledger.ledger_description = %(ledger_description_3)s AND ledger.amount > %(amount_3)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_4)s AND ledger.amount < %(amount_4)s) THEN -ledger.amount ELSE %(param_2)s END), %(nullif_1)s) AS ratio, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_1)s END) - sum(CASE WHEN (ledger.ledger_description = %(ledger_description_3)s AND ledger.amount > %(amount_3)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_4)s AND ledger.amount < %(amount_4)s) THEN -ledger.amount ELSE %(param_2)s END) AS roi 
FROM ledger INNER JOIN fund ON ledger.fund_id = fund.fund_id GROUP BY fund.fund_description ORDER BY roi DESC
2025-02-23 20:15:55,466 - [cached since 850.7s ago] {'ledger_description_1': 'Revenues', 'amount_1': 0, 'ledger_description_2': 'Expenses', 'amount_2': 0, 'param_1': 0, 'ledger_description_3': 'Expenses', 'amount_3': 0, 'ledger_description_4': 'Revenues', 'amount_4': 0, 'param_2': 0, 'nullif_1': 0}
2025-02-23 20:15:58,859 - ROLLBACK
2025-02-23 20:15:58,861 - GET http://localhost:8000/api/fund-table/ - 3.40 ms
2025-02-23 20:16:02,069 - BEGIN (implicit)
2025-02-23 20:16:02,071 - SELECT fund.fund_description AS fund_fund_description, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_1)s END) AS total_revenue, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_3)s AND ledger.amount > %(amount_3)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_4)s AND ledger.amount < %(amount_4)s) THEN -ledger.amount ELSE %(param_2)s END) AS total_expenses, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_1)s END) / nullif(sum(CASE WHEN (ledger.ledger_description = %(ledger_description_3)s AND ledger.amount > %(amount_3)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_4)s AND ledger.amount < %(amount_4)s) THEN -ledger.amount ELSE %(param_2)s END), %(nullif_1)s) AS ratio, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_1)s END) - sum(CASE WHEN (ledger.ledger_description = %(ledger_description_3)s AND ledger.amount > %(amount_3)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_4)s AND ledger.amount < %(amount_4)s) THEN -ledger.amount ELSE %(param_2)s END) AS roi 
FROM ledger INNER JOIN fund ON ledger.fund_id = fund.fund_id GROUP BY fund.fund_description ORDER BY roi DESC
2025-02-23 20:16:02,072 - [cached since 857.3s ago] {'ledger_description_1': 'Revenues', 'amount_1': 0, 'ledger_description_2': 'Expenses', 'amount_2': 0, 'param_1': 0, 'ledger_description_3': 'Expenses', 'amount_3': 0, 'ledger_description_4': 'Revenues', 'amount_4': 0, 'param_2': 0, 'nullif_1': 0}
2025-02-23 20:16:05,354 - ROLLBACK
2025-02-23 20:16:05,355 - GET http://localhost:8000/api/fund-table/ - 3.30 ms
2025-02-23 20:16:27,927 - GET http://127.0.0.1:8000/api/initialise/ - 0.00 ms
2025-02-23 20:16:28,059 - BEGIN (implicit)
2025-02-23 20:16:28,063 - SELECT department.department_name AS department_department_name, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s) THEN ledger.amount ELSE %(param_1)s END) - sum(CASE WHEN (ledger.ledger_description = %(ledger_description_2)s) THEN ledger.amount ELSE %(param_2)s END) AS roi 
FROM ledger INNER JOIN department ON ledger.department_id = department.department_id GROUP BY department.department_name ORDER BY sum(ledger.amount) DESC 
 LIMIT %(param_3)s
2025-02-23 20:16:28,066 - [cached since 883.3s ago] {'ledger_description_1': 'Revenues', 'param_1': 0, 'ledger_description_2': 'Expenses', 'param_2': 0, 'param_3': 5}
2025-02-23 20:16:28,077 - BEGIN (implicit)
2025-02-23 20:16:28,079 - GET http://127.0.0.1:8000/api/initialise/ - 0.01 ms
2025-02-23 20:16:28,078 - BEGIN (implicit)
2025-02-23 20:16:28,079 - SELECT year(ledger.general_ledger_date) AS time, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_1)s END) AS total_revenue, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_3)s AND ledger.amount > %(amount_3)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_4)s AND ledger.amount < %(amount_4)s) THEN -ledger.amount ELSE %(param_2)s END) AS total_expenses 
FROM ledger GROUP BY year(ledger.general_ledger_date) ORDER BY year(ledger.general_ledger_date)
2025-02-23 20:16:28,082 - SELECT department.department_name AS department_department_name, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount ELSE %(param_1)s END + CASE WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_2)s END) AS total_expenditure 
FROM ledger INNER JOIN department ON ledger.department_id = department.department_id GROUP BY department.department_name ORDER BY sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount ELSE %(param_1)s END + CASE WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_2)s END) DESC 
 LIMIT %(param_3)s
2025-02-23 20:16:28,084 - [cached since 883.3s ago] {'ledger_description_1': 'Revenues', 'amount_1': 0, 'ledger_description_2': 'Expenses', 'amount_2': 0, 'param_1': 0, 'ledger_description_3': 'Expenses', 'amount_3': 0, 'ledger_description_4': 'Revenues', 'amount_4': 0, 'param_2': 0}
2025-02-23 20:16:28,085 - [cached since 883.3s ago] {'ledger_description_1': 'Expenses', 'amount_1': 0, 'param_1': 0, 'ledger_description_2': 'Revenues', 'amount_2': 0, 'param_2': 0, 'param_3': 10}
2025-02-23 20:16:28,088 - BEGIN (implicit)
2025-02-23 20:16:28,095 - BEGIN (implicit)
2025-02-23 20:16:28,098 - SELECT fund.fund_description AS fund_fund_description, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_1)s END) AS total_revenue, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_3)s AND ledger.amount > %(amount_3)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_4)s AND ledger.amount < %(amount_4)s) THEN -ledger.amount ELSE %(param_2)s END) AS total_expenses, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_1)s END) / nullif(sum(CASE WHEN (ledger.ledger_description = %(ledger_description_3)s AND ledger.amount > %(amount_3)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_4)s AND ledger.amount < %(amount_4)s) THEN -ledger.amount ELSE %(param_2)s END), %(nullif_1)s) AS ratio, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_1)s END) - sum(CASE WHEN (ledger.ledger_description = %(ledger_description_3)s AND ledger.amount > %(amount_3)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_4)s AND ledger.amount < %(amount_4)s) THEN -ledger.amount ELSE %(param_2)s END) AS roi 
FROM ledger INNER JOIN fund ON ledger.fund_id = fund.fund_id GROUP BY fund.fund_description ORDER BY roi DESC
2025-02-23 20:16:28,099 - SELECT year(ledger.general_ledger_date) AS time, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_1)s END) - sum(CASE WHEN (ledger.ledger_description = %(ledger_description_3)s AND ledger.amount > %(amount_3)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_4)s AND ledger.amount < %(amount_4)s) THEN -ledger.amount ELSE %(param_2)s END) AS net_profit 
FROM ledger GROUP BY year(ledger.general_ledger_date) ORDER BY year(ledger.general_ledger_date)
2025-02-23 20:16:28,100 - [cached since 883.4s ago] {'ledger_description_1': 'Revenues', 'amount_1': 0, 'ledger_description_2': 'Expenses', 'amount_2': 0, 'param_1': 0, 'ledger_description_3': 'Expenses', 'amount_3': 0, 'ledger_description_4': 'Revenues', 'amount_4': 0, 'param_2': 0, 'nullif_1': 0}
2025-02-23 20:16:28,100 - [cached since 883.4s ago] {'ledger_description_1': 'Revenues', 'amount_1': 0, 'ledger_description_2': 'Expenses', 'amount_2': 0, 'param_1': 0, 'ledger_description_3': 'Expenses', 'amount_3': 0, 'ledger_description_4': 'Revenues', 'amount_4': 0, 'param_2': 0}
2025-02-23 20:16:28,848 - BEGIN (implicit)
2025-02-23 20:16:28,851 - SELECT department.department_id AS department_department_id, department.department_name AS department_department_name 
FROM department
2025-02-23 20:16:28,851 - [cached since 883.5s ago] {}
2025-02-23 20:16:28,856 - SELECT min(ledger.general_ledger_date) AS min_1 
FROM ledger
2025-02-23 20:16:28,856 - [cached since 883.5s ago] {}
2025-02-23 20:16:28,862 - SELECT max(ledger.general_ledger_date) AS max_1 
FROM ledger
2025-02-23 20:16:28,862 - [cached since 883.5s ago] {}
2025-02-23 20:16:28,866 - ROLLBACK
2025-02-23 20:16:28,868 - GET http://127.0.0.1:8000/api/initialise - 0.04 ms
2025-02-23 20:16:28,885 - BEGIN (implicit)
2025-02-23 20:16:28,886 - SELECT department.department_id AS department_department_id, department.department_name AS department_department_name 
FROM department
2025-02-23 20:16:28,886 - [cached since 883.5s ago] {}
2025-02-23 20:16:28,892 - SELECT min(ledger.general_ledger_date) AS min_1 
FROM ledger
2025-02-23 20:16:28,893 - [cached since 883.5s ago] {}
2025-02-23 20:16:28,907 - SELECT max(ledger.general_ledger_date) AS max_1 
FROM ledger
2025-02-23 20:16:28,908 - [cached since 883.5s ago] {}
2025-02-23 20:16:28,915 - ROLLBACK
2025-02-23 20:16:28,919 - GET http://127.0.0.1:8000/api/initialise - 0.04 ms
2025-02-23 20:16:30,814 - ROLLBACK
2025-02-23 20:16:30,816 - GET http://127.0.0.1:8000/api/revenue-expenses/ - 2.75 ms
2025-02-23 20:16:30,822 - BEGIN (implicit)
2025-02-23 20:16:30,823 - SELECT year(ledger.general_ledger_date) AS time, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_1)s END) AS total_revenue, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_3)s AND ledger.amount > %(amount_3)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_4)s AND ledger.amount < %(amount_4)s) THEN -ledger.amount ELSE %(param_2)s END) AS total_expenses 
FROM ledger GROUP BY year(ledger.general_ledger_date) ORDER BY year(ledger.general_ledger_date)
2025-02-23 20:16:30,824 - [cached since 886.1s ago] {'ledger_description_1': 'Revenues', 'amount_1': 0, 'ledger_description_2': 'Expenses', 'amount_2': 0, 'param_1': 0, 'ledger_description_3': 'Expenses', 'amount_3': 0, 'ledger_description_4': 'Revenues', 'amount_4': 0, 'param_2': 0}
2025-02-23 20:16:30,838 - ROLLBACK
2025-02-23 20:16:30,843 - GET http://127.0.0.1:8000/api/net-profit/ - 2.78 ms
2025-02-23 20:16:30,849 - BEGIN (implicit)
2025-02-23 20:16:30,852 - SELECT year(ledger.general_ledger_date) AS time, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_1)s END) - sum(CASE WHEN (ledger.ledger_description = %(ledger_description_3)s AND ledger.amount > %(amount_3)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_4)s AND ledger.amount < %(amount_4)s) THEN -ledger.amount ELSE %(param_2)s END) AS net_profit 
FROM ledger GROUP BY year(ledger.general_ledger_date) ORDER BY year(ledger.general_ledger_date)
2025-02-23 20:16:30,852 - [cached since 886.1s ago] {'ledger_description_1': 'Revenues', 'amount_1': 0, 'ledger_description_2': 'Expenses', 'amount_2': 0, 'param_1': 0, 'ledger_description_3': 'Expenses', 'amount_3': 0, 'ledger_description_4': 'Revenues', 'amount_4': 0, 'param_2': 0}
2025-02-23 20:16:31,870 - ROLLBACK
2025-02-23 20:16:31,871 - GET http://127.0.0.1:8000/api/top-roi/ - 3.82 ms
2025-02-23 20:16:31,878 - BEGIN (implicit)
2025-02-23 20:16:31,879 - SELECT department.department_name AS department_department_name, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s) THEN ledger.amount ELSE %(param_1)s END) - sum(CASE WHEN (ledger.ledger_description = %(ledger_description_2)s) THEN ledger.amount ELSE %(param_2)s END) AS roi 
FROM ledger INNER JOIN department ON ledger.department_id = department.department_id GROUP BY department.department_name ORDER BY sum(ledger.amount) DESC 
 LIMIT %(param_3)s
2025-02-23 20:16:31,880 - [cached since 887.2s ago] {'ledger_description_1': 'Revenues', 'param_1': 0, 'ledger_description_2': 'Expenses', 'param_2': 0, 'param_3': 5}
2025-02-23 20:16:32,124 - ROLLBACK
2025-02-23 20:16:32,126 - GET http://127.0.0.1:8000/api/top-budget/ - 4.06 ms
2025-02-23 20:16:32,132 - BEGIN (implicit)
2025-02-23 20:16:32,133 - SELECT department.department_name AS department_department_name, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount ELSE %(param_1)s END + CASE WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_2)s END) AS total_expenditure 
FROM ledger INNER JOIN department ON ledger.department_id = department.department_id GROUP BY department.department_name ORDER BY sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount ELSE %(param_1)s END + CASE WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_2)s END) DESC 
 LIMIT %(param_3)s
2025-02-23 20:16:32,134 - [cached since 887.4s ago] {'ledger_description_1': 'Expenses', 'amount_1': 0, 'param_1': 0, 'ledger_description_2': 'Revenues', 'amount_2': 0, 'param_2': 0, 'param_3': 10}
2025-02-23 20:16:32,885 - ROLLBACK
2025-02-23 20:16:32,887 - GET http://127.0.0.1:8000/api/revenue-expenses/ - 2.07 ms
2025-02-23 20:16:32,905 - ROLLBACK
2025-02-23 20:16:32,907 - GET http://127.0.0.1:8000/api/net-profit/ - 2.06 ms
2025-02-23 20:16:33,597 - ROLLBACK
2025-02-23 20:16:33,599 - GET http://127.0.0.1:8000/api/fund-table/ - 5.53 ms
2025-02-23 20:16:33,604 - BEGIN (implicit)
2025-02-23 20:16:33,606 - SELECT fund.fund_description AS fund_fund_description, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_1)s END) AS total_revenue, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_3)s AND ledger.amount > %(amount_3)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_4)s AND ledger.amount < %(amount_4)s) THEN -ledger.amount ELSE %(param_2)s END) AS total_expenses, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_1)s END) / nullif(sum(CASE WHEN (ledger.ledger_description = %(ledger_description_3)s AND ledger.amount > %(amount_3)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_4)s AND ledger.amount < %(amount_4)s) THEN -ledger.amount ELSE %(param_2)s END), %(nullif_1)s) AS ratio, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_1)s END) - sum(CASE WHEN (ledger.ledger_description = %(ledger_description_3)s AND ledger.amount > %(amount_3)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_4)s AND ledger.amount < %(amount_4)s) THEN -ledger.amount ELSE %(param_2)s END) AS roi 
FROM ledger INNER JOIN fund ON ledger.fund_id = fund.fund_id GROUP BY fund.fund_description ORDER BY roi DESC
2025-02-23 20:16:33,607 - [cached since 888.9s ago] {'ledger_description_1': 'Revenues', 'amount_1': 0, 'ledger_description_2': 'Expenses', 'amount_2': 0, 'param_1': 0, 'ledger_description_3': 'Expenses', 'amount_3': 0, 'ledger_description_4': 'Revenues', 'amount_4': 0, 'param_2': 0, 'nullif_1': 0}
2025-02-23 20:16:34,999 - ROLLBACK
2025-02-23 20:16:35,000 - GET http://127.0.0.1:8000/api/top-roi/ - 3.13 ms
2025-02-23 20:16:35,359 - ROLLBACK
2025-02-23 20:16:35,361 - GET http://127.0.0.1:8000/api/top-budget/ - 3.23 ms
2025-02-23 20:16:37,597 - ROLLBACK
2025-02-23 20:16:37,598 - GET http://127.0.0.1:8000/api/fund-table/ - 4.00 ms
2025-02-23 20:16:39,032 - BEGIN (implicit)
2025-02-23 20:16:39,033 - BEGIN (implicit)
2025-02-23 20:16:39,036 - BEGIN (implicit)
2025-02-23 20:16:39,038 - BEGIN (implicit)
2025-02-23 20:16:39,043 - BEGIN (implicit)
2025-02-23 20:16:39,045 - SELECT cost_center.cost_center_description AS cost_center_cost_center_description, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s) THEN ledger.amount ELSE %(param_1)s END) - sum(CASE WHEN (ledger.ledger_description = %(ledger_description_2)s) THEN ledger.amount ELSE %(param_2)s END) AS roi 
FROM ledger INNER JOIN cost_center ON ledger.cost_center_id = cost_center.cost_center_id 
WHERE ledger.department_id = %(department_id_1)s GROUP BY cost_center.cost_center_description ORDER BY sum(ledger.amount) DESC 
 LIMIT %(param_3)s
2025-02-23 20:16:39,046 - SELECT year(ledger.general_ledger_date) AS time, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_1)s END) AS total_revenue, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_3)s AND ledger.amount > %(amount_3)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_4)s AND ledger.amount < %(amount_4)s) THEN -ledger.amount ELSE %(param_2)s END) AS total_expenses 
FROM ledger 
WHERE ledger.department_id = %(department_id_1)s GROUP BY year(ledger.general_ledger_date) ORDER BY year(ledger.general_ledger_date)
2025-02-23 20:16:39,047 - SELECT cost_center.cost_center_description AS cost_center_cost_center_description, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount ELSE %(param_1)s END + CASE WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_2)s END) AS total_expenditure 
FROM ledger INNER JOIN cost_center ON ledger.cost_center_id = cost_center.cost_center_id 
WHERE ledger.department_id = %(department_id_1)s GROUP BY cost_center.cost_center_description ORDER BY sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount ELSE %(param_1)s END + CASE WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_2)s END) DESC 
 LIMIT %(param_3)s
2025-02-23 20:16:39,048 - SELECT year(ledger.general_ledger_date) AS time, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_1)s END) - sum(CASE WHEN (ledger.ledger_description = %(ledger_description_3)s AND ledger.amount > %(amount_3)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_4)s AND ledger.amount < %(amount_4)s) THEN -ledger.amount ELSE %(param_2)s END) AS net_profit 
FROM ledger 
WHERE ledger.department_id = %(department_id_1)s GROUP BY year(ledger.general_ledger_date) ORDER BY year(ledger.general_ledger_date)
2025-02-23 20:16:39,054 - SELECT fund.fund_description AS fund_fund_description, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_1)s END) AS total_revenue, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_3)s AND ledger.amount > %(amount_3)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_4)s AND ledger.amount < %(amount_4)s) THEN -ledger.amount ELSE %(param_2)s END) AS total_expenses, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_1)s END) / nullif(sum(CASE WHEN (ledger.ledger_description = %(ledger_description_3)s AND ledger.amount > %(amount_3)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_4)s AND ledger.amount < %(amount_4)s) THEN -ledger.amount ELSE %(param_2)s END), %(nullif_1)s) AS ratio, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_1)s END) - sum(CASE WHEN (ledger.ledger_description = %(ledger_description_3)s AND ledger.amount > %(amount_3)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_4)s AND ledger.amount < %(amount_4)s) THEN -ledger.amount ELSE %(param_2)s END) AS roi 
FROM ledger INNER JOIN fund ON ledger.fund_id = fund.fund_id 
WHERE ledger.department_id = %(department_id_1)s GROUP BY fund.fund_description ORDER BY roi DESC
2025-02-23 20:16:39,061 - [generated in 0.00658s] {'ledger_description_1': 'Revenues', 'amount_1': 0, 'ledger_description_2': 'Expenses', 'amount_2': 0, 'param_1': 0, 'ledger_description_3': 'Expenses', 'amount_3': 0, 'ledger_description_4': 'Revenues', 'amount_4': 0, 'param_2': 0, 'nullif_1': 0, 'department_id_1': 102}
2025-02-23 20:16:39,054 - [cached since 756.8s ago] {'ledger_description_1': 'Revenues', 'amount_1': 0, 'ledger_description_2': 'Expenses', 'amount_2': 0, 'param_1': 0, 'ledger_description_3': 'Expenses', 'amount_3': 0, 'ledger_description_4': 'Revenues', 'amount_4': 0, 'param_2': 0, 'department_id_1': 102}
2025-02-23 20:16:39,059 - [cached since 756.8s ago] {'ledger_description_1': 'Expenses', 'amount_1': 0, 'param_1': 0, 'ledger_description_2': 'Revenues', 'amount_2': 0, 'param_2': 0, 'department_id_1': 102, 'param_3': 10}
2025-02-23 20:16:39,060 - [cached since 756.8s ago] {'ledger_description_1': 'Revenues', 'amount_1': 0, 'ledger_description_2': 'Expenses', 'amount_2': 0, 'param_1': 0, 'ledger_description_3': 'Expenses', 'amount_3': 0, 'ledger_description_4': 'Revenues', 'amount_4': 0, 'param_2': 0, 'department_id_1': 102}
2025-02-23 20:16:39,054 - [cached since 756.8s ago] {'ledger_description_1': 'Revenues', 'param_1': 0, 'ledger_description_2': 'Expenses', 'param_2': 0, 'department_id_1': 102, 'param_3': 5}
2025-02-23 20:16:39,156 - ROLLBACK
2025-02-23 20:16:39,161 - ROLLBACK
2025-02-23 20:16:39,166 - GET http://127.0.0.1:8000/api/net-profit/?department=102 - 0.14 ms
2025-02-23 20:16:39,168 - GET http://127.0.0.1:8000/api/revenue-expenses/?department=102 - 0.15 ms
2025-02-23 20:16:39,235 - ROLLBACK
2025-02-23 20:16:39,237 - GET http://127.0.0.1:8000/api/fund-table/?department=102 - 0.21 ms
2025-02-23 20:16:39,834 - ROLLBACK
2025-02-23 20:16:39,835 - ROLLBACK
2025-02-23 20:16:39,837 - GET http://127.0.0.1:8000/api/top-roi/?department=102 - 0.82 ms
2025-02-23 20:16:39,841 - GET http://127.0.0.1:8000/api/top-budget/?department=102 - 0.82 ms
2025-02-23 20:16:43,318 - BEGIN (implicit)
2025-02-23 20:16:43,318 - BEGIN (implicit)
2025-02-23 20:16:43,319 - BEGIN (implicit)
2025-02-23 20:16:43,321 - BEGIN (implicit)
2025-02-23 20:16:43,323 - BEGIN (implicit)
2025-02-23 20:16:43,324 - SELECT year(ledger.general_ledger_date) AS time, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_1)s END) - sum(CASE WHEN (ledger.ledger_description = %(ledger_description_3)s AND ledger.amount > %(amount_3)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_4)s AND ledger.amount < %(amount_4)s) THEN -ledger.amount ELSE %(param_2)s END) AS net_profit 
FROM ledger GROUP BY year(ledger.general_ledger_date) ORDER BY year(ledger.general_ledger_date)
2025-02-23 20:16:43,325 - SELECT department.department_name AS department_department_name, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s) THEN ledger.amount ELSE %(param_1)s END) - sum(CASE WHEN (ledger.ledger_description = %(ledger_description_2)s) THEN ledger.amount ELSE %(param_2)s END) AS roi 
FROM ledger INNER JOIN department ON ledger.department_id = department.department_id GROUP BY department.department_name ORDER BY sum(ledger.amount) DESC 
 LIMIT %(param_3)s
2025-02-23 20:16:43,327 - SELECT fund.fund_description AS fund_fund_description, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_1)s END) AS total_revenue, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_3)s AND ledger.amount > %(amount_3)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_4)s AND ledger.amount < %(amount_4)s) THEN -ledger.amount ELSE %(param_2)s END) AS total_expenses, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_1)s END) / nullif(sum(CASE WHEN (ledger.ledger_description = %(ledger_description_3)s AND ledger.amount > %(amount_3)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_4)s AND ledger.amount < %(amount_4)s) THEN -ledger.amount ELSE %(param_2)s END), %(nullif_1)s) AS ratio, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_1)s END) - sum(CASE WHEN (ledger.ledger_description = %(ledger_description_3)s AND ledger.amount > %(amount_3)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_4)s AND ledger.amount < %(amount_4)s) THEN -ledger.amount ELSE %(param_2)s END) AS roi 
FROM ledger INNER JOIN fund ON ledger.fund_id = fund.fund_id GROUP BY fund.fund_description ORDER BY roi DESC
2025-02-23 20:16:43,328 - SELECT year(ledger.general_ledger_date) AS time, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_1)s END) AS total_revenue, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_3)s AND ledger.amount > %(amount_3)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_4)s AND ledger.amount < %(amount_4)s) THEN -ledger.amount ELSE %(param_2)s END) AS total_expenses 
FROM ledger GROUP BY year(ledger.general_ledger_date) ORDER BY year(ledger.general_ledger_date)
2025-02-23 20:16:43,329 - SELECT department.department_name AS department_department_name, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount ELSE %(param_1)s END + CASE WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_2)s END) AS total_expenditure 
FROM ledger INNER JOIN department ON ledger.department_id = department.department_id GROUP BY department.department_name ORDER BY sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount ELSE %(param_1)s END + CASE WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_2)s END) DESC 
 LIMIT %(param_3)s
2025-02-23 20:16:43,329 - [cached since 898.6s ago] {'ledger_description_1': 'Revenues', 'amount_1': 0, 'ledger_description_2': 'Expenses', 'amount_2': 0, 'param_1': 0, 'ledger_description_3': 'Expenses', 'amount_3': 0, 'ledger_description_4': 'Revenues', 'amount_4': 0, 'param_2': 0}
2025-02-23 20:16:43,330 - [cached since 898.6s ago] {'ledger_description_1': 'Revenues', 'param_1': 0, 'ledger_description_2': 'Expenses', 'param_2': 0, 'param_3': 5}
2025-02-23 20:16:43,330 - [cached since 898.6s ago] {'ledger_description_1': 'Revenues', 'amount_1': 0, 'ledger_description_2': 'Expenses', 'amount_2': 0, 'param_1': 0, 'ledger_description_3': 'Expenses', 'amount_3': 0, 'ledger_description_4': 'Revenues', 'amount_4': 0, 'param_2': 0, 'nullif_1': 0}
2025-02-23 20:16:43,331 - [cached since 898.6s ago] {'ledger_description_1': 'Revenues', 'amount_1': 0, 'ledger_description_2': 'Expenses', 'amount_2': 0, 'param_1': 0, 'ledger_description_3': 'Expenses', 'amount_3': 0, 'ledger_description_4': 'Revenues', 'amount_4': 0, 'param_2': 0}
2025-02-23 20:16:43,332 - [cached since 898.6s ago] {'ledger_description_1': 'Expenses', 'amount_1': 0, 'param_1': 0, 'ledger_description_2': 'Revenues', 'amount_2': 0, 'param_2': 0, 'param_3': 10}
2025-02-23 20:16:45,512 - ROLLBACK
2025-02-23 20:16:45,514 - GET http://127.0.0.1:8000/api/net-profit/ - 2.20 ms
2025-02-23 20:16:45,539 - ROLLBACK
2025-02-23 20:16:45,542 - GET http://127.0.0.1:8000/api/revenue-expenses/ - 2.23 ms
2025-02-23 20:16:46,520 - ROLLBACK
2025-02-23 20:16:46,521 - GET http://127.0.0.1:8000/api/top-roi/ - 3.21 ms
2025-02-23 20:16:46,648 - ROLLBACK
2025-02-23 20:16:46,650 - GET http://127.0.0.1:8000/api/top-budget/ - 3.34 ms
2025-02-23 20:16:47,372 - ROLLBACK
2025-02-23 20:16:47,374 - GET http://127.0.0.1:8000/api/fund-table/ - 4.06 ms
2025-02-23 20:16:51,378 - BEGIN (implicit)
2025-02-23 20:16:51,380 - BEGIN (implicit)
2025-02-23 20:16:51,383 - BEGIN (implicit)
2025-02-23 20:16:51,385 - SELECT year(ledger.general_ledger_date) AS time, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_1)s END) AS total_revenue, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_3)s AND ledger.amount > %(amount_3)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_4)s AND ledger.amount < %(amount_4)s) THEN -ledger.amount ELSE %(param_2)s END) AS total_expenses 
FROM ledger 
WHERE ledger.department_id = %(department_id_1)s GROUP BY year(ledger.general_ledger_date) ORDER BY year(ledger.general_ledger_date)
2025-02-23 20:16:51,386 - SELECT year(ledger.general_ledger_date) AS time, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_1)s END) - sum(CASE WHEN (ledger.ledger_description = %(ledger_description_3)s AND ledger.amount > %(amount_3)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_4)s AND ledger.amount < %(amount_4)s) THEN -ledger.amount ELSE %(param_2)s END) AS net_profit 
FROM ledger 
WHERE ledger.department_id = %(department_id_1)s GROUP BY year(ledger.general_ledger_date) ORDER BY year(ledger.general_ledger_date)
2025-02-23 20:16:51,395 - [cached since 769.2s ago] {'ledger_description_1': 'Revenues', 'amount_1': 0, 'ledger_description_2': 'Expenses', 'amount_2': 0, 'param_1': 0, 'ledger_description_3': 'Expenses', 'amount_3': 0, 'ledger_description_4': 'Revenues', 'amount_4': 0, 'param_2': 0, 'department_id_1': 109}
2025-02-23 20:16:51,392 - [cached since 769.2s ago] {'ledger_description_1': 'Revenues', 'amount_1': 0, 'ledger_description_2': 'Expenses', 'amount_2': 0, 'param_1': 0, 'ledger_description_3': 'Expenses', 'amount_3': 0, 'ledger_description_4': 'Revenues', 'amount_4': 0, 'param_2': 0, 'department_id_1': 109}
2025-02-23 20:16:51,391 - SELECT fund.fund_description AS fund_fund_description, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_1)s END) AS total_revenue, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_3)s AND ledger.amount > %(amount_3)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_4)s AND ledger.amount < %(amount_4)s) THEN -ledger.amount ELSE %(param_2)s END) AS total_expenses, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_1)s END) / nullif(sum(CASE WHEN (ledger.ledger_description = %(ledger_description_3)s AND ledger.amount > %(amount_3)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_4)s AND ledger.amount < %(amount_4)s) THEN -ledger.amount ELSE %(param_2)s END), %(nullif_1)s) AS ratio, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_1)s END) - sum(CASE WHEN (ledger.ledger_description = %(ledger_description_3)s AND ledger.amount > %(amount_3)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_4)s AND ledger.amount < %(amount_4)s) THEN -ledger.amount ELSE %(param_2)s END) AS roi 
FROM ledger INNER JOIN fund ON ledger.fund_id = fund.fund_id 
WHERE ledger.department_id = %(department_id_1)s GROUP BY fund.fund_description ORDER BY roi DESC
2025-02-23 20:16:51,401 - BEGIN (implicit)
2025-02-23 20:16:51,403 - BEGIN (implicit)
2025-02-23 20:16:51,408 - [cached since 12.35s ago] {'ledger_description_1': 'Revenues', 'amount_1': 0, 'ledger_description_2': 'Expenses', 'amount_2': 0, 'param_1': 0, 'ledger_description_3': 'Expenses', 'amount_3': 0, 'ledger_description_4': 'Revenues', 'amount_4': 0, 'param_2': 0, 'nullif_1': 0, 'department_id_1': 109}
2025-02-23 20:16:51,409 - SELECT cost_center.cost_center_description AS cost_center_cost_center_description, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount ELSE %(param_1)s END + CASE WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_2)s END) AS total_expenditure 
FROM ledger INNER JOIN cost_center ON ledger.cost_center_id = cost_center.cost_center_id 
WHERE ledger.department_id = %(department_id_1)s GROUP BY cost_center.cost_center_description ORDER BY sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount ELSE %(param_1)s END + CASE WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_2)s END) DESC 
 LIMIT %(param_3)s
2025-02-23 20:16:51,410 - SELECT cost_center.cost_center_description AS cost_center_cost_center_description, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s) THEN ledger.amount ELSE %(param_1)s END) - sum(CASE WHEN (ledger.ledger_description = %(ledger_description_2)s) THEN ledger.amount ELSE %(param_2)s END) AS roi 
FROM ledger INNER JOIN cost_center ON ledger.cost_center_id = cost_center.cost_center_id 
WHERE ledger.department_id = %(department_id_1)s GROUP BY cost_center.cost_center_description ORDER BY sum(ledger.amount) DESC 
 LIMIT %(param_3)s
2025-02-23 20:16:51,411 - [cached since 769.2s ago] {'ledger_description_1': 'Expenses', 'amount_1': 0, 'param_1': 0, 'ledger_description_2': 'Revenues', 'amount_2': 0, 'param_2': 0, 'department_id_1': 109, 'param_3': 10}
2025-02-23 20:16:51,412 - [cached since 769.2s ago] {'ledger_description_1': 'Revenues', 'param_1': 0, 'ledger_description_2': 'Expenses', 'param_2': 0, 'department_id_1': 109, 'param_3': 5}
2025-02-23 20:16:52,019 - ROLLBACK
2025-02-23 20:16:52,025 - GET http://127.0.0.1:8000/api/fund-table/?department=109 - 0.66 ms
2025-02-23 20:16:52,640 - ROLLBACK
2025-02-23 20:16:52,640 - ROLLBACK
2025-02-23 20:16:52,642 - GET http://127.0.0.1:8000/api/net-profit/?department=109 - 1.28 ms
2025-02-23 20:16:52,643 - GET http://127.0.0.1:8000/api/revenue-expenses/?department=109 - 1.28 ms
2025-02-23 20:16:54,493 - ROLLBACK
2025-02-23 20:16:54,493 - ROLLBACK
2025-02-23 20:16:54,494 - GET http://127.0.0.1:8000/api/top-budget/?department=109 - 3.12 ms
2025-02-23 20:16:54,495 - GET http://127.0.0.1:8000/api/top-roi/?department=109 - 3.12 ms
2025-02-23 20:16:59,302 - BEGIN (implicit)
2025-02-23 20:16:59,307 - BEGIN (implicit)
2025-02-23 20:16:59,309 - BEGIN (implicit)
2025-02-23 20:16:59,318 - SELECT fund.fund_description AS fund_fund_description, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_1)s END) AS total_revenue, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_3)s AND ledger.amount > %(amount_3)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_4)s AND ledger.amount < %(amount_4)s) THEN -ledger.amount ELSE %(param_2)s END) AS total_expenses, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_1)s END) / nullif(sum(CASE WHEN (ledger.ledger_description = %(ledger_description_3)s AND ledger.amount > %(amount_3)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_4)s AND ledger.amount < %(amount_4)s) THEN -ledger.amount ELSE %(param_2)s END), %(nullif_1)s) AS ratio, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_1)s END) - sum(CASE WHEN (ledger.ledger_description = %(ledger_description_3)s AND ledger.amount > %(amount_3)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_4)s AND ledger.amount < %(amount_4)s) THEN -ledger.amount ELSE %(param_2)s END) AS roi 
FROM ledger INNER JOIN fund ON ledger.fund_id = fund.fund_id GROUP BY fund.fund_description ORDER BY roi DESC
2025-02-23 20:16:59,321 - [cached since 914.6s ago] {'ledger_description_1': 'Revenues', 'amount_1': 0, 'ledger_description_2': 'Expenses', 'amount_2': 0, 'param_1': 0, 'ledger_description_3': 'Expenses', 'amount_3': 0, 'ledger_description_4': 'Revenues', 'amount_4': 0, 'param_2': 0, 'nullif_1': 0}
2025-02-23 20:16:59,313 - SELECT department.department_name AS department_department_name, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s) THEN ledger.amount ELSE %(param_1)s END) - sum(CASE WHEN (ledger.ledger_description = %(ledger_description_2)s) THEN ledger.amount ELSE %(param_2)s END) AS roi 
FROM ledger INNER JOIN department ON ledger.department_id = department.department_id GROUP BY department.department_name ORDER BY sum(ledger.amount) DESC 
 LIMIT %(param_3)s
2025-02-23 20:16:59,317 - SELECT year(ledger.general_ledger_date) AS time, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_1)s END) AS total_revenue, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_3)s AND ledger.amount > %(amount_3)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_4)s AND ledger.amount < %(amount_4)s) THEN -ledger.amount ELSE %(param_2)s END) AS total_expenses 
FROM ledger GROUP BY year(ledger.general_ledger_date) ORDER BY year(ledger.general_ledger_date)
2025-02-23 20:16:59,327 - [cached since 914.6s ago] {'ledger_description_1': 'Revenues', 'amount_1': 0, 'ledger_description_2': 'Expenses', 'amount_2': 0, 'param_1': 0, 'ledger_description_3': 'Expenses', 'amount_3': 0, 'ledger_description_4': 'Revenues', 'amount_4': 0, 'param_2': 0}
2025-02-23 20:16:59,312 - BEGIN (implicit)
2025-02-23 20:16:59,316 - BEGIN (implicit)
2025-02-23 20:16:59,325 - [cached since 914.6s ago] {'ledger_description_1': 'Revenues', 'param_1': 0, 'ledger_description_2': 'Expenses', 'param_2': 0, 'param_3': 5}
2025-02-23 20:16:59,333 - SELECT department.department_name AS department_department_name, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount ELSE %(param_1)s END + CASE WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_2)s END) AS total_expenditure 
FROM ledger INNER JOIN department ON ledger.department_id = department.department_id GROUP BY department.department_name ORDER BY sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount ELSE %(param_1)s END + CASE WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_2)s END) DESC 
 LIMIT %(param_3)s
2025-02-23 20:16:59,335 - SELECT year(ledger.general_ledger_date) AS time, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_1)s END) - sum(CASE WHEN (ledger.ledger_description = %(ledger_description_3)s AND ledger.amount > %(amount_3)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_4)s AND ledger.amount < %(amount_4)s) THEN -ledger.amount ELSE %(param_2)s END) AS net_profit 
FROM ledger GROUP BY year(ledger.general_ledger_date) ORDER BY year(ledger.general_ledger_date)
2025-02-23 20:16:59,339 - [cached since 914.6s ago] {'ledger_description_1': 'Expenses', 'amount_1': 0, 'param_1': 0, 'ledger_description_2': 'Revenues', 'amount_2': 0, 'param_2': 0, 'param_3': 10}
2025-02-23 20:16:59,351 - [cached since 914.6s ago] {'ledger_description_1': 'Revenues', 'amount_1': 0, 'ledger_description_2': 'Expenses', 'amount_2': 0, 'param_1': 0, 'ledger_description_3': 'Expenses', 'amount_3': 0, 'ledger_description_4': 'Revenues', 'amount_4': 0, 'param_2': 0}
2025-02-23 20:17:01,892 - ROLLBACK
2025-02-23 20:17:01,896 - GET http://127.0.0.1:8000/api/net-profit/ - 2.60 ms
2025-02-23 20:17:01,924 - ROLLBACK
2025-02-23 20:17:01,928 - GET http://127.0.0.1:8000/api/revenue-expenses/ - 2.63 ms
2025-02-23 20:17:03,033 - ROLLBACK
2025-02-23 20:17:03,034 - GET http://127.0.0.1:8000/api/top-roi/ - 3.74 ms
2025-02-23 20:17:03,174 - ROLLBACK
2025-02-23 20:17:03,175 - GET http://127.0.0.1:8000/api/top-budget/ - 3.88 ms
2025-02-23 20:17:03,911 - ROLLBACK
2025-02-23 20:17:03,912 - GET http://127.0.0.1:8000/api/fund-table/ - 4.62 ms
2025-02-23 23:29:27,271 - GET http://127.0.0.1:8000/api/initialise/ - 0.00 ms
2025-02-23 23:29:27,518 - GET http://127.0.0.1:8000/api/initialise/ - 0.01 ms
2025-02-23 23:29:27,543 - SELECT DATABASE()
2025-02-23 23:29:27,543 - [raw sql] {}
2025-02-23 23:29:27,548 - SELECT @@sql_mode
2025-02-23 23:29:27,548 - [raw sql] {}
2025-02-23 23:29:27,550 - SELECT @@lower_case_table_names
2025-02-23 23:29:27,551 - [raw sql] {}
2025-02-23 23:29:27,553 - BEGIN (implicit)
2025-02-23 23:29:27,593 - SELECT department.department_name AS department_department_name, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s) THEN ledger.amount ELSE %(param_1)s END) - sum(CASE WHEN (ledger.ledger_description = %(ledger_description_2)s) THEN ledger.amount ELSE %(param_2)s END) AS roi 
FROM ledger INNER JOIN department ON ledger.department_id = department.department_id GROUP BY department.department_name ORDER BY sum(ledger.amount) DESC 
 LIMIT %(param_3)s
2025-02-23 23:29:27,594 - BEGIN (implicit)
2025-02-23 23:29:27,594 - BEGIN (implicit)
2025-02-23 23:29:27,596 - [generated in 0.00209s] {'ledger_description_1': 'Revenues', 'param_1': 0, 'ledger_description_2': 'Expenses', 'param_2': 0, 'param_3': 5}
2025-02-23 23:29:27,596 - BEGIN (implicit)
2025-02-23 23:29:27,600 - SELECT year(ledger.general_ledger_date) AS time, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_1)s END) - sum(CASE WHEN (ledger.ledger_description = %(ledger_description_3)s AND ledger.amount > %(amount_3)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_4)s AND ledger.amount < %(amount_4)s) THEN -ledger.amount ELSE %(param_2)s END) AS net_profit 
FROM ledger GROUP BY year(ledger.general_ledger_date) ORDER BY year(ledger.general_ledger_date)
2025-02-23 23:29:27,602 - BEGIN (implicit)
2025-02-23 23:29:27,606 - SELECT year(ledger.general_ledger_date) AS time, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_1)s END) AS total_revenue, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_3)s AND ledger.amount > %(amount_3)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_4)s AND ledger.amount < %(amount_4)s) THEN -ledger.amount ELSE %(param_2)s END) AS total_expenses 
FROM ledger GROUP BY year(ledger.general_ledger_date) ORDER BY year(ledger.general_ledger_date)
2025-02-23 23:29:27,616 - SELECT fund.fund_description AS fund_fund_description, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_1)s END) AS total_revenue, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_3)s AND ledger.amount > %(amount_3)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_4)s AND ledger.amount < %(amount_4)s) THEN -ledger.amount ELSE %(param_2)s END) AS total_expenses, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_1)s END) / nullif(sum(CASE WHEN (ledger.ledger_description = %(ledger_description_3)s AND ledger.amount > %(amount_3)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_4)s AND ledger.amount < %(amount_4)s) THEN -ledger.amount ELSE %(param_2)s END), %(nullif_1)s) AS ratio, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_1)s END) - sum(CASE WHEN (ledger.ledger_description = %(ledger_description_3)s AND ledger.amount > %(amount_3)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_4)s AND ledger.amount < %(amount_4)s) THEN -ledger.amount ELSE %(param_2)s END) AS roi 
FROM ledger INNER JOIN fund ON ledger.fund_id = fund.fund_id GROUP BY fund.fund_description ORDER BY roi DESC
2025-02-23 23:29:27,618 - [generated in 0.01709s] {'ledger_description_1': 'Revenues', 'amount_1': 0, 'ledger_description_2': 'Expenses', 'amount_2': 0, 'param_1': 0, 'ledger_description_3': 'Expenses', 'amount_3': 0, 'ledger_description_4': 'Revenues', 'amount_4': 0, 'param_2': 0}
2025-02-23 23:29:27,627 - SELECT department.department_name AS department_department_name, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount ELSE %(param_1)s END + CASE WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_2)s END) AS total_expenditure 
FROM ledger INNER JOIN department ON ledger.department_id = department.department_id GROUP BY department.department_name ORDER BY sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount ELSE %(param_1)s END + CASE WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_2)s END) DESC 
 LIMIT %(param_3)s
2025-02-23 23:29:27,630 - [generated in 0.02460s] {'ledger_description_1': 'Revenues', 'amount_1': 0, 'ledger_description_2': 'Expenses', 'amount_2': 0, 'param_1': 0, 'ledger_description_3': 'Expenses', 'amount_3': 0, 'ledger_description_4': 'Revenues', 'amount_4': 0, 'param_2': 0}
2025-02-23 23:29:27,632 - [generated in 0.01466s] {'ledger_description_1': 'Revenues', 'amount_1': 0, 'ledger_description_2': 'Expenses', 'amount_2': 0, 'param_1': 0, 'ledger_description_3': 'Expenses', 'amount_3': 0, 'ledger_description_4': 'Revenues', 'amount_4': 0, 'param_2': 0, 'nullif_1': 0}
2025-02-23 23:29:27,635 - [generated in 0.00710s] {'ledger_description_1': 'Expenses', 'amount_1': 0, 'param_1': 0, 'ledger_description_2': 'Revenues', 'amount_2': 0, 'param_2': 0, 'param_3': 10}
2025-02-23 23:29:30,018 - BEGIN (implicit)
2025-02-23 23:29:30,026 - SELECT department.department_id AS department_department_id, department.department_name AS department_department_name 
FROM department
2025-02-23 23:29:30,027 - [generated in 0.00079s] {}
2025-02-23 23:29:30,037 - SELECT min(ledger.general_ledger_date) AS min_1 
FROM ledger
2025-02-23 23:29:30,052 - [generated in 0.01523s] {}
2025-02-23 23:29:30,090 - SELECT max(ledger.general_ledger_date) AS max_1 
FROM ledger
2025-02-23 23:29:30,093 - [generated in 0.00147s] {}
2025-02-23 23:29:30,096 - ROLLBACK
2025-02-23 23:29:30,099 - GET http://127.0.0.1:8000/api/initialise - 0.13 ms
2025-02-23 23:29:30,138 - BEGIN (implicit)
2025-02-23 23:29:30,139 - SELECT department.department_id AS department_department_id, department.department_name AS department_department_name 
FROM department
2025-02-23 23:29:30,139 - [cached since 0.1137s ago] {}
2025-02-23 23:29:30,162 - SELECT min(ledger.general_ledger_date) AS min_1 
FROM ledger
2025-02-23 23:29:30,162 - [cached since 0.1246s ago] {}
2025-02-23 23:29:30,164 - SELECT max(ledger.general_ledger_date) AS max_1 
FROM ledger
2025-02-23 23:29:30,165 - [cached since 0.07406s ago] {}
2025-02-23 23:29:30,169 - ROLLBACK
2025-02-23 23:29:30,178 - GET http://127.0.0.1:8000/api/initialise - 0.05 ms
2025-02-23 23:29:30,952 - ROLLBACK
2025-02-23 23:29:30,954 - GET http://127.0.0.1:8000/api/revenue-expenses/ - 3.45 ms
2025-02-23 23:29:30,966 - ROLLBACK
2025-02-23 23:29:30,969 - BEGIN (implicit)
2025-02-23 23:29:30,971 - SELECT year(ledger.general_ledger_date) AS time, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_1)s END) AS total_revenue, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_3)s AND ledger.amount > %(amount_3)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_4)s AND ledger.amount < %(amount_4)s) THEN -ledger.amount ELSE %(param_2)s END) AS total_expenses 
FROM ledger GROUP BY year(ledger.general_ledger_date) ORDER BY year(ledger.general_ledger_date)
2025-02-23 23:29:30,972 - [cached since 3.366s ago] {'ledger_description_1': 'Revenues', 'amount_1': 0, 'ledger_description_2': 'Expenses', 'amount_2': 0, 'param_1': 0, 'ledger_description_3': 'Expenses', 'amount_3': 0, 'ledger_description_4': 'Revenues', 'amount_4': 0, 'param_2': 0}
2025-02-23 23:29:30,973 - GET http://127.0.0.1:8000/api/net-profit/ - 3.47 ms
2025-02-23 23:29:30,980 - BEGIN (implicit)
2025-02-23 23:29:30,992 - SELECT year(ledger.general_ledger_date) AS time, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_1)s END) - sum(CASE WHEN (ledger.ledger_description = %(ledger_description_3)s AND ledger.amount > %(amount_3)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_4)s AND ledger.amount < %(amount_4)s) THEN -ledger.amount ELSE %(param_2)s END) AS net_profit 
FROM ledger GROUP BY year(ledger.general_ledger_date) ORDER BY year(ledger.general_ledger_date)
2025-02-23 23:29:31,017 - [cached since 3.416s ago] {'ledger_description_1': 'Revenues', 'amount_1': 0, 'ledger_description_2': 'Expenses', 'amount_2': 0, 'param_1': 0, 'ledger_description_3': 'Expenses', 'amount_3': 0, 'ledger_description_4': 'Revenues', 'amount_4': 0, 'param_2': 0}
2025-02-23 23:29:32,429 - ROLLBACK
2025-02-23 23:29:32,431 - GET http://127.0.0.1:8000/api/top-roi/ - 4.95 ms
2025-02-23 23:29:32,444 - BEGIN (implicit)
2025-02-23 23:29:32,446 - SELECT department.department_name AS department_department_name, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s) THEN ledger.amount ELSE %(param_1)s END) - sum(CASE WHEN (ledger.ledger_description = %(ledger_description_2)s) THEN ledger.amount ELSE %(param_2)s END) AS roi 
FROM ledger INNER JOIN department ON ledger.department_id = department.department_id GROUP BY department.department_name ORDER BY sum(ledger.amount) DESC 
 LIMIT %(param_3)s
2025-02-23 23:29:32,446 - [cached since 4.853s ago] {'ledger_description_1': 'Revenues', 'param_1': 0, 'ledger_description_2': 'Expenses', 'param_2': 0, 'param_3': 5}
2025-02-23 23:29:32,931 - ROLLBACK
2025-02-23 23:29:32,934 - GET http://127.0.0.1:8000/api/top-budget/ - 5.44 ms
2025-02-23 23:29:32,942 - BEGIN (implicit)
2025-02-23 23:29:32,944 - SELECT department.department_name AS department_department_name, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount ELSE %(param_1)s END + CASE WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_2)s END) AS total_expenditure 
FROM ledger INNER JOIN department ON ledger.department_id = department.department_id GROUP BY department.department_name ORDER BY sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount ELSE %(param_1)s END + CASE WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_2)s END) DESC 
 LIMIT %(param_3)s
2025-02-23 23:29:32,946 - [cached since 5.318s ago] {'ledger_description_1': 'Expenses', 'amount_1': 0, 'param_1': 0, 'ledger_description_2': 'Revenues', 'amount_2': 0, 'param_2': 0, 'param_3': 10}
2025-02-23 23:29:33,679 - ROLLBACK
2025-02-23 23:29:33,683 - GET http://127.0.0.1:8000/api/revenue-expenses/ - 2.72 ms
2025-02-23 23:29:33,712 - ROLLBACK
2025-02-23 23:29:33,714 - GET http://127.0.0.1:8000/api/net-profit/ - 2.74 ms
2025-02-23 23:29:34,368 - ROLLBACK
2025-02-23 23:29:34,369 - GET http://127.0.0.1:8000/api/fund-table/ - 6.87 ms
2025-02-23 23:29:34,376 - BEGIN (implicit)
2025-02-23 23:29:34,378 - SELECT fund.fund_description AS fund_fund_description, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_1)s END) AS total_revenue, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_3)s AND ledger.amount > %(amount_3)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_4)s AND ledger.amount < %(amount_4)s) THEN -ledger.amount ELSE %(param_2)s END) AS total_expenses, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_1)s END) / nullif(sum(CASE WHEN (ledger.ledger_description = %(ledger_description_3)s AND ledger.amount > %(amount_3)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_4)s AND ledger.amount < %(amount_4)s) THEN -ledger.amount ELSE %(param_2)s END), %(nullif_1)s) AS ratio, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_1)s END) - sum(CASE WHEN (ledger.ledger_description = %(ledger_description_3)s AND ledger.amount > %(amount_3)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_4)s AND ledger.amount < %(amount_4)s) THEN -ledger.amount ELSE %(param_2)s END) AS roi 
FROM ledger INNER JOIN fund ON ledger.fund_id = fund.fund_id GROUP BY fund.fund_description ORDER BY roi DESC
2025-02-23 23:29:34,379 - [cached since 6.762s ago] {'ledger_description_1': 'Revenues', 'amount_1': 0, 'ledger_description_2': 'Expenses', 'amount_2': 0, 'param_1': 0, 'ledger_description_3': 'Expenses', 'amount_3': 0, 'ledger_description_4': 'Revenues', 'amount_4': 0, 'param_2': 0, 'nullif_1': 0}
2025-02-23 23:29:36,148 - ROLLBACK
2025-02-23 23:29:36,151 - GET http://127.0.0.1:8000/api/top-roi/ - 3.71 ms
2025-02-23 23:29:36,567 - ROLLBACK
2025-02-23 23:29:36,568 - GET http://127.0.0.1:8000/api/top-budget/ - 3.63 ms
2025-02-23 23:29:38,490 - ROLLBACK
2025-02-23 23:29:38,493 - GET http://127.0.0.1:8000/api/fund-table/ - 4.12 ms
2025-02-23 23:29:39,929 - GET http://127.0.0.1:8000/api/initialise/ - 0.00 ms
2025-02-23 23:29:40,097 - BEGIN (implicit)
2025-02-23 23:29:40,098 - BEGIN (implicit)
2025-02-23 23:29:40,100 - BEGIN (implicit)
2025-02-23 23:29:40,103 - SELECT department.department_name AS department_department_name, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s) THEN ledger.amount ELSE %(param_1)s END) - sum(CASE WHEN (ledger.ledger_description = %(ledger_description_2)s) THEN ledger.amount ELSE %(param_2)s END) AS roi 
FROM ledger INNER JOIN department ON ledger.department_id = department.department_id GROUP BY department.department_name ORDER BY sum(ledger.amount) DESC 
 LIMIT %(param_3)s
2025-02-23 23:29:40,116 - GET http://127.0.0.1:8000/api/initialise/ - 0.01 ms
2025-02-23 23:29:40,106 - SELECT department.department_name AS department_department_name, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount ELSE %(param_1)s END + CASE WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_2)s END) AS total_expenditure 
FROM ledger INNER JOIN department ON ledger.department_id = department.department_id GROUP BY department.department_name ORDER BY sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount ELSE %(param_1)s END + CASE WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_2)s END) DESC 
 LIMIT %(param_3)s
2025-02-23 23:29:40,111 - SELECT year(ledger.general_ledger_date) AS time, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_1)s END) AS total_revenue, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_3)s AND ledger.amount > %(amount_3)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_4)s AND ledger.amount < %(amount_4)s) THEN -ledger.amount ELSE %(param_2)s END) AS total_expenses 
FROM ledger GROUP BY year(ledger.general_ledger_date) ORDER BY year(ledger.general_ledger_date)
2025-02-23 23:29:40,113 - BEGIN (implicit)
2025-02-23 23:29:40,116 - BEGIN (implicit)
2025-02-23 23:29:40,116 - [cached since 12.52s ago] {'ledger_description_1': 'Revenues', 'param_1': 0, 'ledger_description_2': 'Expenses', 'param_2': 0, 'param_3': 5}
2025-02-23 23:29:40,122 - [cached since 12.49s ago] {'ledger_description_1': 'Expenses', 'amount_1': 0, 'param_1': 0, 'ledger_description_2': 'Revenues', 'amount_2': 0, 'param_2': 0, 'param_3': 10}
2025-02-23 23:29:40,123 - [cached since 12.52s ago] {'ledger_description_1': 'Revenues', 'amount_1': 0, 'ledger_description_2': 'Expenses', 'amount_2': 0, 'param_1': 0, 'ledger_description_3': 'Expenses', 'amount_3': 0, 'ledger_description_4': 'Revenues', 'amount_4': 0, 'param_2': 0}
2025-02-23 23:29:40,124 - SELECT year(ledger.general_ledger_date) AS time, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_1)s END) - sum(CASE WHEN (ledger.ledger_description = %(ledger_description_3)s AND ledger.amount > %(amount_3)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_4)s AND ledger.amount < %(amount_4)s) THEN -ledger.amount ELSE %(param_2)s END) AS net_profit 
FROM ledger GROUP BY year(ledger.general_ledger_date) ORDER BY year(ledger.general_ledger_date)
2025-02-23 23:29:40,126 - SELECT fund.fund_description AS fund_fund_description, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_1)s END) AS total_revenue, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_3)s AND ledger.amount > %(amount_3)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_4)s AND ledger.amount < %(amount_4)s) THEN -ledger.amount ELSE %(param_2)s END) AS total_expenses, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_1)s END) / nullif(sum(CASE WHEN (ledger.ledger_description = %(ledger_description_3)s AND ledger.amount > %(amount_3)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_4)s AND ledger.amount < %(amount_4)s) THEN -ledger.amount ELSE %(param_2)s END), %(nullif_1)s) AS ratio, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_1)s END) - sum(CASE WHEN (ledger.ledger_description = %(ledger_description_3)s AND ledger.amount > %(amount_3)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_4)s AND ledger.amount < %(amount_4)s) THEN -ledger.amount ELSE %(param_2)s END) AS roi 
FROM ledger INNER JOIN fund ON ledger.fund_id = fund.fund_id GROUP BY fund.fund_description ORDER BY roi DESC
2025-02-23 23:29:40,127 - [cached since 12.53s ago] {'ledger_description_1': 'Revenues', 'amount_1': 0, 'ledger_description_2': 'Expenses', 'amount_2': 0, 'param_1': 0, 'ledger_description_3': 'Expenses', 'amount_3': 0, 'ledger_description_4': 'Revenues', 'amount_4': 0, 'param_2': 0}
2025-02-23 23:29:40,129 - [cached since 12.51s ago] {'ledger_description_1': 'Revenues', 'amount_1': 0, 'ledger_description_2': 'Expenses', 'amount_2': 0, 'param_1': 0, 'ledger_description_3': 'Expenses', 'amount_3': 0, 'ledger_description_4': 'Revenues', 'amount_4': 0, 'param_2': 0, 'nullif_1': 0}
2025-02-23 23:29:40,897 - BEGIN (implicit)
2025-02-23 23:29:40,898 - SELECT department.department_id AS department_department_id, department.department_name AS department_department_name 
FROM department
2025-02-23 23:29:40,899 - [cached since 10.87s ago] {}
2025-02-23 23:29:40,902 - SELECT min(ledger.general_ledger_date) AS min_1 
FROM ledger
2025-02-23 23:29:40,903 - [cached since 10.87s ago] {}
2025-02-23 23:29:40,905 - SELECT max(ledger.general_ledger_date) AS max_1 
FROM ledger
2025-02-23 23:29:40,906 - [cached since 10.82s ago] {}
2025-02-23 23:29:40,910 - ROLLBACK
2025-02-23 23:29:40,913 - GET http://127.0.0.1:8000/api/initialise - 0.03 ms
2025-02-23 23:29:40,919 - BEGIN (implicit)
2025-02-23 23:29:40,920 - SELECT department.department_id AS department_department_id, department.department_name AS department_department_name 
FROM department
2025-02-23 23:29:40,921 - [cached since 10.89s ago] {}
2025-02-23 23:29:40,925 - SELECT min(ledger.general_ledger_date) AS min_1 
FROM ledger
2025-02-23 23:29:40,926 - [cached since 10.89s ago] {}
2025-02-23 23:29:40,930 - SELECT max(ledger.general_ledger_date) AS max_1 
FROM ledger
2025-02-23 23:29:40,931 - [cached since 10.84s ago] {}
2025-02-23 23:29:40,935 - ROLLBACK
2025-02-23 23:29:40,937 - GET http://127.0.0.1:8000/api/initialise - 0.02 ms
2025-02-23 23:29:42,740 - ROLLBACK
2025-02-23 23:29:42,742 - GET http://127.0.0.1:8000/api/revenue-expenses/ - 2.66 ms
2025-02-23 23:29:42,745 - ROLLBACK
2025-02-23 23:29:42,750 - GET http://127.0.0.1:8000/api/net-profit/ - 2.65 ms
2025-02-23 23:29:42,753 - BEGIN (implicit)
2025-02-23 23:29:42,756 - SELECT year(ledger.general_ledger_date) AS time, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_1)s END) AS total_revenue, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_3)s AND ledger.amount > %(amount_3)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_4)s AND ledger.amount < %(amount_4)s) THEN -ledger.amount ELSE %(param_2)s END) AS total_expenses 
FROM ledger GROUP BY year(ledger.general_ledger_date) ORDER BY year(ledger.general_ledger_date)
2025-02-23 23:29:42,758 - [cached since 15.15s ago] {'ledger_description_1': 'Revenues', 'amount_1': 0, 'ledger_description_2': 'Expenses', 'amount_2': 0, 'param_1': 0, 'ledger_description_3': 'Expenses', 'amount_3': 0, 'ledger_description_4': 'Revenues', 'amount_4': 0, 'param_2': 0}
2025-02-23 23:29:42,762 - BEGIN (implicit)
2025-02-23 23:29:42,764 - SELECT year(ledger.general_ledger_date) AS time, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_1)s END) - sum(CASE WHEN (ledger.ledger_description = %(ledger_description_3)s AND ledger.amount > %(amount_3)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_4)s AND ledger.amount < %(amount_4)s) THEN -ledger.amount ELSE %(param_2)s END) AS net_profit 
FROM ledger GROUP BY year(ledger.general_ledger_date) ORDER BY year(ledger.general_ledger_date)
2025-02-23 23:29:42,764 - [cached since 15.16s ago] {'ledger_description_1': 'Revenues', 'amount_1': 0, 'ledger_description_2': 'Expenses', 'amount_2': 0, 'param_1': 0, 'ledger_description_3': 'Expenses', 'amount_3': 0, 'ledger_description_4': 'Revenues', 'amount_4': 0, 'param_2': 0}
2025-02-23 23:29:43,920 - ROLLBACK
2025-02-23 23:29:43,922 - GET http://127.0.0.1:8000/api/top-roi/ - 3.84 ms
2025-02-23 23:29:43,928 - BEGIN (implicit)
2025-02-23 23:29:43,929 - SELECT department.department_name AS department_department_name, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s) THEN ledger.amount ELSE %(param_1)s END) - sum(CASE WHEN (ledger.ledger_description = %(ledger_description_2)s) THEN ledger.amount ELSE %(param_2)s END) AS roi 
FROM ledger INNER JOIN department ON ledger.department_id = department.department_id GROUP BY department.department_name ORDER BY sum(ledger.amount) DESC 
 LIMIT %(param_3)s
2025-02-23 23:29:43,930 - [cached since 16.34s ago] {'ledger_description_1': 'Revenues', 'param_1': 0, 'ledger_description_2': 'Expenses', 'param_2': 0, 'param_3': 5}
2025-02-23 23:29:44,360 - ROLLBACK
2025-02-23 23:29:44,362 - GET http://127.0.0.1:8000/api/top-budget/ - 4.28 ms
2025-02-23 23:29:44,368 - BEGIN (implicit)
2025-02-23 23:29:44,369 - SELECT department.department_name AS department_department_name, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount ELSE %(param_1)s END + CASE WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_2)s END) AS total_expenditure 
FROM ledger INNER JOIN department ON ledger.department_id = department.department_id GROUP BY department.department_name ORDER BY sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount ELSE %(param_1)s END + CASE WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_2)s END) DESC 
 LIMIT %(param_3)s
2025-02-23 23:29:44,371 - [cached since 16.74s ago] {'ledger_description_1': 'Expenses', 'amount_1': 0, 'param_1': 0, 'ledger_description_2': 'Revenues', 'amount_2': 0, 'param_2': 0, 'param_3': 10}
2025-02-23 23:29:44,770 - ROLLBACK
2025-02-23 23:29:44,774 - GET http://127.0.0.1:8000/api/net-profit/ - 2.02 ms
2025-02-23 23:29:44,773 - ROLLBACK
2025-02-23 23:29:44,776 - GET http://127.0.0.1:8000/api/revenue-expenses/ - 2.03 ms
2025-02-23 23:29:45,417 - ROLLBACK
2025-02-23 23:29:45,419 - GET http://127.0.0.1:8000/api/fund-table/ - 5.32 ms
2025-02-23 23:29:45,425 - BEGIN (implicit)
2025-02-23 23:29:45,427 - SELECT fund.fund_description AS fund_fund_description, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_1)s END) AS total_revenue, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_3)s AND ledger.amount > %(amount_3)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_4)s AND ledger.amount < %(amount_4)s) THEN -ledger.amount ELSE %(param_2)s END) AS total_expenses, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_1)s END) / nullif(sum(CASE WHEN (ledger.ledger_description = %(ledger_description_3)s AND ledger.amount > %(amount_3)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_4)s AND ledger.amount < %(amount_4)s) THEN -ledger.amount ELSE %(param_2)s END), %(nullif_1)s) AS ratio, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_1)s END) - sum(CASE WHEN (ledger.ledger_description = %(ledger_description_3)s AND ledger.amount > %(amount_3)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_4)s AND ledger.amount < %(amount_4)s) THEN -ledger.amount ELSE %(param_2)s END) AS roi 
FROM ledger INNER JOIN fund ON ledger.fund_id = fund.fund_id GROUP BY fund.fund_description ORDER BY roi DESC
2025-02-23 23:29:45,428 - [cached since 17.81s ago] {'ledger_description_1': 'Revenues', 'amount_1': 0, 'ledger_description_2': 'Expenses', 'amount_2': 0, 'param_1': 0, 'ledger_description_3': 'Expenses', 'amount_3': 0, 'ledger_description_4': 'Revenues', 'amount_4': 0, 'param_2': 0, 'nullif_1': 0}
2025-02-23 23:29:46,817 - ROLLBACK
2025-02-23 23:29:46,818 - GET http://127.0.0.1:8000/api/top-roi/ - 2.89 ms
2025-02-23 23:29:47,170 - ROLLBACK
2025-02-23 23:29:47,173 - GET http://127.0.0.1:8000/api/top-budget/ - 2.81 ms
2025-02-23 23:29:48,713 - ROLLBACK
2025-02-23 23:29:48,715 - GET http://127.0.0.1:8000/api/fund-table/ - 3.29 ms
2025-02-23 23:30:17,929 - BEGIN (implicit)
2025-02-23 23:30:17,935 - BEGIN (implicit)
2025-02-23 23:30:17,938 - BEGIN (implicit)
2025-02-23 23:30:17,941 - BEGIN (implicit)
2025-02-23 23:30:17,946 - BEGIN (implicit)
2025-02-23 23:30:17,953 - SELECT cost_center.cost_center_description AS cost_center_cost_center_description, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s) THEN ledger.amount ELSE %(param_1)s END) - sum(CASE WHEN (ledger.ledger_description = %(ledger_description_2)s) THEN ledger.amount ELSE %(param_2)s END) AS roi 
FROM ledger INNER JOIN cost_center ON ledger.cost_center_id = cost_center.cost_center_id 
WHERE ledger.department_id = %(department_id_1)s GROUP BY cost_center.cost_center_description ORDER BY sum(ledger.amount) DESC 
 LIMIT %(param_3)s
2025-02-23 23:30:17,958 - SELECT fund.fund_description AS fund_fund_description, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_1)s END) AS total_revenue, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_3)s AND ledger.amount > %(amount_3)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_4)s AND ledger.amount < %(amount_4)s) THEN -ledger.amount ELSE %(param_2)s END) AS total_expenses, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_1)s END) / nullif(sum(CASE WHEN (ledger.ledger_description = %(ledger_description_3)s AND ledger.amount > %(amount_3)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_4)s AND ledger.amount < %(amount_4)s) THEN -ledger.amount ELSE %(param_2)s END), %(nullif_1)s) AS ratio, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_1)s END) - sum(CASE WHEN (ledger.ledger_description = %(ledger_description_3)s AND ledger.amount > %(amount_3)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_4)s AND ledger.amount < %(amount_4)s) THEN -ledger.amount ELSE %(param_2)s END) AS roi 
FROM ledger INNER JOIN fund ON ledger.fund_id = fund.fund_id 
WHERE ledger.department_id = %(department_id_1)s GROUP BY fund.fund_description ORDER BY roi DESC
2025-02-23 23:30:17,962 - SELECT year(ledger.general_ledger_date) AS time, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_1)s END) - sum(CASE WHEN (ledger.ledger_description = %(ledger_description_3)s AND ledger.amount > %(amount_3)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_4)s AND ledger.amount < %(amount_4)s) THEN -ledger.amount ELSE %(param_2)s END) AS net_profit 
FROM ledger 
WHERE ledger.department_id = %(department_id_1)s GROUP BY year(ledger.general_ledger_date) ORDER BY year(ledger.general_ledger_date)
2025-02-23 23:30:17,966 - SELECT cost_center.cost_center_description AS cost_center_cost_center_description, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount ELSE %(param_1)s END + CASE WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_2)s END) AS total_expenditure 
FROM ledger INNER JOIN cost_center ON ledger.cost_center_id = cost_center.cost_center_id 
WHERE ledger.department_id = %(department_id_1)s GROUP BY cost_center.cost_center_description ORDER BY sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount ELSE %(param_1)s END + CASE WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_2)s END) DESC 
 LIMIT %(param_3)s
2025-02-23 23:30:17,973 - SELECT year(ledger.general_ledger_date) AS time, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_1)s END) AS total_revenue, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_3)s AND ledger.amount > %(amount_3)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_4)s AND ledger.amount < %(amount_4)s) THEN -ledger.amount ELSE %(param_2)s END) AS total_expenses 
FROM ledger 
WHERE ledger.department_id = %(department_id_1)s GROUP BY year(ledger.general_ledger_date) ORDER BY year(ledger.general_ledger_date)
2025-02-23 23:30:17,973 - [generated in 0.02150s] {'ledger_description_1': 'Revenues', 'param_1': 0, 'ledger_description_2': 'Expenses', 'param_2': 0, 'department_id_1': 105, 'param_3': 5}
2025-02-23 23:30:17,975 - [generated in 0.01670s] {'ledger_description_1': 'Revenues', 'amount_1': 0, 'ledger_description_2': 'Expenses', 'amount_2': 0, 'param_1': 0, 'ledger_description_3': 'Expenses', 'amount_3': 0, 'ledger_description_4': 'Revenues', 'amount_4': 0, 'param_2': 0, 'nullif_1': 0, 'department_id_1': 105}
2025-02-23 23:30:17,975 - [generated in 0.01353s] {'ledger_description_1': 'Revenues', 'amount_1': 0, 'ledger_description_2': 'Expenses', 'amount_2': 0, 'param_1': 0, 'ledger_description_3': 'Expenses', 'amount_3': 0, 'ledger_description_4': 'Revenues', 'amount_4': 0, 'param_2': 0, 'department_id_1': 105}
2025-02-23 23:30:17,976 - [generated in 0.00928s] {'ledger_description_1': 'Expenses', 'amount_1': 0, 'param_1': 0, 'ledger_description_2': 'Revenues', 'amount_2': 0, 'param_2': 0, 'department_id_1': 105, 'param_3': 10}
2025-02-23 23:30:17,976 - [generated in 0.00309s] {'ledger_description_1': 'Revenues', 'amount_1': 0, 'ledger_description_2': 'Expenses', 'amount_2': 0, 'param_1': 0, 'ledger_description_3': 'Expenses', 'amount_3': 0, 'ledger_description_4': 'Revenues', 'amount_4': 0, 'param_2': 0, 'department_id_1': 105}
2025-02-23 23:30:18,030 - ROLLBACK
2025-02-23 23:30:18,036 - GET http://127.0.0.1:8000/api/revenue-expenses/?department=105 - 0.12 ms
2025-02-23 23:30:18,065 - ROLLBACK
2025-02-23 23:30:18,096 - GET http://127.0.0.1:8000/api/net-profit/?department=105 - 0.18 ms
2025-02-23 23:30:18,146 - ROLLBACK
2025-02-23 23:30:18,159 - GET http://127.0.0.1:8000/api/fund-table/?department=105 - 0.24 ms
2025-02-23 23:30:18,575 - ROLLBACK
2025-02-23 23:30:18,576 - ROLLBACK
2025-02-23 23:30:18,579 - GET http://127.0.0.1:8000/api/top-budget/?department=105 - 0.66 ms
2025-02-23 23:30:18,580 - GET http://127.0.0.1:8000/api/top-roi/?department=105 - 0.67 ms
2025-02-23 23:30:23,530 - BEGIN (implicit)
2025-02-23 23:30:23,534 - SELECT cost_center.cost_center_description AS cost_center_cost_center_description, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s) THEN ledger.amount ELSE %(param_1)s END) - sum(CASE WHEN (ledger.ledger_description = %(ledger_description_2)s) THEN ledger.amount ELSE %(param_2)s END) AS roi 
FROM ledger INNER JOIN cost_center ON ledger.cost_center_id = cost_center.cost_center_id 
WHERE ledger.department_id = %(department_id_1)s AND ledger.general_ledger_date >= %(general_ledger_date_1)s GROUP BY cost_center.cost_center_description ORDER BY sum(ledger.amount) DESC 
 LIMIT %(param_3)s
2025-02-23 23:30:23,537 - BEGIN (implicit)
2025-02-23 23:30:23,538 - [generated in 0.00350s] {'ledger_description_1': 'Revenues', 'param_1': 0, 'ledger_description_2': 'Expenses', 'param_2': 0, 'department_id_1': 105, 'general_ledger_date_1': '2020-12-15', 'param_3': 5}
2025-02-23 23:30:23,547 - SELECT cost_center.cost_center_description AS cost_center_cost_center_description, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount ELSE %(param_1)s END + CASE WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_2)s END) AS total_expenditure 
FROM ledger INNER JOIN cost_center ON ledger.cost_center_id = cost_center.cost_center_id 
WHERE ledger.department_id = %(department_id_1)s AND ledger.general_ledger_date >= %(general_ledger_date_1)s GROUP BY cost_center.cost_center_description ORDER BY sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount ELSE %(param_1)s END + CASE WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_2)s END) DESC 
 LIMIT %(param_3)s
2025-02-23 23:30:23,555 - BEGIN (implicit)
2025-02-23 23:30:23,562 - BEGIN (implicit)
2025-02-23 23:30:23,568 - [generated in 0.02064s] {'ledger_description_1': 'Expenses', 'amount_1': 0, 'param_1': 0, 'ledger_description_2': 'Revenues', 'amount_2': 0, 'param_2': 0, 'department_id_1': 105, 'general_ledger_date_1': '2020-12-15', 'param_3': 10}
2025-02-23 23:30:23,570 - BEGIN (implicit)
2025-02-23 23:30:23,589 - SELECT year(ledger.general_ledger_date) AS time, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_1)s END) AS total_revenue, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_3)s AND ledger.amount > %(amount_3)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_4)s AND ledger.amount < %(amount_4)s) THEN -ledger.amount ELSE %(param_2)s END) AS total_expenses 
FROM ledger 
WHERE ledger.department_id = %(department_id_1)s AND ledger.general_ledger_date >= %(general_ledger_date_1)s GROUP BY year(ledger.general_ledger_date) ORDER BY year(ledger.general_ledger_date)
2025-02-23 23:30:23,589 - SELECT year(ledger.general_ledger_date) AS time, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_1)s END) - sum(CASE WHEN (ledger.ledger_description = %(ledger_description_3)s AND ledger.amount > %(amount_3)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_4)s AND ledger.amount < %(amount_4)s) THEN -ledger.amount ELSE %(param_2)s END) AS net_profit 
FROM ledger 
WHERE ledger.department_id = %(department_id_1)s AND ledger.general_ledger_date >= %(general_ledger_date_1)s GROUP BY year(ledger.general_ledger_date) ORDER BY year(ledger.general_ledger_date)
2025-02-23 23:30:23,600 - SELECT fund.fund_description AS fund_fund_description, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_1)s END) AS total_revenue, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_3)s AND ledger.amount > %(amount_3)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_4)s AND ledger.amount < %(amount_4)s) THEN -ledger.amount ELSE %(param_2)s END) AS total_expenses, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_1)s END) / nullif(sum(CASE WHEN (ledger.ledger_description = %(ledger_description_3)s AND ledger.amount > %(amount_3)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_4)s AND ledger.amount < %(amount_4)s) THEN -ledger.amount ELSE %(param_2)s END), %(nullif_1)s) AS ratio, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_1)s END) - sum(CASE WHEN (ledger.ledger_description = %(ledger_description_3)s AND ledger.amount > %(amount_3)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_4)s AND ledger.amount < %(amount_4)s) THEN -ledger.amount ELSE %(param_2)s END) AS roi 
FROM ledger INNER JOIN fund ON ledger.fund_id = fund.fund_id 
WHERE ledger.department_id = %(department_id_1)s AND ledger.general_ledger_date >= %(general_ledger_date_1)s GROUP BY fund.fund_description ORDER BY roi DESC
2025-02-23 23:30:23,600 - [generated in 0.01138s] {'ledger_description_1': 'Revenues', 'amount_1': 0, 'ledger_description_2': 'Expenses', 'amount_2': 0, 'param_1': 0, 'ledger_description_3': 'Expenses', 'amount_3': 0, 'ledger_description_4': 'Revenues', 'amount_4': 0, 'param_2': 0, 'department_id_1': 105, 'general_ledger_date_1': '2020-12-15'}
2025-02-23 23:30:23,604 - [generated in 0.01459s] {'ledger_description_1': 'Revenues', 'amount_1': 0, 'ledger_description_2': 'Expenses', 'amount_2': 0, 'param_1': 0, 'ledger_description_3': 'Expenses', 'amount_3': 0, 'ledger_description_4': 'Revenues', 'amount_4': 0, 'param_2': 0, 'department_id_1': 105, 'general_ledger_date_1': '2020-12-15'}
2025-02-23 23:30:23,604 - [generated in 0.00582s] {'ledger_description_1': 'Revenues', 'amount_1': 0, 'ledger_description_2': 'Expenses', 'amount_2': 0, 'param_1': 0, 'ledger_description_3': 'Expenses', 'amount_3': 0, 'ledger_description_4': 'Revenues', 'amount_4': 0, 'param_2': 0, 'nullif_1': 0, 'department_id_1': 105, 'general_ledger_date_1': '2020-12-15'}
2025-02-23 23:30:23,606 - ROLLBACK
2025-02-23 23:30:23,607 - ROLLBACK
2025-02-23 23:30:23,615 - ROLLBACK
2025-02-23 23:30:23,615 - ROLLBACK
2025-02-23 23:30:23,621 - GET http://127.0.0.1:8000/api/top-roi/?department=105&start_date=2020-12-15 - 0.10 ms
2025-02-23 23:30:23,627 - ROLLBACK
2025-02-23 23:30:23,628 - GET http://127.0.0.1:8000/api/top-budget/?department=105&start_date=2020-12-15 - 0.10 ms
2025-02-23 23:30:23,630 - GET http://127.0.0.1:8000/api/revenue-expenses/?department=105&start_date=2020-12-15 - 0.10 ms
2025-02-23 23:30:23,637 - GET http://127.0.0.1:8000/api/net-profit/?department=105&start_date=2020-12-15 - 0.11 ms
2025-02-23 23:30:23,640 - GET http://127.0.0.1:8000/api/fund-table/?department=105&start_date=2020-12-15 - 0.10 ms
2025-02-23 23:30:32,637 - BEGIN (implicit)
2025-02-23 23:30:32,640 - BEGIN (implicit)
2025-02-23 23:30:32,644 - SELECT cost_center.cost_center_description AS cost_center_cost_center_description, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s) THEN ledger.amount ELSE %(param_1)s END) - sum(CASE WHEN (ledger.ledger_description = %(ledger_description_2)s) THEN ledger.amount ELSE %(param_2)s END) AS roi 
FROM ledger INNER JOIN cost_center ON ledger.cost_center_id = cost_center.cost_center_id 
WHERE ledger.department_id = %(department_id_1)s AND ledger.general_ledger_date BETWEEN %(general_ledger_date_1)s AND %(general_ledger_date_2)s GROUP BY cost_center.cost_center_description ORDER BY sum(ledger.amount) DESC 
 LIMIT %(param_3)s
2025-02-23 23:30:32,647 - BEGIN (implicit)
2025-02-23 23:30:32,727 - SELECT cost_center.cost_center_description AS cost_center_cost_center_description, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount ELSE %(param_1)s END + CASE WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_2)s END) AS total_expenditure 
FROM ledger INNER JOIN cost_center ON ledger.cost_center_id = cost_center.cost_center_id 
WHERE ledger.department_id = %(department_id_1)s AND ledger.general_ledger_date BETWEEN %(general_ledger_date_1)s AND %(general_ledger_date_2)s GROUP BY cost_center.cost_center_description ORDER BY sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount ELSE %(param_1)s END + CASE WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_2)s END) DESC 
 LIMIT %(param_3)s
2025-02-23 23:30:32,729 - [generated in 0.08465s] {'ledger_description_1': 'Revenues', 'param_1': 0, 'ledger_description_2': 'Expenses', 'param_2': 0, 'department_id_1': 105, 'general_ledger_date_1': '2014-05-15', 'general_ledger_date_2': '2020-12-22', 'param_3': 5}
2025-02-23 23:30:32,786 - SELECT fund.fund_description AS fund_fund_description, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_1)s END) AS total_revenue, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_3)s AND ledger.amount > %(amount_3)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_4)s AND ledger.amount < %(amount_4)s) THEN -ledger.amount ELSE %(param_2)s END) AS total_expenses, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_1)s END) / nullif(sum(CASE WHEN (ledger.ledger_description = %(ledger_description_3)s AND ledger.amount > %(amount_3)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_4)s AND ledger.amount < %(amount_4)s) THEN -ledger.amount ELSE %(param_2)s END), %(nullif_1)s) AS ratio, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_1)s END) - sum(CASE WHEN (ledger.ledger_description = %(ledger_description_3)s AND ledger.amount > %(amount_3)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_4)s AND ledger.amount < %(amount_4)s) THEN -ledger.amount ELSE %(param_2)s END) AS roi 
FROM ledger INNER JOIN fund ON ledger.fund_id = fund.fund_id 
WHERE ledger.department_id = %(department_id_1)s AND ledger.general_ledger_date BETWEEN %(general_ledger_date_1)s AND %(general_ledger_date_2)s GROUP BY fund.fund_description ORDER BY roi DESC
2025-02-23 23:30:32,787 - [generated in 0.06014s] {'ledger_description_1': 'Expenses', 'amount_1': 0, 'param_1': 0, 'ledger_description_2': 'Revenues', 'amount_2': 0, 'param_2': 0, 'department_id_1': 105, 'general_ledger_date_1': '2014-05-15', 'general_ledger_date_2': '2020-12-22', 'param_3': 10}
2025-02-23 23:30:32,791 - [generated in 0.02608s] {'ledger_description_1': 'Revenues', 'amount_1': 0, 'ledger_description_2': 'Expenses', 'amount_2': 0, 'param_1': 0, 'ledger_description_3': 'Expenses', 'amount_3': 0, 'ledger_description_4': 'Revenues', 'amount_4': 0, 'param_2': 0, 'nullif_1': 0, 'department_id_1': 105, 'general_ledger_date_1': '2014-05-15', 'general_ledger_date_2': '2020-12-22'}
2025-02-23 23:30:32,911 - BEGIN (implicit)
2025-02-23 23:30:32,913 - BEGIN (implicit)
2025-02-23 23:30:32,914 - ROLLBACK
2025-02-23 23:30:32,949 - SELECT year(ledger.general_ledger_date) AS time, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_1)s END) - sum(CASE WHEN (ledger.ledger_description = %(ledger_description_3)s AND ledger.amount > %(amount_3)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_4)s AND ledger.amount < %(amount_4)s) THEN -ledger.amount ELSE %(param_2)s END) AS net_profit 
FROM ledger 
WHERE ledger.department_id = %(department_id_1)s AND ledger.general_ledger_date BETWEEN %(general_ledger_date_1)s AND %(general_ledger_date_2)s GROUP BY year(ledger.general_ledger_date) ORDER BY year(ledger.general_ledger_date)
2025-02-23 23:30:32,955 - [generated in 0.00537s] {'ledger_description_1': 'Revenues', 'amount_1': 0, 'ledger_description_2': 'Expenses', 'amount_2': 0, 'param_1': 0, 'ledger_description_3': 'Expenses', 'amount_3': 0, 'ledger_description_4': 'Revenues', 'amount_4': 0, 'param_2': 0, 'department_id_1': 105, 'general_ledger_date_1': '2014-05-15', 'general_ledger_date_2': '2020-12-22'}
2025-02-23 23:30:32,954 - SELECT year(ledger.general_ledger_date) AS time, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_1)s END) AS total_revenue, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_3)s AND ledger.amount > %(amount_3)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_4)s AND ledger.amount < %(amount_4)s) THEN -ledger.amount ELSE %(param_2)s END) AS total_expenses 
FROM ledger 
WHERE ledger.department_id = %(department_id_1)s AND ledger.general_ledger_date BETWEEN %(general_ledger_date_1)s AND %(general_ledger_date_2)s GROUP BY year(ledger.general_ledger_date) ORDER BY year(ledger.general_ledger_date)
2025-02-23 23:30:32,958 - GET http://127.0.0.1:8000/api/fund-table/?department=105&start_date=2014-05-15&end_date=2020-12-22 - 0.33 ms
2025-02-23 23:30:32,958 - [generated in 0.00411s] {'ledger_description_1': 'Revenues', 'amount_1': 0, 'ledger_description_2': 'Expenses', 'amount_2': 0, 'param_1': 0, 'ledger_description_3': 'Expenses', 'amount_3': 0, 'ledger_description_4': 'Revenues', 'amount_4': 0, 'param_2': 0, 'department_id_1': 105, 'general_ledger_date_1': '2014-05-15', 'general_ledger_date_2': '2020-12-22'}
2025-02-23 23:30:32,978 - ROLLBACK
2025-02-23 23:30:32,981 - GET http://127.0.0.1:8000/api/net-profit/?department=105&start_date=2014-05-15&end_date=2020-12-22 - 0.35 ms
2025-02-23 23:30:32,991 - ROLLBACK
2025-02-23 23:30:32,993 - GET http://127.0.0.1:8000/api/revenue-expenses/?department=105&start_date=2014-05-15&end_date=2020-12-22 - 0.36 ms
2025-02-23 23:30:33,298 - ROLLBACK
2025-02-23 23:30:33,298 - ROLLBACK
2025-02-23 23:30:33,301 - GET http://127.0.0.1:8000/api/top-roi/?department=105&start_date=2014-05-15&end_date=2020-12-22 - 0.67 ms
2025-02-23 23:30:33,302 - GET http://127.0.0.1:8000/api/top-budget/?department=105&start_date=2014-05-15&end_date=2020-12-22 - 0.67 ms
2025-02-23 23:53:09,023 - GET http://127.0.0.1:8000/api/initialise/ - 0.00 ms
2025-02-23 23:53:09,139 - BEGIN (implicit)
2025-02-23 23:53:09,142 - SELECT department.department_name AS department_department_name, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s) THEN ledger.amount ELSE %(param_1)s END) - sum(CASE WHEN (ledger.ledger_description = %(ledger_description_2)s) THEN ledger.amount ELSE %(param_2)s END) AS roi 
FROM ledger INNER JOIN department ON ledger.department_id = department.department_id GROUP BY department.department_name ORDER BY sum(ledger.amount) DESC 
 LIMIT %(param_3)s
2025-02-23 23:53:09,143 - [cached since 1422s ago] {'ledger_description_1': 'Revenues', 'param_1': 0, 'ledger_description_2': 'Expenses', 'param_2': 0, 'param_3': 5}
2025-02-23 23:53:09,147 - BEGIN (implicit)
2025-02-23 23:53:09,149 - BEGIN (implicit)
2025-02-23 23:53:09,154 - GET http://127.0.0.1:8000/api/initialise/ - 0.01 ms
2025-02-23 23:53:09,151 - BEGIN (implicit)
2025-02-23 23:53:09,152 - SELECT department.department_name AS department_department_name, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount ELSE %(param_1)s END + CASE WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_2)s END) AS total_expenditure 
FROM ledger INNER JOIN department ON ledger.department_id = department.department_id GROUP BY department.department_name ORDER BY sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount ELSE %(param_1)s END + CASE WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_2)s END) DESC 
 LIMIT %(param_3)s
2025-02-23 23:53:09,154 - SELECT year(ledger.general_ledger_date) AS time, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_1)s END) AS total_revenue, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_3)s AND ledger.amount > %(amount_3)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_4)s AND ledger.amount < %(amount_4)s) THEN -ledger.amount ELSE %(param_2)s END) AS total_expenses 
FROM ledger GROUP BY year(ledger.general_ledger_date) ORDER BY year(ledger.general_ledger_date)
2025-02-23 23:53:09,156 - BEGIN (implicit)
2025-02-23 23:53:09,160 - SELECT fund.fund_description AS fund_fund_description, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_1)s END) AS total_revenue, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_3)s AND ledger.amount > %(amount_3)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_4)s AND ledger.amount < %(amount_4)s) THEN -ledger.amount ELSE %(param_2)s END) AS total_expenses, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_1)s END) / nullif(sum(CASE WHEN (ledger.ledger_description = %(ledger_description_3)s AND ledger.amount > %(amount_3)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_4)s AND ledger.amount < %(amount_4)s) THEN -ledger.amount ELSE %(param_2)s END), %(nullif_1)s) AS ratio, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_1)s END) - sum(CASE WHEN (ledger.ledger_description = %(ledger_description_3)s AND ledger.amount > %(amount_3)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_4)s AND ledger.amount < %(amount_4)s) THEN -ledger.amount ELSE %(param_2)s END) AS roi 
FROM ledger INNER JOIN fund ON ledger.fund_id = fund.fund_id GROUP BY fund.fund_description ORDER BY roi DESC
2025-02-23 23:53:09,160 - [cached since 1422s ago] {'ledger_description_1': 'Expenses', 'amount_1': 0, 'param_1': 0, 'ledger_description_2': 'Revenues', 'amount_2': 0, 'param_2': 0, 'param_3': 10}
2025-02-23 23:53:09,161 - [cached since 1422s ago] {'ledger_description_1': 'Revenues', 'amount_1': 0, 'ledger_description_2': 'Expenses', 'amount_2': 0, 'param_1': 0, 'ledger_description_3': 'Expenses', 'amount_3': 0, 'ledger_description_4': 'Revenues', 'amount_4': 0, 'param_2': 0}
2025-02-23 23:53:09,163 - SELECT year(ledger.general_ledger_date) AS time, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_1)s END) - sum(CASE WHEN (ledger.ledger_description = %(ledger_description_3)s AND ledger.amount > %(amount_3)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_4)s AND ledger.amount < %(amount_4)s) THEN -ledger.amount ELSE %(param_2)s END) AS net_profit 
FROM ledger GROUP BY year(ledger.general_ledger_date) ORDER BY year(ledger.general_ledger_date)
2025-02-23 23:53:09,164 - [cached since 1422s ago] {'ledger_description_1': 'Revenues', 'amount_1': 0, 'ledger_description_2': 'Expenses', 'amount_2': 0, 'param_1': 0, 'ledger_description_3': 'Expenses', 'amount_3': 0, 'ledger_description_4': 'Revenues', 'amount_4': 0, 'param_2': 0, 'nullif_1': 0}
2025-02-23 23:53:09,165 - [cached since 1422s ago] {'ledger_description_1': 'Revenues', 'amount_1': 0, 'ledger_description_2': 'Expenses', 'amount_2': 0, 'param_1': 0, 'ledger_description_3': 'Expenses', 'amount_3': 0, 'ledger_description_4': 'Revenues', 'amount_4': 0, 'param_2': 0}
2025-02-23 23:53:10,269 - BEGIN (implicit)
2025-02-23 23:53:10,270 - SELECT department.department_id AS department_department_id, department.department_name AS department_department_name 
FROM department
2025-02-23 23:53:10,271 - [cached since 1420s ago] {}
2025-02-23 23:53:10,273 - SELECT min(ledger.general_ledger_date) AS min_1 
FROM ledger
2025-02-23 23:53:10,274 - [cached since 1420s ago] {}
2025-02-23 23:53:10,275 - SELECT max(ledger.general_ledger_date) AS max_1 
FROM ledger
2025-02-23 23:53:10,276 - [cached since 1420s ago] {}
2025-02-23 23:53:10,279 - ROLLBACK
2025-02-23 23:53:10,281 - GET http://127.0.0.1:8000/api/initialise - 0.02 ms
2025-02-23 23:53:10,287 - BEGIN (implicit)
2025-02-23 23:53:10,288 - SELECT department.department_id AS department_department_id, department.department_name AS department_department_name 
FROM department
2025-02-23 23:53:10,288 - [cached since 1420s ago] {}
2025-02-23 23:53:10,294 - SELECT min(ledger.general_ledger_date) AS min_1 
FROM ledger
2025-02-23 23:53:10,295 - [cached since 1420s ago] {}
2025-02-23 23:53:10,297 - SELECT max(ledger.general_ledger_date) AS max_1 
FROM ledger
2025-02-23 23:53:10,298 - [cached since 1420s ago] {}
2025-02-23 23:53:10,300 - ROLLBACK
2025-02-23 23:53:10,303 - GET http://127.0.0.1:8000/api/initialise - 0.02 ms
2025-02-23 23:53:11,316 - ROLLBACK
2025-02-23 23:53:11,319 - GET http://127.0.0.1:8000/api/net-profit/ - 2.18 ms
2025-02-23 23:53:11,323 - ROLLBACK
2025-02-23 23:53:11,326 - BEGIN (implicit)
2025-02-23 23:53:11,328 - GET http://127.0.0.1:8000/api/revenue-expenses/ - 2.19 ms
2025-02-23 23:53:11,327 - SELECT year(ledger.general_ledger_date) AS time, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_1)s END) - sum(CASE WHEN (ledger.ledger_description = %(ledger_description_3)s AND ledger.amount > %(amount_3)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_4)s AND ledger.amount < %(amount_4)s) THEN -ledger.amount ELSE %(param_2)s END) AS net_profit 
FROM ledger GROUP BY year(ledger.general_ledger_date) ORDER BY year(ledger.general_ledger_date)
2025-02-23 23:53:11,328 - [cached since 1424s ago] {'ledger_description_1': 'Revenues', 'amount_1': 0, 'ledger_description_2': 'Expenses', 'amount_2': 0, 'param_1': 0, 'ledger_description_3': 'Expenses', 'amount_3': 0, 'ledger_description_4': 'Revenues', 'amount_4': 0, 'param_2': 0}
2025-02-23 23:53:11,333 - BEGIN (implicit)
2025-02-23 23:53:11,334 - SELECT year(ledger.general_ledger_date) AS time, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_1)s END) AS total_revenue, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_3)s AND ledger.amount > %(amount_3)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_4)s AND ledger.amount < %(amount_4)s) THEN -ledger.amount ELSE %(param_2)s END) AS total_expenses 
FROM ledger GROUP BY year(ledger.general_ledger_date) ORDER BY year(ledger.general_ledger_date)
2025-02-23 23:53:11,334 - [cached since 1424s ago] {'ledger_description_1': 'Revenues', 'amount_1': 0, 'ledger_description_2': 'Expenses', 'amount_2': 0, 'param_1': 0, 'ledger_description_3': 'Expenses', 'amount_3': 0, 'ledger_description_4': 'Revenues', 'amount_4': 0, 'param_2': 0}
2025-02-23 23:53:12,233 - ROLLBACK
2025-02-23 23:53:12,235 - GET http://127.0.0.1:8000/api/top-roi/ - 3.10 ms
2025-02-23 23:53:12,240 - BEGIN (implicit)
2025-02-23 23:53:12,242 - SELECT department.department_name AS department_department_name, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s) THEN ledger.amount ELSE %(param_1)s END) - sum(CASE WHEN (ledger.ledger_description = %(ledger_description_2)s) THEN ledger.amount ELSE %(param_2)s END) AS roi 
FROM ledger INNER JOIN department ON ledger.department_id = department.department_id GROUP BY department.department_name ORDER BY sum(ledger.amount) DESC 
 LIMIT %(param_3)s
2025-02-23 23:53:12,242 - [cached since 1425s ago] {'ledger_description_1': 'Revenues', 'param_1': 0, 'ledger_description_2': 'Expenses', 'param_2': 0, 'param_3': 5}
2025-02-23 23:53:12,464 - ROLLBACK
2025-02-23 23:53:12,467 - GET http://127.0.0.1:8000/api/top-budget/ - 3.33 ms
2025-02-23 23:53:12,472 - BEGIN (implicit)
2025-02-23 23:53:12,472 - SELECT department.department_name AS department_department_name, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount ELSE %(param_1)s END + CASE WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_2)s END) AS total_expenditure 
FROM ledger INNER JOIN department ON ledger.department_id = department.department_id GROUP BY department.department_name ORDER BY sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount ELSE %(param_1)s END + CASE WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_2)s END) DESC 
 LIMIT %(param_3)s
2025-02-23 23:53:12,473 - [cached since 1425s ago] {'ledger_description_1': 'Expenses', 'amount_1': 0, 'param_1': 0, 'ledger_description_2': 'Revenues', 'amount_2': 0, 'param_2': 0, 'param_3': 10}
2025-02-23 23:53:12,862 - ROLLBACK
2025-02-23 23:53:12,864 - ROLLBACK
2025-02-23 23:53:12,864 - GET http://127.0.0.1:8000/api/revenue-expenses/ - 1.53 ms
2025-02-23 23:53:12,865 - GET http://127.0.0.1:8000/api/net-profit/ - 1.54 ms
2025-02-23 23:53:13,344 - ROLLBACK
2025-02-23 23:53:13,346 - GET http://127.0.0.1:8000/api/fund-table/ - 4.21 ms
2025-02-23 23:53:13,349 - BEGIN (implicit)
2025-02-23 23:53:13,350 - SELECT fund.fund_description AS fund_fund_description, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_1)s END) AS total_revenue, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_3)s AND ledger.amount > %(amount_3)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_4)s AND ledger.amount < %(amount_4)s) THEN -ledger.amount ELSE %(param_2)s END) AS total_expenses, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_1)s END) / nullif(sum(CASE WHEN (ledger.ledger_description = %(ledger_description_3)s AND ledger.amount > %(amount_3)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_4)s AND ledger.amount < %(amount_4)s) THEN -ledger.amount ELSE %(param_2)s END), %(nullif_1)s) AS ratio, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_1)s END) - sum(CASE WHEN (ledger.ledger_description = %(ledger_description_3)s AND ledger.amount > %(amount_3)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_4)s AND ledger.amount < %(amount_4)s) THEN -ledger.amount ELSE %(param_2)s END) AS roi 
FROM ledger INNER JOIN fund ON ledger.fund_id = fund.fund_id GROUP BY fund.fund_description ORDER BY roi DESC
2025-02-23 23:53:13,351 - [cached since 1426s ago] {'ledger_description_1': 'Revenues', 'amount_1': 0, 'ledger_description_2': 'Expenses', 'amount_2': 0, 'param_1': 0, 'ledger_description_3': 'Expenses', 'amount_3': 0, 'ledger_description_4': 'Revenues', 'amount_4': 0, 'param_2': 0, 'nullif_1': 0}
2025-02-23 23:53:14,443 - ROLLBACK
2025-02-23 23:53:14,446 - GET http://127.0.0.1:8000/api/top-roi/ - 2.21 ms
2025-02-23 23:53:14,676 - ROLLBACK
2025-02-23 23:53:14,677 - GET http://127.0.0.1:8000/api/top-budget/ - 2.21 ms
2025-02-23 23:53:15,898 - ROLLBACK
2025-02-23 23:53:15,900 - GET http://127.0.0.1:8000/api/fund-table/ - 2.55 ms
2025-02-24 00:02:17,761 - BEGIN (implicit)
2025-02-24 00:02:17,775 - BEGIN (implicit)
2025-02-24 00:02:17,778 - BEGIN (implicit)
2025-02-24 00:02:17,779 - BEGIN (implicit)
2025-02-24 00:02:17,789 - SELECT department.department_name AS department_department_name, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount ELSE %(param_1)s END + CASE WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_2)s END) AS total_expenditure 
FROM ledger INNER JOIN department ON ledger.department_id = department.department_id 
WHERE ledger.general_ledger_date BETWEEN %(general_ledger_date_1)s AND %(general_ledger_date_2)s GROUP BY department.department_name ORDER BY sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount ELSE %(param_1)s END + CASE WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_2)s END) DESC 
 LIMIT %(param_3)s
2025-02-24 00:02:17,826 - SELECT day(ledger.general_ledger_date) AS time, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_1)s END) - sum(CASE WHEN (ledger.ledger_description = %(ledger_description_3)s AND ledger.amount > %(amount_3)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_4)s AND ledger.amount < %(amount_4)s) THEN -ledger.amount ELSE %(param_2)s END) AS net_profit 
FROM ledger 
WHERE ledger.general_ledger_date BETWEEN %(general_ledger_date_1)s AND %(general_ledger_date_2)s GROUP BY day(ledger.general_ledger_date) ORDER BY day(ledger.general_ledger_date)
2025-02-24 00:02:17,992 - [generated in 0.16635s] {'ledger_description_1': 'Revenues', 'amount_1': 0, 'ledger_description_2': 'Expenses', 'amount_2': 0, 'param_1': 0, 'ledger_description_3': 'Expenses', 'amount_3': 0, 'ledger_description_4': 'Revenues', 'amount_4': 0, 'param_2': 0, 'general_ledger_date_1': '2020-11-30', 'general_ledger_date_2': '2020-12-16'}
2025-02-24 00:02:17,990 - SELECT department.department_name AS department_department_name, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s) THEN ledger.amount ELSE %(param_1)s END) - sum(CASE WHEN (ledger.ledger_description = %(ledger_description_2)s) THEN ledger.amount ELSE %(param_2)s END) AS roi 
FROM ledger INNER JOIN department ON ledger.department_id = department.department_id 
WHERE ledger.general_ledger_date BETWEEN %(general_ledger_date_1)s AND %(general_ledger_date_2)s GROUP BY department.department_name ORDER BY sum(ledger.amount) DESC 
 LIMIT %(param_3)s
2025-02-24 00:02:17,999 - [generated in 0.00836s] {'ledger_description_1': 'Revenues', 'param_1': 0, 'ledger_description_2': 'Expenses', 'param_2': 0, 'general_ledger_date_1': '2020-11-30', 'general_ledger_date_2': '2020-12-16', 'param_3': 5}
2025-02-24 00:02:17,838 - SELECT day(ledger.general_ledger_date) AS time, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_1)s END) AS total_revenue, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_3)s AND ledger.amount > %(amount_3)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_4)s AND ledger.amount < %(amount_4)s) THEN -ledger.amount ELSE %(param_2)s END) AS total_expenses 
FROM ledger 
WHERE ledger.general_ledger_date BETWEEN %(general_ledger_date_1)s AND %(general_ledger_date_2)s GROUP BY day(ledger.general_ledger_date) ORDER BY day(ledger.general_ledger_date)
2025-02-24 00:02:17,991 - [generated in 0.20286s] {'ledger_description_1': 'Expenses', 'amount_1': 0, 'param_1': 0, 'ledger_description_2': 'Revenues', 'amount_2': 0, 'param_2': 0, 'general_ledger_date_1': '2020-11-30', 'general_ledger_date_2': '2020-12-16', 'param_3': 10}
2025-02-24 00:02:18,024 - BEGIN (implicit)
2025-02-24 00:02:18,026 - [generated in 0.18995s] {'ledger_description_1': 'Revenues', 'amount_1': 0, 'ledger_description_2': 'Expenses', 'amount_2': 0, 'param_1': 0, 'ledger_description_3': 'Expenses', 'amount_3': 0, 'ledger_description_4': 'Revenues', 'amount_4': 0, 'param_2': 0, 'general_ledger_date_1': '2020-11-30', 'general_ledger_date_2': '2020-12-16'}
2025-02-24 00:02:18,061 - SELECT fund.fund_description AS fund_fund_description, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_1)s END) AS total_revenue, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_3)s AND ledger.amount > %(amount_3)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_4)s AND ledger.amount < %(amount_4)s) THEN -ledger.amount ELSE %(param_2)s END) AS total_expenses, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_1)s END) / nullif(sum(CASE WHEN (ledger.ledger_description = %(ledger_description_3)s AND ledger.amount > %(amount_3)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_4)s AND ledger.amount < %(amount_4)s) THEN -ledger.amount ELSE %(param_2)s END), %(nullif_1)s) AS ratio, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_1)s END) - sum(CASE WHEN (ledger.ledger_description = %(ledger_description_3)s AND ledger.amount > %(amount_3)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_4)s AND ledger.amount < %(amount_4)s) THEN -ledger.amount ELSE %(param_2)s END) AS roi 
FROM ledger INNER JOIN fund ON ledger.fund_id = fund.fund_id 
WHERE ledger.general_ledger_date BETWEEN %(general_ledger_date_1)s AND %(general_ledger_date_2)s GROUP BY fund.fund_description ORDER BY roi DESC
2025-02-24 00:02:18,092 - [generated in 0.03261s] {'ledger_description_1': 'Revenues', 'amount_1': 0, 'ledger_description_2': 'Expenses', 'amount_2': 0, 'param_1': 0, 'ledger_description_3': 'Expenses', 'amount_3': 0, 'ledger_description_4': 'Revenues', 'amount_4': 0, 'param_2': 0, 'nullif_1': 0, 'general_ledger_date_1': '2020-11-30', 'general_ledger_date_2': '2020-12-16'}
2025-02-24 00:02:18,096 - ROLLBACK
2025-02-24 00:02:18,167 - GET http://127.0.0.1:8000/api/net-profit/?start_date=2020-11-30&end_date=2020-12-16 - 0.43 ms
2025-02-24 00:02:18,192 - ROLLBACK
2025-02-24 00:02:18,222 - GET http://127.0.0.1:8000/api/revenue-expenses/?start_date=2020-11-30&end_date=2020-12-16 - 0.49 ms
2025-02-24 00:02:18,287 - ROLLBACK
2025-02-24 00:02:18,291 - GET http://127.0.0.1:8000/api/top-budget/?start_date=2020-11-30&end_date=2020-12-16 - 0.57 ms
2025-02-24 00:02:18,326 - ROLLBACK
2025-02-24 00:02:18,329 - GET http://127.0.0.1:8000/api/top-roi/?start_date=2020-11-30&end_date=2020-12-16 - 0.59 ms
2025-02-24 00:02:18,401 - ROLLBACK
2025-02-24 00:02:18,408 - GET http://127.0.0.1:8000/api/fund-table/?start_date=2020-11-30&end_date=2020-12-16 - 0.66 ms
2025-02-24 00:02:39,371 - BEGIN (implicit)
2025-02-24 00:02:39,376 - BEGIN (implicit)
2025-02-24 00:02:39,380 - BEGIN (implicit)
2025-02-24 00:02:39,384 - BEGIN (implicit)
2025-02-24 00:02:39,386 - SELECT department.department_name AS department_department_name, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s) THEN ledger.amount ELSE %(param_1)s END) - sum(CASE WHEN (ledger.ledger_description = %(ledger_description_2)s) THEN ledger.amount ELSE %(param_2)s END) AS roi 
FROM ledger INNER JOIN department ON ledger.department_id = department.department_id 
WHERE ledger.general_ledger_date BETWEEN %(general_ledger_date_1)s AND %(general_ledger_date_2)s GROUP BY department.department_name ORDER BY sum(ledger.amount) DESC 
 LIMIT %(param_3)s
2025-02-24 00:02:39,388 - BEGIN (implicit)
2025-02-24 00:02:39,389 - SELECT department.department_name AS department_department_name, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount ELSE %(param_1)s END + CASE WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_2)s END) AS total_expenditure 
FROM ledger INNER JOIN department ON ledger.department_id = department.department_id 
WHERE ledger.general_ledger_date BETWEEN %(general_ledger_date_1)s AND %(general_ledger_date_2)s GROUP BY department.department_name ORDER BY sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount ELSE %(param_1)s END + CASE WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_2)s END) DESC 
 LIMIT %(param_3)s
2025-02-24 00:02:39,399 - [cached since 21.61s ago] {'ledger_description_1': 'Expenses', 'amount_1': 0, 'param_1': 0, 'ledger_description_2': 'Revenues', 'amount_2': 0, 'param_2': 0, 'general_ledger_date_1': '2020-11-29', 'general_ledger_date_2': '2020-11-29', 'param_3': 10}
2025-02-24 00:02:39,393 - SELECT day(ledger.general_ledger_date) AS time, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_1)s END) - sum(CASE WHEN (ledger.ledger_description = %(ledger_description_3)s AND ledger.amount > %(amount_3)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_4)s AND ledger.amount < %(amount_4)s) THEN -ledger.amount ELSE %(param_2)s END) AS net_profit 
FROM ledger 
WHERE ledger.general_ledger_date BETWEEN %(general_ledger_date_1)s AND %(general_ledger_date_2)s GROUP BY day(ledger.general_ledger_date) ORDER BY day(ledger.general_ledger_date)
2025-02-24 00:02:39,401 - [cached since 21.57s ago] {'ledger_description_1': 'Revenues', 'amount_1': 0, 'ledger_description_2': 'Expenses', 'amount_2': 0, 'param_1': 0, 'ledger_description_3': 'Expenses', 'amount_3': 0, 'ledger_description_4': 'Revenues', 'amount_4': 0, 'param_2': 0, 'general_ledger_date_1': '2020-11-29', 'general_ledger_date_2': '2020-11-29'}
2025-02-24 00:02:39,398 - SELECT fund.fund_description AS fund_fund_description, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_1)s END) AS total_revenue, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_3)s AND ledger.amount > %(amount_3)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_4)s AND ledger.amount < %(amount_4)s) THEN -ledger.amount ELSE %(param_2)s END) AS total_expenses, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_1)s END) / nullif(sum(CASE WHEN (ledger.ledger_description = %(ledger_description_3)s AND ledger.amount > %(amount_3)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_4)s AND ledger.amount < %(amount_4)s) THEN -ledger.amount ELSE %(param_2)s END), %(nullif_1)s) AS ratio, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_1)s END) - sum(CASE WHEN (ledger.ledger_description = %(ledger_description_3)s AND ledger.amount > %(amount_3)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_4)s AND ledger.amount < %(amount_4)s) THEN -ledger.amount ELSE %(param_2)s END) AS roi 
FROM ledger INNER JOIN fund ON ledger.fund_id = fund.fund_id 
WHERE ledger.general_ledger_date BETWEEN %(general_ledger_date_1)s AND %(general_ledger_date_2)s GROUP BY fund.fund_description ORDER BY roi DESC
2025-02-24 00:02:39,391 - SELECT day(ledger.general_ledger_date) AS time, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_1)s END) AS total_revenue, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_3)s AND ledger.amount > %(amount_3)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_4)s AND ledger.amount < %(amount_4)s) THEN -ledger.amount ELSE %(param_2)s END) AS total_expenses 
FROM ledger 
WHERE ledger.general_ledger_date BETWEEN %(general_ledger_date_1)s AND %(general_ledger_date_2)s GROUP BY day(ledger.general_ledger_date) ORDER BY day(ledger.general_ledger_date)
2025-02-24 00:02:39,394 - [cached since 21.4s ago] {'ledger_description_1': 'Revenues', 'param_1': 0, 'ledger_description_2': 'Expenses', 'param_2': 0, 'general_ledger_date_1': '2020-11-29', 'general_ledger_date_2': '2020-11-29', 'param_3': 5}
2025-02-24 00:02:39,406 - [cached since 21.35s ago] {'ledger_description_1': 'Revenues', 'amount_1': 0, 'ledger_description_2': 'Expenses', 'amount_2': 0, 'param_1': 0, 'ledger_description_3': 'Expenses', 'amount_3': 0, 'ledger_description_4': 'Revenues', 'amount_4': 0, 'param_2': 0, 'nullif_1': 0, 'general_ledger_date_1': '2020-11-29', 'general_ledger_date_2': '2020-11-29'}
2025-02-24 00:02:39,407 - [cached since 21.57s ago] {'ledger_description_1': 'Revenues', 'amount_1': 0, 'ledger_description_2': 'Expenses', 'amount_2': 0, 'param_1': 0, 'ledger_description_3': 'Expenses', 'amount_3': 0, 'ledger_description_4': 'Revenues', 'amount_4': 0, 'param_2': 0, 'general_ledger_date_1': '2020-11-29', 'general_ledger_date_2': '2020-11-29'}
2025-02-24 00:02:39,411 - ROLLBACK
2025-02-24 00:02:39,418 - ROLLBACK
2025-02-24 00:02:39,421 - ROLLBACK
2025-02-24 00:02:39,426 - GET http://127.0.0.1:8000/api/net-profit/?start_date=2020-11-29&end_date=2020-11-29 - 0.07 ms
2025-02-24 00:02:39,427 - ROLLBACK
2025-02-24 00:02:39,430 - GET http://127.0.0.1:8000/api/top-roi/?start_date=2020-11-29&end_date=2020-11-29 - 0.08 ms
2025-02-24 00:02:39,436 - GET http://127.0.0.1:8000/api/top-budget/?start_date=2020-11-29&end_date=2020-11-29 - 0.08 ms
2025-02-24 00:02:39,448 - GET http://127.0.0.1:8000/api/fund-table/?start_date=2020-11-29&end_date=2020-11-29 - 0.09 ms
2025-02-24 00:02:39,450 - ROLLBACK
2025-02-24 00:02:39,510 - GET http://127.0.0.1:8000/api/revenue-expenses/?start_date=2020-11-29&end_date=2020-11-29 - 0.15 ms
2025-02-24 00:02:48,972 - BEGIN (implicit)
2025-02-24 00:02:49,002 - SELECT department.department_name AS department_department_name, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s) THEN ledger.amount ELSE %(param_1)s END) - sum(CASE WHEN (ledger.ledger_description = %(ledger_description_2)s) THEN ledger.amount ELSE %(param_2)s END) AS roi 
FROM ledger INNER JOIN department ON ledger.department_id = department.department_id 
WHERE ledger.general_ledger_date BETWEEN %(general_ledger_date_1)s AND %(general_ledger_date_2)s GROUP BY department.department_name ORDER BY sum(ledger.amount) DESC 
 LIMIT %(param_3)s
2025-02-24 00:02:49,029 - BEGIN (implicit)
2025-02-24 00:02:49,030 - [cached since 31.04s ago] {'ledger_description_1': 'Revenues', 'param_1': 0, 'ledger_description_2': 'Expenses', 'param_2': 0, 'general_ledger_date_1': '2020-11-29', 'general_ledger_date_2': '2020-11-30', 'param_3': 5}
2025-02-24 00:02:49,034 - BEGIN (implicit)
2025-02-24 00:02:49,057 - BEGIN (implicit)
2025-02-24 00:02:49,058 - BEGIN (implicit)
2025-02-24 00:02:49,060 - SELECT day(ledger.general_ledger_date) AS time, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_1)s END) AS total_revenue, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_3)s AND ledger.amount > %(amount_3)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_4)s AND ledger.amount < %(amount_4)s) THEN -ledger.amount ELSE %(param_2)s END) AS total_expenses 
FROM ledger 
WHERE ledger.general_ledger_date BETWEEN %(general_ledger_date_1)s AND %(general_ledger_date_2)s GROUP BY day(ledger.general_ledger_date) ORDER BY day(ledger.general_ledger_date)
2025-02-24 00:02:49,091 - [cached since 31.26s ago] {'ledger_description_1': 'Revenues', 'amount_1': 0, 'ledger_description_2': 'Expenses', 'amount_2': 0, 'param_1': 0, 'ledger_description_3': 'Expenses', 'amount_3': 0, 'ledger_description_4': 'Revenues', 'amount_4': 0, 'param_2': 0, 'general_ledger_date_1': '2020-11-29', 'general_ledger_date_2': '2020-11-30'}
2025-02-24 00:02:49,072 - SELECT department.department_name AS department_department_name, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount ELSE %(param_1)s END + CASE WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_2)s END) AS total_expenditure 
FROM ledger INNER JOIN department ON ledger.department_id = department.department_id 
WHERE ledger.general_ledger_date BETWEEN %(general_ledger_date_1)s AND %(general_ledger_date_2)s GROUP BY department.department_name ORDER BY sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount ELSE %(param_1)s END + CASE WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_2)s END) DESC 
 LIMIT %(param_3)s
2025-02-24 00:02:49,075 - SELECT fund.fund_description AS fund_fund_description, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_1)s END) AS total_revenue, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_3)s AND ledger.amount > %(amount_3)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_4)s AND ledger.amount < %(amount_4)s) THEN -ledger.amount ELSE %(param_2)s END) AS total_expenses, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_1)s END) / nullif(sum(CASE WHEN (ledger.ledger_description = %(ledger_description_3)s AND ledger.amount > %(amount_3)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_4)s AND ledger.amount < %(amount_4)s) THEN -ledger.amount ELSE %(param_2)s END), %(nullif_1)s) AS ratio, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_1)s END) - sum(CASE WHEN (ledger.ledger_description = %(ledger_description_3)s AND ledger.amount > %(amount_3)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_4)s AND ledger.amount < %(amount_4)s) THEN -ledger.amount ELSE %(param_2)s END) AS roi 
FROM ledger INNER JOIN fund ON ledger.fund_id = fund.fund_id 
WHERE ledger.general_ledger_date BETWEEN %(general_ledger_date_1)s AND %(general_ledger_date_2)s GROUP BY fund.fund_description ORDER BY roi DESC
2025-02-24 00:02:49,092 - ROLLBACK
2025-02-24 00:02:49,069 - SELECT day(ledger.general_ledger_date) AS time, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_1)s END) - sum(CASE WHEN (ledger.ledger_description = %(ledger_description_3)s AND ledger.amount > %(amount_3)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_4)s AND ledger.amount < %(amount_4)s) THEN -ledger.amount ELSE %(param_2)s END) AS net_profit 
FROM ledger 
WHERE ledger.general_ledger_date BETWEEN %(general_ledger_date_1)s AND %(general_ledger_date_2)s GROUP BY day(ledger.general_ledger_date) ORDER BY day(ledger.general_ledger_date)
2025-02-24 00:02:49,103 - [cached since 31.31s ago] {'ledger_description_1': 'Expenses', 'amount_1': 0, 'param_1': 0, 'ledger_description_2': 'Revenues', 'amount_2': 0, 'param_2': 0, 'general_ledger_date_1': '2020-11-29', 'general_ledger_date_2': '2020-11-30', 'param_3': 10}
2025-02-24 00:02:49,104 - [cached since 31.04s ago] {'ledger_description_1': 'Revenues', 'amount_1': 0, 'ledger_description_2': 'Expenses', 'amount_2': 0, 'param_1': 0, 'ledger_description_3': 'Expenses', 'amount_3': 0, 'ledger_description_4': 'Revenues', 'amount_4': 0, 'param_2': 0, 'nullif_1': 0, 'general_ledger_date_1': '2020-11-29', 'general_ledger_date_2': '2020-11-30'}
2025-02-24 00:02:49,107 - [cached since 31.28s ago] {'ledger_description_1': 'Revenues', 'amount_1': 0, 'ledger_description_2': 'Expenses', 'amount_2': 0, 'param_1': 0, 'ledger_description_3': 'Expenses', 'amount_3': 0, 'ledger_description_4': 'Revenues', 'amount_4': 0, 'param_2': 0, 'general_ledger_date_1': '2020-11-29', 'general_ledger_date_2': '2020-11-30'}
2025-02-24 00:02:49,112 - GET http://127.0.0.1:8000/api/top-roi/?start_date=2020-11-29&end_date=2020-11-30 - 0.15 ms
2025-02-24 00:02:49,129 - ROLLBACK
2025-02-24 00:02:49,140 - ROLLBACK
2025-02-24 00:02:49,159 - GET http://127.0.0.1:8000/api/top-budget/?start_date=2020-11-29&end_date=2020-11-30 - 0.18 ms
2025-02-24 00:02:49,168 - GET http://127.0.0.1:8000/api/revenue-expenses/?start_date=2020-11-29&end_date=2020-11-30 - 0.19 ms
2025-02-24 00:02:49,170 - ROLLBACK
2025-02-24 00:02:49,203 - GET http://127.0.0.1:8000/api/fund-table/?start_date=2020-11-29&end_date=2020-11-30 - 0.21 ms
2025-02-24 00:02:49,203 - ROLLBACK
2025-02-24 00:02:49,205 - GET http://127.0.0.1:8000/api/net-profit/?start_date=2020-11-29&end_date=2020-11-30 - 0.22 ms
2025-02-24 00:02:49,486 - BEGIN (implicit)
2025-02-24 00:02:49,532 - BEGIN (implicit)
2025-02-24 00:02:49,534 - BEGIN (implicit)
2025-02-24 00:02:49,538 - SELECT department.department_name AS department_department_name, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s) THEN ledger.amount ELSE %(param_1)s END) - sum(CASE WHEN (ledger.ledger_description = %(ledger_description_2)s) THEN ledger.amount ELSE %(param_2)s END) AS roi 
FROM ledger INNER JOIN department ON ledger.department_id = department.department_id 
WHERE ledger.general_ledger_date BETWEEN %(general_ledger_date_1)s AND %(general_ledger_date_2)s GROUP BY department.department_name ORDER BY sum(ledger.amount) DESC 
 LIMIT %(param_3)s
2025-02-24 00:02:49,543 - BEGIN (implicit)
2025-02-24 00:02:49,548 - BEGIN (implicit)
2025-02-24 00:02:49,550 - SELECT department.department_name AS department_department_name, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount ELSE %(param_1)s END + CASE WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_2)s END) AS total_expenditure 
FROM ledger INNER JOIN department ON ledger.department_id = department.department_id 
WHERE ledger.general_ledger_date BETWEEN %(general_ledger_date_1)s AND %(general_ledger_date_2)s GROUP BY department.department_name ORDER BY sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount ELSE %(param_1)s END + CASE WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_2)s END) DESC 
 LIMIT %(param_3)s
2025-02-24 00:02:49,551 - SELECT day(ledger.general_ledger_date) AS time, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_1)s END) AS total_revenue, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_3)s AND ledger.amount > %(amount_3)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_4)s AND ledger.amount < %(amount_4)s) THEN -ledger.amount ELSE %(param_2)s END) AS total_expenses 
FROM ledger 
WHERE ledger.general_ledger_date BETWEEN %(general_ledger_date_1)s AND %(general_ledger_date_2)s GROUP BY day(ledger.general_ledger_date) ORDER BY day(ledger.general_ledger_date)
2025-02-24 00:02:49,554 - [cached since 31.56s ago] {'ledger_description_1': 'Revenues', 'param_1': 0, 'ledger_description_2': 'Expenses', 'param_2': 0, 'general_ledger_date_1': '2020-11-29', 'general_ledger_date_2': '2020-11-30', 'param_3': 5}
2025-02-24 00:02:49,555 - SELECT fund.fund_description AS fund_fund_description, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_1)s END) AS total_revenue, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_3)s AND ledger.amount > %(amount_3)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_4)s AND ledger.amount < %(amount_4)s) THEN -ledger.amount ELSE %(param_2)s END) AS total_expenses, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_1)s END) / nullif(sum(CASE WHEN (ledger.ledger_description = %(ledger_description_3)s AND ledger.amount > %(amount_3)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_4)s AND ledger.amount < %(amount_4)s) THEN -ledger.amount ELSE %(param_2)s END), %(nullif_1)s) AS ratio, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_1)s END) - sum(CASE WHEN (ledger.ledger_description = %(ledger_description_3)s AND ledger.amount > %(amount_3)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_4)s AND ledger.amount < %(amount_4)s) THEN -ledger.amount ELSE %(param_2)s END) AS roi 
FROM ledger INNER JOIN fund ON ledger.fund_id = fund.fund_id 
WHERE ledger.general_ledger_date BETWEEN %(general_ledger_date_1)s AND %(general_ledger_date_2)s GROUP BY fund.fund_description ORDER BY roi DESC
2025-02-24 00:02:49,556 - SELECT day(ledger.general_ledger_date) AS time, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_1)s END) - sum(CASE WHEN (ledger.ledger_description = %(ledger_description_3)s AND ledger.amount > %(amount_3)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_4)s AND ledger.amount < %(amount_4)s) THEN -ledger.amount ELSE %(param_2)s END) AS net_profit 
FROM ledger 
WHERE ledger.general_ledger_date BETWEEN %(general_ledger_date_1)s AND %(general_ledger_date_2)s GROUP BY day(ledger.general_ledger_date) ORDER BY day(ledger.general_ledger_date)
2025-02-24 00:02:49,558 - [cached since 31.77s ago] {'ledger_description_1': 'Expenses', 'amount_1': 0, 'param_1': 0, 'ledger_description_2': 'Revenues', 'amount_2': 0, 'param_2': 0, 'general_ledger_date_1': '2020-11-29', 'general_ledger_date_2': '2020-11-30', 'param_3': 10}
2025-02-24 00:02:49,559 - [cached since 31.72s ago] {'ledger_description_1': 'Revenues', 'amount_1': 0, 'ledger_description_2': 'Expenses', 'amount_2': 0, 'param_1': 0, 'ledger_description_3': 'Expenses', 'amount_3': 0, 'ledger_description_4': 'Revenues', 'amount_4': 0, 'param_2': 0, 'general_ledger_date_1': '2020-11-29', 'general_ledger_date_2': '2020-11-30'}
2025-02-24 00:02:49,569 - [cached since 31.51s ago] {'ledger_description_1': 'Revenues', 'amount_1': 0, 'ledger_description_2': 'Expenses', 'amount_2': 0, 'param_1': 0, 'ledger_description_3': 'Expenses', 'amount_3': 0, 'ledger_description_4': 'Revenues', 'amount_4': 0, 'param_2': 0, 'nullif_1': 0, 'general_ledger_date_1': '2020-11-29', 'general_ledger_date_2': '2020-11-30'}
2025-02-24 00:02:49,592 - [cached since 31.75s ago] {'ledger_description_1': 'Revenues', 'amount_1': 0, 'ledger_description_2': 'Expenses', 'amount_2': 0, 'param_1': 0, 'ledger_description_3': 'Expenses', 'amount_3': 0, 'ledger_description_4': 'Revenues', 'amount_4': 0, 'param_2': 0, 'general_ledger_date_1': '2020-11-29', 'general_ledger_date_2': '2020-11-30'}
2025-02-24 00:02:49,611 - ROLLBACK
2025-02-24 00:02:49,612 - ROLLBACK
2025-02-24 00:02:49,634 - ROLLBACK
2025-02-24 00:02:49,668 - GET http://127.0.0.1:8000/api/top-roi/?start_date=2020-11-29&end_date=2020-11-30 - 0.37 ms
2025-02-24 00:02:49,674 - GET http://127.0.0.1:8000/api/revenue-expenses/?start_date=2020-11-29&end_date=2020-11-30 - 0.36 ms
2025-02-24 00:02:49,678 - GET http://127.0.0.1:8000/api/top-budget/?start_date=2020-11-29&end_date=2020-11-30 - 0.36 ms
2025-02-24 00:02:49,728 - ROLLBACK
2025-02-24 00:02:49,735 - ROLLBACK
2025-02-24 00:02:49,742 - GET http://127.0.0.1:8000/api/fund-table/?start_date=2020-11-29&end_date=2020-11-30 - 0.37 ms
2025-02-24 00:02:49,745 - GET http://127.0.0.1:8000/api/net-profit/?start_date=2020-11-29&end_date=2020-11-30 - 0.41 ms
2025-02-24 00:03:12,584 - BEGIN (implicit)
2025-02-24 00:03:12,588 - SELECT department.department_name AS department_department_name, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s) THEN ledger.amount ELSE %(param_1)s END) - sum(CASE WHEN (ledger.ledger_description = %(ledger_description_2)s) THEN ledger.amount ELSE %(param_2)s END) AS roi 
FROM ledger INNER JOIN department ON ledger.department_id = department.department_id 
WHERE ledger.general_ledger_date BETWEEN %(general_ledger_date_1)s AND %(general_ledger_date_2)s GROUP BY department.department_name ORDER BY sum(ledger.amount) DESC 
 LIMIT %(param_3)s
2025-02-24 00:03:12,590 - [cached since 54.6s ago] {'ledger_description_1': 'Revenues', 'param_1': 0, 'ledger_description_2': 'Expenses', 'param_2': 0, 'general_ledger_date_1': '2020-11-29', 'general_ledger_date_2': '2020-12-01', 'param_3': 5}
2025-02-24 00:03:12,606 - BEGIN (implicit)
2025-02-24 00:03:12,621 - BEGIN (implicit)
2025-02-24 00:03:12,631 - BEGIN (implicit)
2025-02-24 00:03:12,635 - SELECT department.department_name AS department_department_name, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount ELSE %(param_1)s END + CASE WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_2)s END) AS total_expenditure 
FROM ledger INNER JOIN department ON ledger.department_id = department.department_id 
WHERE ledger.general_ledger_date BETWEEN %(general_ledger_date_1)s AND %(general_ledger_date_2)s GROUP BY department.department_name ORDER BY sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount ELSE %(param_1)s END + CASE WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_2)s END) DESC 
 LIMIT %(param_3)s
2025-02-24 00:03:12,639 - SELECT day(ledger.general_ledger_date) AS time, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_1)s END) AS total_revenue, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_3)s AND ledger.amount > %(amount_3)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_4)s AND ledger.amount < %(amount_4)s) THEN -ledger.amount ELSE %(param_2)s END) AS total_expenses 
FROM ledger 
WHERE ledger.general_ledger_date BETWEEN %(general_ledger_date_1)s AND %(general_ledger_date_2)s GROUP BY day(ledger.general_ledger_date) ORDER BY day(ledger.general_ledger_date)
2025-02-24 00:03:12,654 - BEGIN (implicit)
2025-02-24 00:03:12,657 - SELECT day(ledger.general_ledger_date) AS time, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_1)s END) - sum(CASE WHEN (ledger.ledger_description = %(ledger_description_3)s AND ledger.amount > %(amount_3)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_4)s AND ledger.amount < %(amount_4)s) THEN -ledger.amount ELSE %(param_2)s END) AS net_profit 
FROM ledger 
WHERE ledger.general_ledger_date BETWEEN %(general_ledger_date_1)s AND %(general_ledger_date_2)s GROUP BY day(ledger.general_ledger_date) ORDER BY day(ledger.general_ledger_date)
2025-02-24 00:03:12,661 - [cached since 54.87s ago] {'ledger_description_1': 'Expenses', 'amount_1': 0, 'param_1': 0, 'ledger_description_2': 'Revenues', 'amount_2': 0, 'param_2': 0, 'general_ledger_date_1': '2020-11-29', 'general_ledger_date_2': '2020-12-01', 'param_3': 10}
2025-02-24 00:03:12,670 - [cached since 54.84s ago] {'ledger_description_1': 'Revenues', 'amount_1': 0, 'ledger_description_2': 'Expenses', 'amount_2': 0, 'param_1': 0, 'ledger_description_3': 'Expenses', 'amount_3': 0, 'ledger_description_4': 'Revenues', 'amount_4': 0, 'param_2': 0, 'general_ledger_date_1': '2020-11-29', 'general_ledger_date_2': '2020-12-01'}
2025-02-24 00:03:12,666 - [cached since 54.83s ago] {'ledger_description_1': 'Revenues', 'amount_1': 0, 'ledger_description_2': 'Expenses', 'amount_2': 0, 'param_1': 0, 'ledger_description_3': 'Expenses', 'amount_3': 0, 'ledger_description_4': 'Revenues', 'amount_4': 0, 'param_2': 0, 'general_ledger_date_1': '2020-11-29', 'general_ledger_date_2': '2020-12-01'}
2025-02-24 00:03:12,699 - ROLLBACK
2025-02-24 00:03:12,664 - ROLLBACK
2025-02-24 00:03:12,668 - SELECT fund.fund_description AS fund_fund_description, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_1)s END) AS total_revenue, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_3)s AND ledger.amount > %(amount_3)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_4)s AND ledger.amount < %(amount_4)s) THEN -ledger.amount ELSE %(param_2)s END) AS total_expenses, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_1)s END) / nullif(sum(CASE WHEN (ledger.ledger_description = %(ledger_description_3)s AND ledger.amount > %(amount_3)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_4)s AND ledger.amount < %(amount_4)s) THEN -ledger.amount ELSE %(param_2)s END), %(nullif_1)s) AS ratio, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_1)s END) - sum(CASE WHEN (ledger.ledger_description = %(ledger_description_3)s AND ledger.amount > %(amount_3)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_4)s AND ledger.amount < %(amount_4)s) THEN -ledger.amount ELSE %(param_2)s END) AS roi 
FROM ledger INNER JOIN fund ON ledger.fund_id = fund.fund_id 
WHERE ledger.general_ledger_date BETWEEN %(general_ledger_date_1)s AND %(general_ledger_date_2)s GROUP BY fund.fund_description ORDER BY roi DESC
2025-02-24 00:03:12,719 - GET http://127.0.0.1:8000/api/net-profit/?start_date=2020-11-29&end_date=2020-12-01 - 0.13 ms
2025-02-24 00:03:12,714 - [cached since 54.65s ago] {'ledger_description_1': 'Revenues', 'amount_1': 0, 'ledger_description_2': 'Expenses', 'amount_2': 0, 'param_1': 0, 'ledger_description_3': 'Expenses', 'amount_3': 0, 'ledger_description_4': 'Revenues', 'amount_4': 0, 'param_2': 0, 'nullif_1': 0, 'general_ledger_date_1': '2020-11-29', 'general_ledger_date_2': '2020-12-01'}
2025-02-24 00:03:12,751 - GET http://127.0.0.1:8000/api/top-roi/?start_date=2020-11-29&end_date=2020-12-01 - 0.18 ms
2025-02-24 00:03:12,771 - ROLLBACK
2025-02-24 00:03:12,772 - ROLLBACK
2025-02-24 00:03:12,781 - ROLLBACK
2025-02-24 00:03:12,785 - GET http://127.0.0.1:8000/api/revenue-expenses/?start_date=2020-11-29&end_date=2020-12-01 - 0.20 ms
2025-02-24 00:03:12,786 - GET http://127.0.0.1:8000/api/fund-table/?start_date=2020-11-29&end_date=2020-12-01 - 0.18 ms
2025-02-24 00:03:12,795 - GET http://127.0.0.1:8000/api/top-budget/?start_date=2020-11-29&end_date=2020-12-01 - 0.22 ms
2025-02-24 00:03:27,249 - BEGIN (implicit)
2025-02-24 00:03:27,254 - SELECT cost_center.cost_center_description AS cost_center_cost_center_description, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s) THEN ledger.amount ELSE %(param_1)s END) - sum(CASE WHEN (ledger.ledger_description = %(ledger_description_2)s) THEN ledger.amount ELSE %(param_2)s END) AS roi 
FROM ledger INNER JOIN cost_center ON ledger.cost_center_id = cost_center.cost_center_id 
WHERE ledger.department_id = %(department_id_1)s AND ledger.general_ledger_date BETWEEN %(general_ledger_date_1)s AND %(general_ledger_date_2)s GROUP BY cost_center.cost_center_description ORDER BY sum(ledger.amount) DESC 
 LIMIT %(param_3)s
2025-02-24 00:03:27,264 - BEGIN (implicit)
2025-02-24 00:03:27,267 - BEGIN (implicit)
2025-02-24 00:03:27,268 - [cached since 1975s ago] {'ledger_description_1': 'Revenues', 'param_1': 0, 'ledger_description_2': 'Expenses', 'param_2': 0, 'department_id_1': 102, 'general_ledger_date_1': '2020-11-29', 'general_ledger_date_2': '2020-12-01', 'param_3': 5}
2025-02-24 00:03:27,273 - BEGIN (implicit)
2025-02-24 00:03:27,359 - SELECT day(ledger.general_ledger_date) AS time, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_1)s END) AS total_revenue, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_3)s AND ledger.amount > %(amount_3)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_4)s AND ledger.amount < %(amount_4)s) THEN -ledger.amount ELSE %(param_2)s END) AS total_expenses 
FROM ledger 
WHERE ledger.department_id = %(department_id_1)s AND ledger.general_ledger_date BETWEEN %(general_ledger_date_1)s AND %(general_ledger_date_2)s GROUP BY day(ledger.general_ledger_date) ORDER BY day(ledger.general_ledger_date)
2025-02-24 00:03:27,365 - SELECT day(ledger.general_ledger_date) AS time, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_1)s END) - sum(CASE WHEN (ledger.ledger_description = %(ledger_description_3)s AND ledger.amount > %(amount_3)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_4)s AND ledger.amount < %(amount_4)s) THEN -ledger.amount ELSE %(param_2)s END) AS net_profit 
FROM ledger 
WHERE ledger.department_id = %(department_id_1)s AND ledger.general_ledger_date BETWEEN %(general_ledger_date_1)s AND %(general_ledger_date_2)s GROUP BY day(ledger.general_ledger_date) ORDER BY day(ledger.general_ledger_date)
2025-02-24 00:03:27,369 - SELECT cost_center.cost_center_description AS cost_center_cost_center_description, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount ELSE %(param_1)s END + CASE WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_2)s END) AS total_expenditure 
FROM ledger INNER JOIN cost_center ON ledger.cost_center_id = cost_center.cost_center_id 
WHERE ledger.department_id = %(department_id_1)s AND ledger.general_ledger_date BETWEEN %(general_ledger_date_1)s AND %(general_ledger_date_2)s GROUP BY cost_center.cost_center_description ORDER BY sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount ELSE %(param_1)s END + CASE WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_2)s END) DESC 
 LIMIT %(param_3)s
2025-02-24 00:03:27,434 - [cached since 1975s ago] {'ledger_description_1': 'Expenses', 'amount_1': 0, 'param_1': 0, 'ledger_description_2': 'Revenues', 'amount_2': 0, 'param_2': 0, 'department_id_1': 102, 'general_ledger_date_1': '2020-11-29', 'general_ledger_date_2': '2020-12-01', 'param_3': 10}
2025-02-24 00:03:27,431 - [generated in 0.06579s] {'ledger_description_1': 'Revenues', 'amount_1': 0, 'ledger_description_2': 'Expenses', 'amount_2': 0, 'param_1': 0, 'ledger_description_3': 'Expenses', 'amount_3': 0, 'ledger_description_4': 'Revenues', 'amount_4': 0, 'param_2': 0, 'department_id_1': 102, 'general_ledger_date_1': '2020-11-29', 'general_ledger_date_2': '2020-12-01'}
2025-02-24 00:03:27,371 - [generated in 0.01268s] {'ledger_description_1': 'Revenues', 'amount_1': 0, 'ledger_description_2': 'Expenses', 'amount_2': 0, 'param_1': 0, 'ledger_description_3': 'Expenses', 'amount_3': 0, 'ledger_description_4': 'Revenues', 'amount_4': 0, 'param_2': 0, 'department_id_1': 102, 'general_ledger_date_1': '2020-11-29', 'general_ledger_date_2': '2020-12-01'}
2025-02-24 00:03:27,438 - BEGIN (implicit)
2025-02-24 00:03:27,515 - ROLLBACK
2025-02-24 00:03:27,522 - ROLLBACK
2025-02-24 00:03:27,547 - GET http://127.0.0.1:8000/api/revenue-expenses/?department=102&start_date=2020-11-29&end_date=2020-12-01 - 0.32 ms
2025-02-24 00:03:27,605 - GET http://127.0.0.1:8000/api/net-profit/?department=102&start_date=2020-11-29&end_date=2020-12-01 - 0.38 ms
2025-02-24 00:03:27,588 - SELECT fund.fund_description AS fund_fund_description, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_1)s END) AS total_revenue, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_3)s AND ledger.amount > %(amount_3)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_4)s AND ledger.amount < %(amount_4)s) THEN -ledger.amount ELSE %(param_2)s END) AS total_expenses, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_1)s END) / nullif(sum(CASE WHEN (ledger.ledger_description = %(ledger_description_3)s AND ledger.amount > %(amount_3)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_4)s AND ledger.amount < %(amount_4)s) THEN -ledger.amount ELSE %(param_2)s END), %(nullif_1)s) AS ratio, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_1)s END) - sum(CASE WHEN (ledger.ledger_description = %(ledger_description_3)s AND ledger.amount > %(amount_3)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_4)s AND ledger.amount < %(amount_4)s) THEN -ledger.amount ELSE %(param_2)s END) AS roi 
FROM ledger INNER JOIN fund ON ledger.fund_id = fund.fund_id 
WHERE ledger.department_id = %(department_id_1)s AND ledger.general_ledger_date BETWEEN %(general_ledger_date_1)s AND %(general_ledger_date_2)s GROUP BY fund.fund_description ORDER BY roi DESC
2025-02-24 00:03:27,607 - [cached since 1975s ago] {'ledger_description_1': 'Revenues', 'amount_1': 0, 'ledger_description_2': 'Expenses', 'amount_2': 0, 'param_1': 0, 'ledger_description_3': 'Expenses', 'amount_3': 0, 'ledger_description_4': 'Revenues', 'amount_4': 0, 'param_2': 0, 'nullif_1': 0, 'department_id_1': 102, 'general_ledger_date_1': '2020-11-29', 'general_ledger_date_2': '2020-12-01'}
2025-02-24 00:03:27,654 - ROLLBACK
2025-02-24 00:03:27,655 - ROLLBACK
2025-02-24 00:03:27,664 - GET http://127.0.0.1:8000/api/top-budget/?department=102&start_date=2020-11-29&end_date=2020-12-01 - 0.43 ms
2025-02-24 00:03:27,662 - ROLLBACK
2025-02-24 00:03:27,682 - GET http://127.0.0.1:8000/api/top-roi/?department=102&start_date=2020-11-29&end_date=2020-12-01 - 0.46 ms
2025-02-24 00:03:27,688 - GET http://127.0.0.1:8000/api/fund-table/?department=102&start_date=2020-11-29&end_date=2020-12-01 - 0.45 ms
2025-02-24 00:03:39,526 - BEGIN (implicit)
2025-02-24 00:03:39,553 - BEGIN (implicit)
2025-02-24 00:03:39,556 - SELECT department.department_name AS department_department_name, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s) THEN ledger.amount ELSE %(param_1)s END) - sum(CASE WHEN (ledger.ledger_description = %(ledger_description_2)s) THEN ledger.amount ELSE %(param_2)s END) AS roi 
FROM ledger INNER JOIN department ON ledger.department_id = department.department_id 
WHERE ledger.general_ledger_date BETWEEN %(general_ledger_date_1)s AND %(general_ledger_date_2)s GROUP BY department.department_name ORDER BY sum(ledger.amount) DESC 
 LIMIT %(param_3)s
2025-02-24 00:03:39,565 - BEGIN (implicit)
2025-02-24 00:03:39,576 - BEGIN (implicit)
2025-02-24 00:03:39,579 - SELECT department.department_name AS department_department_name, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount ELSE %(param_1)s END + CASE WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_2)s END) AS total_expenditure 
FROM ledger INNER JOIN department ON ledger.department_id = department.department_id 
WHERE ledger.general_ledger_date BETWEEN %(general_ledger_date_1)s AND %(general_ledger_date_2)s GROUP BY department.department_name ORDER BY sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount ELSE %(param_1)s END + CASE WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_2)s END) DESC 
 LIMIT %(param_3)s
2025-02-24 00:03:39,594 - SELECT day(ledger.general_ledger_date) AS time, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_1)s END) AS total_revenue, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_3)s AND ledger.amount > %(amount_3)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_4)s AND ledger.amount < %(amount_4)s) THEN -ledger.amount ELSE %(param_2)s END) AS total_expenses 
FROM ledger 
WHERE ledger.general_ledger_date BETWEEN %(general_ledger_date_1)s AND %(general_ledger_date_2)s GROUP BY day(ledger.general_ledger_date) ORDER BY day(ledger.general_ledger_date)
2025-02-24 00:03:39,580 - [cached since 81.59s ago] {'ledger_description_1': 'Revenues', 'param_1': 0, 'ledger_description_2': 'Expenses', 'param_2': 0, 'general_ledger_date_1': '2020-11-29', 'general_ledger_date_2': '2020-12-01', 'param_3': 5}
2025-02-24 00:03:39,596 - SELECT day(ledger.general_ledger_date) AS time, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_1)s END) - sum(CASE WHEN (ledger.ledger_description = %(ledger_description_3)s AND ledger.amount > %(amount_3)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_4)s AND ledger.amount < %(amount_4)s) THEN -ledger.amount ELSE %(param_2)s END) AS net_profit 
FROM ledger 
WHERE ledger.general_ledger_date BETWEEN %(general_ledger_date_1)s AND %(general_ledger_date_2)s GROUP BY day(ledger.general_ledger_date) ORDER BY day(ledger.general_ledger_date)
2025-02-24 00:03:39,602 - BEGIN (implicit)
2025-02-24 00:03:39,612 - [cached since 81.82s ago] {'ledger_description_1': 'Expenses', 'amount_1': 0, 'param_1': 0, 'ledger_description_2': 'Revenues', 'amount_2': 0, 'param_2': 0, 'general_ledger_date_1': '2020-11-29', 'general_ledger_date_2': '2020-12-01', 'param_3': 10}
2025-02-24 00:03:39,615 - [cached since 81.78s ago] {'ledger_description_1': 'Revenues', 'amount_1': 0, 'ledger_description_2': 'Expenses', 'amount_2': 0, 'param_1': 0, 'ledger_description_3': 'Expenses', 'amount_3': 0, 'ledger_description_4': 'Revenues', 'amount_4': 0, 'param_2': 0, 'general_ledger_date_1': '2020-11-29', 'general_ledger_date_2': '2020-12-01'}
2025-02-24 00:03:39,617 - [cached since 81.79s ago] {'ledger_description_1': 'Revenues', 'amount_1': 0, 'ledger_description_2': 'Expenses', 'amount_2': 0, 'param_1': 0, 'ledger_description_3': 'Expenses', 'amount_3': 0, 'ledger_description_4': 'Revenues', 'amount_4': 0, 'param_2': 0, 'general_ledger_date_1': '2020-11-29', 'general_ledger_date_2': '2020-12-01'}
2025-02-24 00:03:39,620 - SELECT fund.fund_description AS fund_fund_description, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_1)s END) AS total_revenue, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_3)s AND ledger.amount > %(amount_3)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_4)s AND ledger.amount < %(amount_4)s) THEN -ledger.amount ELSE %(param_2)s END) AS total_expenses, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_1)s END) / nullif(sum(CASE WHEN (ledger.ledger_description = %(ledger_description_3)s AND ledger.amount > %(amount_3)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_4)s AND ledger.amount < %(amount_4)s) THEN -ledger.amount ELSE %(param_2)s END), %(nullif_1)s) AS ratio, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_1)s END) - sum(CASE WHEN (ledger.ledger_description = %(ledger_description_3)s AND ledger.amount > %(amount_3)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_4)s AND ledger.amount < %(amount_4)s) THEN -ledger.amount ELSE %(param_2)s END) AS roi 
FROM ledger INNER JOIN fund ON ledger.fund_id = fund.fund_id 
WHERE ledger.general_ledger_date BETWEEN %(general_ledger_date_1)s AND %(general_ledger_date_2)s GROUP BY fund.fund_description ORDER BY roi DESC
2025-02-24 00:03:39,628 - [cached since 81.57s ago] {'ledger_description_1': 'Revenues', 'amount_1': 0, 'ledger_description_2': 'Expenses', 'amount_2': 0, 'param_1': 0, 'ledger_description_3': 'Expenses', 'amount_3': 0, 'ledger_description_4': 'Revenues', 'amount_4': 0, 'param_2': 0, 'nullif_1': 0, 'general_ledger_date_1': '2020-11-29', 'general_ledger_date_2': '2020-12-01'}
2025-02-24 00:03:39,651 - ROLLBACK
2025-02-24 00:03:39,654 - ROLLBACK
2025-02-24 00:03:39,657 - ROLLBACK
2025-02-24 00:03:39,666 - ROLLBACK
2025-02-24 00:03:39,669 - GET http://127.0.0.1:8000/api/top-roi/?start_date=2020-11-29&end_date=2020-12-01 - 0.22 ms
2025-02-24 00:03:39,697 - GET http://127.0.0.1:8000/api/top-budget/?start_date=2020-11-29&end_date=2020-12-01 - 0.24 ms
2025-02-24 00:03:39,700 - GET http://127.0.0.1:8000/api/net-profit/?start_date=2020-11-29&end_date=2020-12-01 - 0.21 ms
2025-02-24 00:03:39,719 - GET http://127.0.0.1:8000/api/revenue-expenses/?start_date=2020-11-29&end_date=2020-12-01 - 0.24 ms
2025-02-24 00:03:39,752 - ROLLBACK
2025-02-24 00:03:39,755 - GET http://127.0.0.1:8000/api/fund-table/?start_date=2020-11-29&end_date=2020-12-01 - 0.26 ms
2025-02-24 09:36:24,033 - GET http://127.0.0.1:8000/docs - 0.00 ms
2025-02-24 09:36:24,456 - GET http://127.0.0.1:8000/openapi.json - 0.02 ms
2025-02-24 09:37:49,219 - GET http://127.0.0.1:8000/api/initialise/ - 0.00 ms
2025-02-24 09:37:49,400 - GET http://127.0.0.1:8000/api/initialise/ - 0.01 ms
2025-02-24 09:37:49,434 - SELECT DATABASE()
2025-02-24 09:37:49,435 - [raw sql] {}
2025-02-24 09:37:49,437 - SELECT @@sql_mode
2025-02-24 09:37:49,437 - [raw sql] {}
2025-02-24 09:37:49,438 - SELECT @@lower_case_table_names
2025-02-24 09:37:49,439 - [raw sql] {}
2025-02-24 09:37:49,440 - BEGIN (implicit)
2025-02-24 09:37:49,441 - BEGIN (implicit)
2025-02-24 09:37:49,464 - SELECT year(ledger.general_ledger_date) AS time, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_1)s END) AS total_revenue, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_3)s AND ledger.amount > %(amount_3)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_4)s AND ledger.amount < %(amount_4)s) THEN -ledger.amount ELSE %(param_2)s END) AS total_expenses 
FROM ledger GROUP BY year(ledger.general_ledger_date) ORDER BY year(ledger.general_ledger_date)
2025-02-24 09:37:49,464 - BEGIN (implicit)
2025-02-24 09:37:49,466 - SELECT fund.fund_description AS fund_fund_description, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_1)s END) AS total_revenue, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_3)s AND ledger.amount > %(amount_3)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_4)s AND ledger.amount < %(amount_4)s) THEN -ledger.amount ELSE %(param_2)s END) AS total_expenses, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_1)s END) / nullif(sum(CASE WHEN (ledger.ledger_description = %(ledger_description_3)s AND ledger.amount > %(amount_3)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_4)s AND ledger.amount < %(amount_4)s) THEN -ledger.amount ELSE %(param_2)s END), %(nullif_1)s) AS ratio, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_1)s END) - sum(CASE WHEN (ledger.ledger_description = %(ledger_description_3)s AND ledger.amount > %(amount_3)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_4)s AND ledger.amount < %(amount_4)s) THEN -ledger.amount ELSE %(param_2)s END) AS roi 
FROM ledger INNER JOIN fund ON ledger.fund_id = fund.fund_id GROUP BY fund.fund_description ORDER BY roi DESC
2025-02-24 09:37:49,466 - BEGIN (implicit)
2025-02-24 09:37:49,466 - [generated in 0.00238s] {'ledger_description_1': 'Revenues', 'amount_1': 0, 'ledger_description_2': 'Expenses', 'amount_2': 0, 'param_1': 0, 'ledger_description_3': 'Expenses', 'amount_3': 0, 'ledger_description_4': 'Revenues', 'amount_4': 0, 'param_2': 0}
2025-02-24 09:37:49,466 - BEGIN (implicit)
2025-02-24 09:37:49,469 - SELECT department.department_name AS department_department_name, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount ELSE %(param_1)s END + CASE WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_2)s END) AS total_expenditure 
FROM ledger INNER JOIN department ON ledger.department_id = department.department_id GROUP BY department.department_name ORDER BY sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount ELSE %(param_1)s END + CASE WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_2)s END) DESC 
 LIMIT %(param_3)s
2025-02-24 09:37:49,470 - [generated in 0.00406s] {'ledger_description_1': 'Revenues', 'amount_1': 0, 'ledger_description_2': 'Expenses', 'amount_2': 0, 'param_1': 0, 'ledger_description_3': 'Expenses', 'amount_3': 0, 'ledger_description_4': 'Revenues', 'amount_4': 0, 'param_2': 0, 'nullif_1': 0}
2025-02-24 09:37:49,473 - SELECT department.department_name AS department_department_name, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s) THEN ledger.amount ELSE %(param_1)s END) - sum(CASE WHEN (ledger.ledger_description = %(ledger_description_2)s) THEN ledger.amount ELSE %(param_2)s END) AS roi 
FROM ledger INNER JOIN department ON ledger.department_id = department.department_id GROUP BY department.department_name ORDER BY sum(ledger.amount) DESC 
 LIMIT %(param_3)s
2025-02-24 09:37:49,476 - SELECT year(ledger.general_ledger_date) AS time, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_1)s END) - sum(CASE WHEN (ledger.ledger_description = %(ledger_description_3)s AND ledger.amount > %(amount_3)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_4)s AND ledger.amount < %(amount_4)s) THEN -ledger.amount ELSE %(param_2)s END) AS net_profit 
FROM ledger GROUP BY year(ledger.general_ledger_date) ORDER BY year(ledger.general_ledger_date)
2025-02-24 09:37:49,477 - [generated in 0.00741s] {'ledger_description_1': 'Expenses', 'amount_1': 0, 'param_1': 0, 'ledger_description_2': 'Revenues', 'amount_2': 0, 'param_2': 0, 'param_3': 10}
2025-02-24 09:37:49,478 - [generated in 0.00563s] {'ledger_description_1': 'Revenues', 'param_1': 0, 'ledger_description_2': 'Expenses', 'param_2': 0, 'param_3': 5}
2025-02-24 09:37:49,479 - [generated in 0.00249s] {'ledger_description_1': 'Revenues', 'amount_1': 0, 'ledger_description_2': 'Expenses', 'amount_2': 0, 'param_1': 0, 'ledger_description_3': 'Expenses', 'amount_3': 0, 'ledger_description_4': 'Revenues', 'amount_4': 0, 'param_2': 0}
2025-02-24 09:37:51,775 - BEGIN (implicit)
2025-02-24 09:37:51,778 - SELECT department.department_id AS department_department_id, department.department_name AS department_department_name 
FROM department
2025-02-24 09:37:51,779 - [generated in 0.00180s] {}
2025-02-24 09:37:51,787 - SELECT min(ledger.general_ledger_date) AS min_1 
FROM ledger
2025-02-24 09:37:51,787 - [generated in 0.00071s] {}
2025-02-24 09:37:51,792 - SELECT max(ledger.general_ledger_date) AS max_1 
FROM ledger
2025-02-24 09:37:51,792 - [generated in 0.00070s] {}
2025-02-24 09:37:51,797 - ROLLBACK
2025-02-24 09:37:51,800 - GET http://127.0.0.1:8000/api/initialise - 0.04 ms
2025-02-24 09:37:51,836 - BEGIN (implicit)
2025-02-24 09:37:51,838 - SELECT department.department_id AS department_department_id, department.department_name AS department_department_name 
FROM department
2025-02-24 09:37:51,838 - [cached since 0.061s ago] {}
2025-02-24 09:37:51,843 - SELECT min(ledger.general_ledger_date) AS min_1 
FROM ledger
2025-02-24 09:37:51,844 - [cached since 0.05686s ago] {}
2025-02-24 09:37:51,847 - SELECT max(ledger.general_ledger_date) AS max_1 
FROM ledger
2025-02-24 09:37:51,848 - [cached since 0.05609s ago] {}
2025-02-24 09:37:51,870 - ROLLBACK
2025-02-24 09:37:51,880 - GET http://127.0.0.1:8000/api/initialise - 0.04 ms
2025-02-24 09:37:52,647 - ROLLBACK
2025-02-24 09:37:52,650 - GET http://127.0.0.1:8000/api/revenue-expenses/ - 3.26 ms
2025-02-24 09:37:52,699 - BEGIN (implicit)
2025-02-24 09:37:52,701 - SELECT year(ledger.general_ledger_date) AS time, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_1)s END) AS total_revenue, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_3)s AND ledger.amount > %(amount_3)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_4)s AND ledger.amount < %(amount_4)s) THEN -ledger.amount ELSE %(param_2)s END) AS total_expenses 
FROM ledger GROUP BY year(ledger.general_ledger_date) ORDER BY year(ledger.general_ledger_date)
2025-02-24 09:37:52,702 - [cached since 3.237s ago] {'ledger_description_1': 'Revenues', 'amount_1': 0, 'ledger_description_2': 'Expenses', 'amount_2': 0, 'param_1': 0, 'ledger_description_3': 'Expenses', 'amount_3': 0, 'ledger_description_4': 'Revenues', 'amount_4': 0, 'param_2': 0}
2025-02-24 09:37:52,750 - ROLLBACK
2025-02-24 09:37:52,752 - GET http://127.0.0.1:8000/api/net-profit/ - 3.36 ms
2025-02-24 09:37:52,765 - BEGIN (implicit)
2025-02-24 09:37:52,767 - SELECT year(ledger.general_ledger_date) AS time, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_1)s END) - sum(CASE WHEN (ledger.ledger_description = %(ledger_description_3)s AND ledger.amount > %(amount_3)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_4)s AND ledger.amount < %(amount_4)s) THEN -ledger.amount ELSE %(param_2)s END) AS net_profit 
FROM ledger GROUP BY year(ledger.general_ledger_date) ORDER BY year(ledger.general_ledger_date)
2025-02-24 09:37:52,767 - [cached since 3.291s ago] {'ledger_description_1': 'Revenues', 'amount_1': 0, 'ledger_description_2': 'Expenses', 'amount_2': 0, 'param_1': 0, 'ledger_description_3': 'Expenses', 'amount_3': 0, 'ledger_description_4': 'Revenues', 'amount_4': 0, 'param_2': 0}
2025-02-24 09:37:54,146 - ROLLBACK
2025-02-24 09:37:54,148 - GET http://127.0.0.1:8000/api/top-roi/ - 4.77 ms
2025-02-24 09:37:54,155 - BEGIN (implicit)
2025-02-24 09:37:54,156 - SELECT department.department_name AS department_department_name, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s) THEN ledger.amount ELSE %(param_1)s END) - sum(CASE WHEN (ledger.ledger_description = %(ledger_description_2)s) THEN ledger.amount ELSE %(param_2)s END) AS roi 
FROM ledger INNER JOIN department ON ledger.department_id = department.department_id GROUP BY department.department_name ORDER BY sum(ledger.amount) DESC 
 LIMIT %(param_3)s
2025-02-24 09:37:54,157 - [cached since 4.685s ago] {'ledger_description_1': 'Revenues', 'param_1': 0, 'ledger_description_2': 'Expenses', 'param_2': 0, 'param_3': 5}
2025-02-24 09:37:54,266 - ROLLBACK
2025-02-24 09:37:54,269 - GET http://127.0.0.1:8000/api/top-budget/ - 4.88 ms
2025-02-24 09:37:54,276 - BEGIN (implicit)
2025-02-24 09:37:54,277 - SELECT department.department_name AS department_department_name, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount ELSE %(param_1)s END + CASE WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_2)s END) AS total_expenditure 
FROM ledger INNER JOIN department ON ledger.department_id = department.department_id GROUP BY department.department_name ORDER BY sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount ELSE %(param_1)s END + CASE WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_2)s END) DESC 
 LIMIT %(param_3)s
2025-02-24 09:37:54,278 - [cached since 4.808s ago] {'ledger_description_1': 'Expenses', 'amount_1': 0, 'param_1': 0, 'ledger_description_2': 'Revenues', 'amount_2': 0, 'param_2': 0, 'param_3': 10}
2025-02-24 09:37:55,241 - ROLLBACK
2025-02-24 09:37:55,243 - GET http://127.0.0.1:8000/api/revenue-expenses/ - 2.55 ms
2025-02-24 09:37:55,250 - ROLLBACK
2025-02-24 09:37:55,252 - GET http://127.0.0.1:8000/api/net-profit/ - 2.49 ms
2025-02-24 09:37:55,764 - ROLLBACK
2025-02-24 09:37:55,766 - GET http://127.0.0.1:8000/api/fund-table/ - 6.38 ms
2025-02-24 09:37:55,772 - BEGIN (implicit)
2025-02-24 09:37:55,773 - SELECT fund.fund_description AS fund_fund_description, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_1)s END) AS total_revenue, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_3)s AND ledger.amount > %(amount_3)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_4)s AND ledger.amount < %(amount_4)s) THEN -ledger.amount ELSE %(param_2)s END) AS total_expenses, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_1)s END) / nullif(sum(CASE WHEN (ledger.ledger_description = %(ledger_description_3)s AND ledger.amount > %(amount_3)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_4)s AND ledger.amount < %(amount_4)s) THEN -ledger.amount ELSE %(param_2)s END), %(nullif_1)s) AS ratio, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_1)s END) - sum(CASE WHEN (ledger.ledger_description = %(ledger_description_3)s AND ledger.amount > %(amount_3)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_4)s AND ledger.amount < %(amount_4)s) THEN -ledger.amount ELSE %(param_2)s END) AS roi 
FROM ledger INNER JOIN fund ON ledger.fund_id = fund.fund_id GROUP BY fund.fund_description ORDER BY roi DESC
2025-02-24 09:37:55,774 - [cached since 6.308s ago] {'ledger_description_1': 'Revenues', 'amount_1': 0, 'ledger_description_2': 'Expenses', 'amount_2': 0, 'param_1': 0, 'ledger_description_3': 'Expenses', 'amount_3': 0, 'ledger_description_4': 'Revenues', 'amount_4': 0, 'param_2': 0, 'nullif_1': 0}
2025-02-24 09:37:56,973 - ROLLBACK
2025-02-24 09:37:56,974 - GET http://127.0.0.1:8000/api/top-roi/ - 2.82 ms
2025-02-24 09:37:57,156 - ROLLBACK
2025-02-24 09:37:57,158 - GET http://127.0.0.1:8000/api/top-budget/ - 2.89 ms
2025-02-24 09:37:58,513 - ROLLBACK
2025-02-24 09:37:58,515 - GET http://127.0.0.1:8000/api/fund-table/ - 2.75 ms
2025-02-24 09:56:57,952 - GET http://127.0.0.1:8000/api/initialise/ - 0.00 ms
2025-02-24 09:56:58,065 - GET http://127.0.0.1:8000/api/initialise/ - 0.01 ms
2025-02-24 09:56:58,103 - SELECT DATABASE()
2025-02-24 09:56:58,104 - [raw sql] {}
2025-02-24 09:56:58,106 - SELECT @@sql_mode
2025-02-24 09:56:58,106 - [raw sql] {}
2025-02-24 09:56:58,107 - SELECT @@lower_case_table_names
2025-02-24 09:56:58,107 - [raw sql] {}
2025-02-24 09:56:58,111 - BEGIN (implicit)
2025-02-24 09:56:58,124 - BEGIN (implicit)
2025-02-24 09:56:58,125 - SELECT year(ledger.general_ledger_date) AS time, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_1)s END) AS total_revenue, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_3)s AND ledger.amount > %(amount_3)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_4)s AND ledger.amount < %(amount_4)s) THEN -ledger.amount ELSE %(param_2)s END) AS total_expenses 
FROM ledger GROUP BY year(ledger.general_ledger_date) ORDER BY year(ledger.general_ledger_date)
2025-02-24 09:56:58,129 - SELECT year(ledger.general_ledger_date) AS time, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_1)s END) - sum(CASE WHEN (ledger.ledger_description = %(ledger_description_3)s AND ledger.amount > %(amount_3)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_4)s AND ledger.amount < %(amount_4)s) THEN -ledger.amount ELSE %(param_2)s END) AS net_profit 
FROM ledger GROUP BY year(ledger.general_ledger_date) ORDER BY year(ledger.general_ledger_date)
2025-02-24 09:56:58,129 - BEGIN (implicit)
2025-02-24 09:56:58,130 - BEGIN (implicit)
2025-02-24 09:56:58,130 - [generated in 0.00414s] {'ledger_description_1': 'Revenues', 'amount_1': 0, 'ledger_description_2': 'Expenses', 'amount_2': 0, 'param_1': 0, 'ledger_description_3': 'Expenses', 'amount_3': 0, 'ledger_description_4': 'Revenues', 'amount_4': 0, 'param_2': 0}
2025-02-24 09:56:58,130 - BEGIN (implicit)
2025-02-24 09:56:58,154 - [generated in 0.02595s] {'ledger_description_1': 'Revenues', 'amount_1': 0, 'ledger_description_2': 'Expenses', 'amount_2': 0, 'param_1': 0, 'ledger_description_3': 'Expenses', 'amount_3': 0, 'ledger_description_4': 'Revenues', 'amount_4': 0, 'param_2': 0}
2025-02-24 09:56:58,158 - SELECT department.department_name AS department_department_name, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount ELSE %(param_1)s END + CASE WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_2)s END) AS total_expenditure 
FROM ledger INNER JOIN department ON ledger.department_id = department.department_id GROUP BY department.department_name ORDER BY sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount ELSE %(param_1)s END + CASE WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_2)s END) DESC 
 LIMIT %(param_3)s
2025-02-24 09:56:58,165 - SELECT fund.fund_description AS fund_fund_description, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_1)s END) AS total_revenue, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_3)s AND ledger.amount > %(amount_3)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_4)s AND ledger.amount < %(amount_4)s) THEN -ledger.amount ELSE %(param_2)s END) AS total_expenses, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_1)s END) / nullif(sum(CASE WHEN (ledger.ledger_description = %(ledger_description_3)s AND ledger.amount > %(amount_3)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_4)s AND ledger.amount < %(amount_4)s) THEN -ledger.amount ELSE %(param_2)s END), %(nullif_1)s) AS ratio, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_1)s END) - sum(CASE WHEN (ledger.ledger_description = %(ledger_description_3)s AND ledger.amount > %(amount_3)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_4)s AND ledger.amount < %(amount_4)s) THEN -ledger.amount ELSE %(param_2)s END) AS roi 
FROM ledger INNER JOIN fund ON ledger.fund_id = fund.fund_id GROUP BY fund.fund_description ORDER BY roi DESC
2025-02-24 09:56:58,168 - SELECT department.department_name AS department_department_name, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s) THEN ledger.amount ELSE %(param_1)s END) - sum(CASE WHEN (ledger.ledger_description = %(ledger_description_2)s) THEN ledger.amount ELSE %(param_2)s END) AS roi 
FROM ledger INNER JOIN department ON ledger.department_id = department.department_id GROUP BY department.department_name ORDER BY sum(ledger.amount) DESC 
 LIMIT %(param_3)s
2025-02-24 09:56:58,169 - [generated in 0.01068s] {'ledger_description_1': 'Expenses', 'amount_1': 0, 'param_1': 0, 'ledger_description_2': 'Revenues', 'amount_2': 0, 'param_2': 0, 'param_3': 10}
2025-02-24 09:56:58,170 - [generated in 0.00478s] {'ledger_description_1': 'Revenues', 'amount_1': 0, 'ledger_description_2': 'Expenses', 'amount_2': 0, 'param_1': 0, 'ledger_description_3': 'Expenses', 'amount_3': 0, 'ledger_description_4': 'Revenues', 'amount_4': 0, 'param_2': 0, 'nullif_1': 0}
2025-02-24 09:56:58,170 - [generated in 0.00233s] {'ledger_description_1': 'Revenues', 'param_1': 0, 'ledger_description_2': 'Expenses', 'param_2': 0, 'param_3': 5}
2025-02-24 09:56:58,208 - BEGIN (implicit)
2025-02-24 09:56:58,210 - SELECT department.department_id AS department_department_id, department.department_name AS department_department_name 
FROM department
2025-02-24 09:56:58,211 - [generated in 0.00138s] {}
2025-02-24 09:56:58,241 - SELECT min(ledger.general_ledger_date) AS min_1 
FROM ledger
2025-02-24 09:56:58,247 - [generated in 0.00768s] {}
2025-02-24 09:56:58,267 - SELECT max(ledger.general_ledger_date) AS max_1 
FROM ledger
2025-02-24 09:56:58,271 - [generated in 0.00599s] {}
2025-02-24 09:56:58,285 - ROLLBACK
2025-02-24 09:56:58,287 - GET http://127.0.0.1:8000/api/initialise - 0.09 ms
2025-02-24 09:56:58,299 - BEGIN (implicit)
2025-02-24 09:56:58,301 - SELECT department.department_id AS department_department_id, department.department_name AS department_department_name 
FROM department
2025-02-24 09:56:58,303 - [cached since 0.0945s ago] {}
2025-02-24 09:56:58,314 - SELECT min(ledger.general_ledger_date) AS min_1 
FROM ledger
2025-02-24 09:56:58,316 - [cached since 0.07624s ago] {}
2025-02-24 09:56:58,318 - SELECT max(ledger.general_ledger_date) AS max_1 
FROM ledger
2025-02-24 09:56:58,320 - [cached since 0.05368s ago] {}
2025-02-24 09:56:58,324 - ROLLBACK
2025-02-24 09:56:58,332 - GET http://127.0.0.1:8000/api/initialise - 0.03 ms
2025-02-24 09:57:00,270 - ROLLBACK
2025-02-24 09:57:00,273 - ROLLBACK
2025-02-24 09:57:00,275 - GET http://127.0.0.1:8000/api/net-profit/ - 2.22 ms
2025-02-24 09:57:00,277 - GET http://127.0.0.1:8000/api/revenue-expenses/ - 2.22 ms
2025-02-24 09:57:00,286 - BEGIN (implicit)
2025-02-24 09:57:00,289 - SELECT year(ledger.general_ledger_date) AS time, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_1)s END) - sum(CASE WHEN (ledger.ledger_description = %(ledger_description_3)s AND ledger.amount > %(amount_3)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_4)s AND ledger.amount < %(amount_4)s) THEN -ledger.amount ELSE %(param_2)s END) AS net_profit 
FROM ledger GROUP BY year(ledger.general_ledger_date) ORDER BY year(ledger.general_ledger_date)
2025-02-24 09:57:00,291 - [cached since 2.162s ago] {'ledger_description_1': 'Revenues', 'amount_1': 0, 'ledger_description_2': 'Expenses', 'amount_2': 0, 'param_1': 0, 'ledger_description_3': 'Expenses', 'amount_3': 0, 'ledger_description_4': 'Revenues', 'amount_4': 0, 'param_2': 0}
2025-02-24 09:57:00,294 - BEGIN (implicit)
2025-02-24 09:57:00,296 - SELECT year(ledger.general_ledger_date) AS time, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_1)s END) AS total_revenue, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_3)s AND ledger.amount > %(amount_3)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_4)s AND ledger.amount < %(amount_4)s) THEN -ledger.amount ELSE %(param_2)s END) AS total_expenses 
FROM ledger GROUP BY year(ledger.general_ledger_date) ORDER BY year(ledger.general_ledger_date)
2025-02-24 09:57:00,298 - [cached since 2.172s ago] {'ledger_description_1': 'Revenues', 'amount_1': 0, 'ledger_description_2': 'Expenses', 'amount_2': 0, 'param_1': 0, 'ledger_description_3': 'Expenses', 'amount_3': 0, 'ledger_description_4': 'Revenues', 'amount_4': 0, 'param_2': 0}
2025-02-24 09:57:01,574 - ROLLBACK
2025-02-24 09:57:01,576 - GET http://127.0.0.1:8000/api/top-roi/ - 3.53 ms
2025-02-24 09:57:01,586 - BEGIN (implicit)
2025-02-24 09:57:01,588 - SELECT department.department_name AS department_department_name, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s) THEN ledger.amount ELSE %(param_1)s END) - sum(CASE WHEN (ledger.ledger_description = %(ledger_description_2)s) THEN ledger.amount ELSE %(param_2)s END) AS roi 
FROM ledger INNER JOIN department ON ledger.department_id = department.department_id GROUP BY department.department_name ORDER BY sum(ledger.amount) DESC 
 LIMIT %(param_3)s
2025-02-24 09:57:01,588 - [cached since 3.421s ago] {'ledger_description_1': 'Revenues', 'param_1': 0, 'ledger_description_2': 'Expenses', 'param_2': 0, 'param_3': 5}
2025-02-24 09:57:01,722 - ROLLBACK
2025-02-24 09:57:01,723 - GET http://127.0.0.1:8000/api/top-budget/ - 3.67 ms
2025-02-24 09:57:01,732 - BEGIN (implicit)
2025-02-24 09:57:01,732 - SELECT department.department_name AS department_department_name, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount ELSE %(param_1)s END + CASE WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_2)s END) AS total_expenditure 
FROM ledger INNER JOIN department ON ledger.department_id = department.department_id GROUP BY department.department_name ORDER BY sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount ELSE %(param_1)s END + CASE WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_2)s END) DESC 
 LIMIT %(param_3)s
2025-02-24 09:57:01,732 - [cached since 3.575s ago] {'ledger_description_1': 'Expenses', 'amount_1': 0, 'param_1': 0, 'ledger_description_2': 'Revenues', 'amount_2': 0, 'param_2': 0, 'param_3': 10}
2025-02-24 09:57:02,233 - ROLLBACK
2025-02-24 09:57:02,233 - ROLLBACK
2025-02-24 09:57:02,233 - GET http://127.0.0.1:8000/api/net-profit/ - 1.95 ms
2025-02-24 09:57:02,238 - GET http://127.0.0.1:8000/api/revenue-expenses/ - 1.95 ms
2025-02-24 09:57:03,077 - ROLLBACK
2025-02-24 09:57:03,080 - GET http://127.0.0.1:8000/api/fund-table/ - 5.03 ms
2025-02-24 09:57:03,084 - BEGIN (implicit)
2025-02-24 09:57:03,085 - SELECT fund.fund_description AS fund_fund_description, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_1)s END) AS total_revenue, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_3)s AND ledger.amount > %(amount_3)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_4)s AND ledger.amount < %(amount_4)s) THEN -ledger.amount ELSE %(param_2)s END) AS total_expenses, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_1)s END) / nullif(sum(CASE WHEN (ledger.ledger_description = %(ledger_description_3)s AND ledger.amount > %(amount_3)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_4)s AND ledger.amount < %(amount_4)s) THEN -ledger.amount ELSE %(param_2)s END), %(nullif_1)s) AS ratio, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_1)s END) - sum(CASE WHEN (ledger.ledger_description = %(ledger_description_3)s AND ledger.amount > %(amount_3)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_4)s AND ledger.amount < %(amount_4)s) THEN -ledger.amount ELSE %(param_2)s END) AS roi 
FROM ledger INNER JOIN fund ON ledger.fund_id = fund.fund_id GROUP BY fund.fund_description ORDER BY roi DESC
2025-02-24 09:57:03,085 - [cached since 4.922s ago] {'ledger_description_1': 'Revenues', 'amount_1': 0, 'ledger_description_2': 'Expenses', 'amount_2': 0, 'param_1': 0, 'ledger_description_3': 'Expenses', 'amount_3': 0, 'ledger_description_4': 'Revenues', 'amount_4': 0, 'param_2': 0, 'nullif_1': 0}
2025-02-24 09:57:04,227 - ROLLBACK
2025-02-24 09:57:04,227 - GET http://127.0.0.1:8000/api/top-roi/ - 2.64 ms
2025-02-24 09:57:04,444 - ROLLBACK
2025-02-24 09:57:04,446 - GET http://127.0.0.1:8000/api/top-budget/ - 2.72 ms
2025-02-24 09:57:06,437 - ROLLBACK
2025-02-24 09:57:06,438 - GET http://127.0.0.1:8000/api/fund-table/ - 3.36 ms
2025-02-24 10:28:18,013 - GET http://127.0.0.1:8000/api/initialise/ - 0.00 ms
2025-02-24 10:28:18,154 - GET http://127.0.0.1:8000/api/initialise/ - 0.01 ms
2025-02-24 10:28:18,159 - SELECT DATABASE()
2025-02-24 10:28:18,160 - [raw sql] {}
2025-02-24 10:28:18,162 - SELECT @@sql_mode
2025-02-24 10:28:18,162 - [raw sql] {}
2025-02-24 10:28:18,163 - SELECT @@lower_case_table_names
2025-02-24 10:28:18,163 - [raw sql] {}
2025-02-24 10:28:18,166 - BEGIN (implicit)
2025-02-24 10:28:18,172 - BEGIN (implicit)
2025-02-24 10:28:18,184 - SELECT department.department_name AS department_department_name, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s) THEN ledger.amount ELSE %(param_1)s END) - sum(CASE WHEN (ledger.ledger_description = %(ledger_description_2)s) THEN ledger.amount ELSE %(param_2)s END) AS roi 
FROM ledger INNER JOIN department ON ledger.department_id = department.department_id GROUP BY department.department_name ORDER BY sum(ledger.amount) DESC 
 LIMIT %(param_3)s
2025-02-24 10:28:18,193 - SELECT fund.fund_description AS fund_fund_description, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_1)s END) AS total_revenue, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_3)s AND ledger.amount > %(amount_3)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_4)s AND ledger.amount < %(amount_4)s) THEN -ledger.amount ELSE %(param_2)s END) AS total_expenses, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_1)s END) / nullif(sum(CASE WHEN (ledger.ledger_description = %(ledger_description_3)s AND ledger.amount > %(amount_3)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_4)s AND ledger.amount < %(amount_4)s) THEN -ledger.amount ELSE %(param_2)s END), %(nullif_1)s) AS ratio, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_1)s END) - sum(CASE WHEN (ledger.ledger_description = %(ledger_description_3)s AND ledger.amount > %(amount_3)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_4)s AND ledger.amount < %(amount_4)s) THEN -ledger.amount ELSE %(param_2)s END) AS roi 
FROM ledger INNER JOIN fund ON ledger.fund_id = fund.fund_id GROUP BY fund.fund_description ORDER BY roi DESC
2025-02-24 10:28:18,194 - BEGIN (implicit)
2025-02-24 10:28:18,194 - BEGIN (implicit)
2025-02-24 10:28:18,194 - [generated in 0.01001s] {'ledger_description_1': 'Revenues', 'param_1': 0, 'ledger_description_2': 'Expenses', 'param_2': 0, 'param_3': 5}
2025-02-24 10:28:18,194 - [generated in 0.00161s] {'ledger_description_1': 'Revenues', 'amount_1': 0, 'ledger_description_2': 'Expenses', 'amount_2': 0, 'param_1': 0, 'ledger_description_3': 'Expenses', 'amount_3': 0, 'ledger_description_4': 'Revenues', 'amount_4': 0, 'param_2': 0, 'nullif_1': 0}
2025-02-24 10:28:18,195 - BEGIN (implicit)
2025-02-24 10:28:18,198 - SELECT department.department_name AS department_department_name, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount ELSE %(param_1)s END + CASE WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_2)s END) AS total_expenditure 
FROM ledger INNER JOIN department ON ledger.department_id = department.department_id GROUP BY department.department_name ORDER BY sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount ELSE %(param_1)s END + CASE WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_2)s END) DESC 
 LIMIT %(param_3)s
2025-02-24 10:28:18,201 - SELECT year(ledger.general_ledger_date) AS time, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_1)s END) - sum(CASE WHEN (ledger.ledger_description = %(ledger_description_3)s AND ledger.amount > %(amount_3)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_4)s AND ledger.amount < %(amount_4)s) THEN -ledger.amount ELSE %(param_2)s END) AS net_profit 
FROM ledger GROUP BY year(ledger.general_ledger_date) ORDER BY year(ledger.general_ledger_date)
2025-02-24 10:28:18,205 - SELECT year(ledger.general_ledger_date) AS time, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_1)s END) AS total_revenue, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_3)s AND ledger.amount > %(amount_3)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_4)s AND ledger.amount < %(amount_4)s) THEN -ledger.amount ELSE %(param_2)s END) AS total_expenses 
FROM ledger GROUP BY year(ledger.general_ledger_date) ORDER BY year(ledger.general_ledger_date)
2025-02-24 10:28:18,206 - [generated in 0.00807s] {'ledger_description_1': 'Expenses', 'amount_1': 0, 'param_1': 0, 'ledger_description_2': 'Revenues', 'amount_2': 0, 'param_2': 0, 'param_3': 10}
2025-02-24 10:28:18,206 - [generated in 0.00526s] {'ledger_description_1': 'Revenues', 'amount_1': 0, 'ledger_description_2': 'Expenses', 'amount_2': 0, 'param_1': 0, 'ledger_description_3': 'Expenses', 'amount_3': 0, 'ledger_description_4': 'Revenues', 'amount_4': 0, 'param_2': 0}
2025-02-24 10:28:18,207 - [generated in 0.00152s] {'ledger_description_1': 'Revenues', 'amount_1': 0, 'ledger_description_2': 'Expenses', 'amount_2': 0, 'param_1': 0, 'ledger_description_3': 'Expenses', 'amount_3': 0, 'ledger_description_4': 'Revenues', 'amount_4': 0, 'param_2': 0}
2025-02-24 10:28:18,375 - BEGIN (implicit)
2025-02-24 10:28:18,377 - SELECT department.department_id AS department_department_id, department.department_name AS department_department_name 
FROM department
2025-02-24 10:28:18,377 - [generated in 0.00063s] {}
2025-02-24 10:28:18,390 - SELECT min(ledger.general_ledger_date) AS min_1 
FROM ledger
2025-02-24 10:28:18,391 - [generated in 0.00069s] {}
2025-02-24 10:28:18,395 - SELECT max(ledger.general_ledger_date) AS max_1 
FROM ledger
2025-02-24 10:28:18,395 - [generated in 0.00068s] {}
2025-02-24 10:28:18,407 - ROLLBACK
2025-02-24 10:28:18,413 - GET http://127.0.0.1:8000/api/initialise - 0.05 ms
2025-02-24 10:28:18,434 - BEGIN (implicit)
2025-02-24 10:28:18,435 - SELECT department.department_id AS department_department_id, department.department_name AS department_department_name 
FROM department
2025-02-24 10:28:18,436 - [cached since 0.0587s ago] {}
2025-02-24 10:28:18,439 - SELECT min(ledger.general_ledger_date) AS min_1 
FROM ledger
2025-02-24 10:28:18,440 - [cached since 0.0494s ago] {}
2025-02-24 10:28:18,442 - SELECT max(ledger.general_ledger_date) AS max_1 
FROM ledger
2025-02-24 10:28:18,442 - [cached since 0.0479s ago] {}
2025-02-24 10:28:18,446 - ROLLBACK
2025-02-24 10:28:18,450 - GET http://127.0.0.1:8000/api/initialise - 0.02 ms
2025-02-24 10:28:20,050 - ROLLBACK
2025-02-24 10:28:20,051 - GET http://127.0.0.1:8000/api/revenue-expenses/ - 1.91 ms
2025-02-24 10:28:20,057 - BEGIN (implicit)
2025-02-24 10:28:20,059 - SELECT year(ledger.general_ledger_date) AS time, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_1)s END) AS total_revenue, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_3)s AND ledger.amount > %(amount_3)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_4)s AND ledger.amount < %(amount_4)s) THEN -ledger.amount ELSE %(param_2)s END) AS total_expenses 
FROM ledger GROUP BY year(ledger.general_ledger_date) ORDER BY year(ledger.general_ledger_date)
2025-02-24 10:28:20,060 - [cached since 1.855s ago] {'ledger_description_1': 'Revenues', 'amount_1': 0, 'ledger_description_2': 'Expenses', 'amount_2': 0, 'param_1': 0, 'ledger_description_3': 'Expenses', 'amount_3': 0, 'ledger_description_4': 'Revenues', 'amount_4': 0, 'param_2': 0}
2025-02-24 10:28:20,061 - ROLLBACK
2025-02-24 10:28:20,063 - GET http://127.0.0.1:8000/api/net-profit/ - 1.92 ms
2025-02-24 10:28:20,068 - BEGIN (implicit)
2025-02-24 10:28:20,069 - SELECT year(ledger.general_ledger_date) AS time, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_1)s END) - sum(CASE WHEN (ledger.ledger_description = %(ledger_description_3)s AND ledger.amount > %(amount_3)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_4)s AND ledger.amount < %(amount_4)s) THEN -ledger.amount ELSE %(param_2)s END) AS net_profit 
FROM ledger GROUP BY year(ledger.general_ledger_date) ORDER BY year(ledger.general_ledger_date)
2025-02-24 10:28:20,069 - [cached since 1.869s ago] {'ledger_description_1': 'Revenues', 'amount_1': 0, 'ledger_description_2': 'Expenses', 'amount_2': 0, 'param_1': 0, 'ledger_description_3': 'Expenses', 'amount_3': 0, 'ledger_description_4': 'Revenues', 'amount_4': 0, 'param_2': 0}
2025-02-24 10:28:21,006 - ROLLBACK
2025-02-24 10:28:21,008 - GET http://127.0.0.1:8000/api/top-roi/ - 2.88 ms
2025-02-24 10:28:21,013 - BEGIN (implicit)
2025-02-24 10:28:21,015 - SELECT department.department_name AS department_department_name, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s) THEN ledger.amount ELSE %(param_1)s END) - sum(CASE WHEN (ledger.ledger_description = %(ledger_description_2)s) THEN ledger.amount ELSE %(param_2)s END) AS roi 
FROM ledger INNER JOIN department ON ledger.department_id = department.department_id GROUP BY department.department_name ORDER BY sum(ledger.amount) DESC 
 LIMIT %(param_3)s
2025-02-24 10:28:21,016 - [cached since 2.832s ago] {'ledger_description_1': 'Revenues', 'param_1': 0, 'ledger_description_2': 'Expenses', 'param_2': 0, 'param_3': 5}
2025-02-24 10:28:21,256 - ROLLBACK
2025-02-24 10:28:21,257 - GET http://127.0.0.1:8000/api/top-budget/ - 3.12 ms
2025-02-24 10:28:21,264 - BEGIN (implicit)
2025-02-24 10:28:21,266 - SELECT department.department_name AS department_department_name, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount ELSE %(param_1)s END + CASE WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_2)s END) AS total_expenditure 
FROM ledger INNER JOIN department ON ledger.department_id = department.department_id GROUP BY department.department_name ORDER BY sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount ELSE %(param_1)s END + CASE WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_2)s END) DESC 
 LIMIT %(param_3)s
2025-02-24 10:28:21,266 - [cached since 3.068s ago] {'ledger_description_1': 'Expenses', 'amount_1': 0, 'param_1': 0, 'ledger_description_2': 'Revenues', 'amount_2': 0, 'param_2': 0, 'param_3': 10}
2025-02-24 10:28:21,562 - ROLLBACK
2025-02-24 10:28:21,563 - ROLLBACK
2025-02-24 10:28:21,564 - GET http://127.0.0.1:8000/api/revenue-expenses/ - 1.51 ms
2025-02-24 10:28:21,565 - GET http://127.0.0.1:8000/api/net-profit/ - 1.50 ms
2025-02-24 10:28:22,075 - ROLLBACK
2025-02-24 10:28:22,076 - GET http://127.0.0.1:8000/api/fund-table/ - 3.94 ms
2025-02-24 10:28:22,081 - BEGIN (implicit)
2025-02-24 10:28:22,083 - SELECT fund.fund_description AS fund_fund_description, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_1)s END) AS total_revenue, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_3)s AND ledger.amount > %(amount_3)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_4)s AND ledger.amount < %(amount_4)s) THEN -ledger.amount ELSE %(param_2)s END) AS total_expenses, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_1)s END) / nullif(sum(CASE WHEN (ledger.ledger_description = %(ledger_description_3)s AND ledger.amount > %(amount_3)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_4)s AND ledger.amount < %(amount_4)s) THEN -ledger.amount ELSE %(param_2)s END), %(nullif_1)s) AS ratio, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_1)s END) - sum(CASE WHEN (ledger.ledger_description = %(ledger_description_3)s AND ledger.amount > %(amount_3)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_4)s AND ledger.amount < %(amount_4)s) THEN -ledger.amount ELSE %(param_2)s END) AS roi 
FROM ledger INNER JOIN fund ON ledger.fund_id = fund.fund_id GROUP BY fund.fund_description ORDER BY roi DESC
2025-02-24 10:28:22,084 - [cached since 3.891s ago] {'ledger_description_1': 'Revenues', 'amount_1': 0, 'ledger_description_2': 'Expenses', 'amount_2': 0, 'param_1': 0, 'ledger_description_3': 'Expenses', 'amount_3': 0, 'ledger_description_4': 'Revenues', 'amount_4': 0, 'param_2': 0, 'nullif_1': 0}
2025-02-24 10:28:23,165 - ROLLBACK
2025-02-24 10:28:23,167 - GET http://127.0.0.1:8000/api/top-roi/ - 2.16 ms
2025-02-24 10:28:23,470 - ROLLBACK
2025-02-24 10:28:23,472 - GET http://127.0.0.1:8000/api/top-budget/ - 2.21 ms
2025-02-24 10:28:24,605 - ROLLBACK
2025-02-24 10:28:24,606 - GET http://127.0.0.1:8000/api/fund-table/ - 2.53 ms
2025-02-24 10:30:55,779 - GET http://127.0.0.1:8000/api/initialise/ - 0.00 ms
2025-02-24 10:30:55,984 - BEGIN (implicit)
2025-02-24 10:30:55,985 - SELECT department.department_name AS department_department_name, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s) THEN ledger.amount ELSE %(param_1)s END) - sum(CASE WHEN (ledger.ledger_description = %(ledger_description_2)s) THEN ledger.amount ELSE %(param_2)s END) AS roi 
FROM ledger INNER JOIN department ON ledger.department_id = department.department_id GROUP BY department.department_name ORDER BY sum(ledger.amount) DESC 
 LIMIT %(param_3)s
2025-02-24 10:30:55,986 - [cached since 157.8s ago] {'ledger_description_1': 'Revenues', 'param_1': 0, 'ledger_description_2': 'Expenses', 'param_2': 0, 'param_3': 5}
2025-02-24 10:30:55,994 - BEGIN (implicit)
2025-02-24 10:30:55,997 - SELECT department.department_name AS department_department_name, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount ELSE %(param_1)s END + CASE WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_2)s END) AS total_expenditure 
FROM ledger INNER JOIN department ON ledger.department_id = department.department_id GROUP BY department.department_name ORDER BY sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount ELSE %(param_1)s END + CASE WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_2)s END) DESC 
 LIMIT %(param_3)s
2025-02-24 10:30:55,999 - BEGIN (implicit)
2025-02-24 10:30:56,001 - [cached since 157.8s ago] {'ledger_description_1': 'Expenses', 'amount_1': 0, 'param_1': 0, 'ledger_description_2': 'Revenues', 'amount_2': 0, 'param_2': 0, 'param_3': 10}
2025-02-24 10:30:56,005 - BEGIN (implicit)
2025-02-24 10:30:56,008 - BEGIN (implicit)
2025-02-24 10:30:56,009 - SELECT year(ledger.general_ledger_date) AS time, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_1)s END) AS total_revenue, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_3)s AND ledger.amount > %(amount_3)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_4)s AND ledger.amount < %(amount_4)s) THEN -ledger.amount ELSE %(param_2)s END) AS total_expenses 
FROM ledger GROUP BY year(ledger.general_ledger_date) ORDER BY year(ledger.general_ledger_date)
2025-02-24 10:30:56,010 - SELECT year(ledger.general_ledger_date) AS time, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_1)s END) - sum(CASE WHEN (ledger.ledger_description = %(ledger_description_3)s AND ledger.amount > %(amount_3)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_4)s AND ledger.amount < %(amount_4)s) THEN -ledger.amount ELSE %(param_2)s END) AS net_profit 
FROM ledger GROUP BY year(ledger.general_ledger_date) ORDER BY year(ledger.general_ledger_date)
2025-02-24 10:30:56,011 - SELECT fund.fund_description AS fund_fund_description, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_1)s END) AS total_revenue, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_3)s AND ledger.amount > %(amount_3)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_4)s AND ledger.amount < %(amount_4)s) THEN -ledger.amount ELSE %(param_2)s END) AS total_expenses, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_1)s END) / nullif(sum(CASE WHEN (ledger.ledger_description = %(ledger_description_3)s AND ledger.amount > %(amount_3)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_4)s AND ledger.amount < %(amount_4)s) THEN -ledger.amount ELSE %(param_2)s END), %(nullif_1)s) AS ratio, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_1)s END) - sum(CASE WHEN (ledger.ledger_description = %(ledger_description_3)s AND ledger.amount > %(amount_3)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_4)s AND ledger.amount < %(amount_4)s) THEN -ledger.amount ELSE %(param_2)s END) AS roi 
FROM ledger INNER JOIN fund ON ledger.fund_id = fund.fund_id GROUP BY fund.fund_description ORDER BY roi DESC
2025-02-24 10:30:56,012 - [cached since 157.8s ago] {'ledger_description_1': 'Revenues', 'amount_1': 0, 'ledger_description_2': 'Expenses', 'amount_2': 0, 'param_1': 0, 'ledger_description_3': 'Expenses', 'amount_3': 0, 'ledger_description_4': 'Revenues', 'amount_4': 0, 'param_2': 0}
2025-02-24 10:30:56,012 - [cached since 157.8s ago] {'ledger_description_1': 'Revenues', 'amount_1': 0, 'ledger_description_2': 'Expenses', 'amount_2': 0, 'param_1': 0, 'ledger_description_3': 'Expenses', 'amount_3': 0, 'ledger_description_4': 'Revenues', 'amount_4': 0, 'param_2': 0}
2025-02-24 10:30:56,013 - [cached since 157.8s ago] {'ledger_description_1': 'Revenues', 'amount_1': 0, 'ledger_description_2': 'Expenses', 'amount_2': 0, 'param_1': 0, 'ledger_description_3': 'Expenses', 'amount_3': 0, 'ledger_description_4': 'Revenues', 'amount_4': 0, 'param_2': 0, 'nullif_1': 0}
2025-02-24 10:30:56,041 - GET http://127.0.0.1:8000/api/initialise/ - 0.00 ms
2025-02-24 10:30:57,940 - BEGIN (implicit)
2025-02-24 10:30:57,941 - SELECT department.department_id AS department_department_id, department.department_name AS department_department_name 
FROM department
2025-02-24 10:30:57,941 - [cached since 159.6s ago] {}
2025-02-24 10:30:57,945 - SELECT min(ledger.general_ledger_date) AS min_1 
FROM ledger
2025-02-24 10:30:57,948 - [cached since 159.6s ago] {}
2025-02-24 10:30:57,952 - SELECT max(ledger.general_ledger_date) AS max_1 
FROM ledger
2025-02-24 10:30:57,952 - [cached since 159.6s ago] {}
2025-02-24 10:30:57,960 - ROLLBACK
2025-02-24 10:30:57,962 - GET http://127.0.0.1:8000/api/initialise - 0.03 ms
2025-02-24 10:30:57,971 - BEGIN (implicit)
2025-02-24 10:30:57,972 - SELECT department.department_id AS department_department_id, department.department_name AS department_department_name 
FROM department
2025-02-24 10:30:57,972 - [cached since 159.6s ago] {}
2025-02-24 10:30:57,977 - SELECT min(ledger.general_ledger_date) AS min_1 
FROM ledger
2025-02-24 10:30:57,977 - [cached since 159.6s ago] {}
2025-02-24 10:30:57,984 - SELECT max(ledger.general_ledger_date) AS max_1 
FROM ledger
2025-02-24 10:30:57,984 - [cached since 159.6s ago] {}
2025-02-24 10:30:57,989 - ROLLBACK
2025-02-24 10:30:57,992 - GET http://127.0.0.1:8000/api/initialise - 0.02 ms
2025-02-24 10:30:58,395 - ROLLBACK
2025-02-24 10:30:58,397 - GET http://127.0.0.1:8000/api/revenue-expenses/ - 2.41 ms
2025-02-24 10:30:58,405 - BEGIN (implicit)
2025-02-24 10:30:58,407 - SELECT year(ledger.general_ledger_date) AS time, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_1)s END) AS total_revenue, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_3)s AND ledger.amount > %(amount_3)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_4)s AND ledger.amount < %(amount_4)s) THEN -ledger.amount ELSE %(param_2)s END) AS total_expenses 
FROM ledger GROUP BY year(ledger.general_ledger_date) ORDER BY year(ledger.general_ledger_date)
2025-02-24 10:30:58,407 - [cached since 160.2s ago] {'ledger_description_1': 'Revenues', 'amount_1': 0, 'ledger_description_2': 'Expenses', 'amount_2': 0, 'param_1': 0, 'ledger_description_3': 'Expenses', 'amount_3': 0, 'ledger_description_4': 'Revenues', 'amount_4': 0, 'param_2': 0}
2025-02-24 10:30:58,681 - ROLLBACK
2025-02-24 10:30:58,686 - GET http://127.0.0.1:8000/api/net-profit/ - 2.70 ms
2025-02-24 10:30:58,703 - BEGIN (implicit)
2025-02-24 10:30:58,705 - SELECT year(ledger.general_ledger_date) AS time, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_1)s END) - sum(CASE WHEN (ledger.ledger_description = %(ledger_description_3)s AND ledger.amount > %(amount_3)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_4)s AND ledger.amount < %(amount_4)s) THEN -ledger.amount ELSE %(param_2)s END) AS net_profit 
FROM ledger GROUP BY year(ledger.general_ledger_date) ORDER BY year(ledger.general_ledger_date)
2025-02-24 10:30:58,706 - [cached since 160.5s ago] {'ledger_description_1': 'Revenues', 'amount_1': 0, 'ledger_description_2': 'Expenses', 'amount_2': 0, 'param_1': 0, 'ledger_description_3': 'Expenses', 'amount_3': 0, 'ledger_description_4': 'Revenues', 'amount_4': 0, 'param_2': 0}
2025-02-24 10:31:00,207 - ROLLBACK
2025-02-24 10:31:00,209 - GET http://127.0.0.1:8000/api/top-roi/ - 4.23 ms
2025-02-24 10:31:00,327 - BEGIN (implicit)
2025-02-24 10:31:00,329 - SELECT department.department_name AS department_department_name, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s) THEN ledger.amount ELSE %(param_1)s END) - sum(CASE WHEN (ledger.ledger_description = %(ledger_description_2)s) THEN ledger.amount ELSE %(param_2)s END) AS roi 
FROM ledger INNER JOIN department ON ledger.department_id = department.department_id GROUP BY department.department_name ORDER BY sum(ledger.amount) DESC 
 LIMIT %(param_3)s
2025-02-24 10:31:00,330 - [cached since 162.1s ago] {'ledger_description_1': 'Revenues', 'param_1': 0, 'ledger_description_2': 'Expenses', 'param_2': 0, 'param_3': 5}
2025-02-24 10:31:02,254 - ROLLBACK
2025-02-24 10:31:02,256 - GET http://127.0.0.1:8000/api/top-budget/ - 6.27 ms
2025-02-24 10:31:02,334 - BEGIN (implicit)
2025-02-24 10:31:02,335 - SELECT department.department_name AS department_department_name, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount ELSE %(param_1)s END + CASE WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_2)s END) AS total_expenditure 
FROM ledger INNER JOIN department ON ledger.department_id = department.department_id GROUP BY department.department_name ORDER BY sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount ELSE %(param_1)s END + CASE WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_2)s END) DESC 
 LIMIT %(param_3)s
2025-02-24 10:31:02,336 - [cached since 164.1s ago] {'ledger_description_1': 'Expenses', 'amount_1': 0, 'param_1': 0, 'ledger_description_2': 'Revenues', 'amount_2': 0, 'param_2': 0, 'param_3': 10}
2025-02-24 10:31:03,589 - ROLLBACK
2025-02-24 10:31:03,591 - ROLLBACK
2025-02-24 10:31:03,592 - GET http://127.0.0.1:8000/api/net-profit/ - 4.89 ms
2025-02-24 10:31:03,594 - GET http://127.0.0.1:8000/api/revenue-expenses/ - 5.19 ms
2025-02-24 10:31:03,967 - ROLLBACK
2025-02-24 10:31:03,968 - GET http://127.0.0.1:8000/api/fund-table/ - 7.98 ms
2025-02-24 10:31:03,979 - BEGIN (implicit)
2025-02-24 10:31:03,980 - SELECT fund.fund_description AS fund_fund_description, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_1)s END) AS total_revenue, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_3)s AND ledger.amount > %(amount_3)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_4)s AND ledger.amount < %(amount_4)s) THEN -ledger.amount ELSE %(param_2)s END) AS total_expenses, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_1)s END) / nullif(sum(CASE WHEN (ledger.ledger_description = %(ledger_description_3)s AND ledger.amount > %(amount_3)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_4)s AND ledger.amount < %(amount_4)s) THEN -ledger.amount ELSE %(param_2)s END), %(nullif_1)s) AS ratio, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_1)s END) - sum(CASE WHEN (ledger.ledger_description = %(ledger_description_3)s AND ledger.amount > %(amount_3)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_4)s AND ledger.amount < %(amount_4)s) THEN -ledger.amount ELSE %(param_2)s END) AS roi 
FROM ledger INNER JOIN fund ON ledger.fund_id = fund.fund_id GROUP BY fund.fund_description ORDER BY roi DESC
2025-02-24 10:31:03,982 - [cached since 165.8s ago] {'ledger_description_1': 'Revenues', 'amount_1': 0, 'ledger_description_2': 'Expenses', 'amount_2': 0, 'param_1': 0, 'ledger_description_3': 'Expenses', 'amount_3': 0, 'ledger_description_4': 'Revenues', 'amount_4': 0, 'param_2': 0, 'nullif_1': 0}
2025-02-24 10:31:06,124 - ROLLBACK
2025-02-24 10:31:06,126 - GET http://127.0.0.1:8000/api/top-roi/ - 5.80 ms
2025-02-24 10:31:07,372 - ROLLBACK
2025-02-24 10:31:07,374 - GET http://127.0.0.1:8000/api/top-budget/ - 5.04 ms
2025-02-24 10:31:09,263 - ROLLBACK
2025-02-24 10:31:09,264 - GET http://127.0.0.1:8000/api/fund-table/ - 5.29 ms
2025-02-24 10:36:55,043 - GET http://127.0.0.1:8000/api/initialise/ - 0.00 ms
2025-02-24 10:36:55,128 - BEGIN (implicit)
2025-02-24 10:36:55,129 - SELECT department.department_name AS department_department_name, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s) THEN ledger.amount ELSE %(param_1)s END) - sum(CASE WHEN (ledger.ledger_description = %(ledger_description_2)s) THEN ledger.amount ELSE %(param_2)s END) AS roi 
FROM ledger INNER JOIN department ON ledger.department_id = department.department_id GROUP BY department.department_name ORDER BY sum(ledger.amount) DESC 
 LIMIT %(param_3)s
2025-02-24 10:36:55,130 - [cached since 516.9s ago] {'ledger_description_1': 'Revenues', 'param_1': 0, 'ledger_description_2': 'Expenses', 'param_2': 0, 'param_3': 5}
2025-02-24 10:36:55,134 - BEGIN (implicit)
2025-02-24 10:36:55,135 - BEGIN (implicit)
2025-02-24 10:36:55,136 - SELECT department.department_name AS department_department_name, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount ELSE %(param_1)s END + CASE WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_2)s END) AS total_expenditure 
FROM ledger INNER JOIN department ON ledger.department_id = department.department_id GROUP BY department.department_name ORDER BY sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount ELSE %(param_1)s END + CASE WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_2)s END) DESC 
 LIMIT %(param_3)s
2025-02-24 10:36:55,142 - GET http://127.0.0.1:8000/api/initialise/ - 0.01 ms
2025-02-24 10:36:55,138 - SELECT year(ledger.general_ledger_date) AS time, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_1)s END) AS total_revenue, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_3)s AND ledger.amount > %(amount_3)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_4)s AND ledger.amount < %(amount_4)s) THEN -ledger.amount ELSE %(param_2)s END) AS total_expenses 
FROM ledger GROUP BY year(ledger.general_ledger_date) ORDER BY year(ledger.general_ledger_date)
2025-02-24 10:36:55,140 - BEGIN (implicit)
2025-02-24 10:36:55,140 - [cached since 516.9s ago] {'ledger_description_1': 'Expenses', 'amount_1': 0, 'param_1': 0, 'ledger_description_2': 'Revenues', 'amount_2': 0, 'param_2': 0, 'param_3': 10}
2025-02-24 10:36:55,141 - BEGIN (implicit)
2025-02-24 10:36:55,142 - [cached since 516.9s ago] {'ledger_description_1': 'Revenues', 'amount_1': 0, 'ledger_description_2': 'Expenses', 'amount_2': 0, 'param_1': 0, 'ledger_description_3': 'Expenses', 'amount_3': 0, 'ledger_description_4': 'Revenues', 'amount_4': 0, 'param_2': 0}
2025-02-24 10:36:55,144 - SELECT fund.fund_description AS fund_fund_description, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_1)s END) AS total_revenue, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_3)s AND ledger.amount > %(amount_3)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_4)s AND ledger.amount < %(amount_4)s) THEN -ledger.amount ELSE %(param_2)s END) AS total_expenses, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_1)s END) / nullif(sum(CASE WHEN (ledger.ledger_description = %(ledger_description_3)s AND ledger.amount > %(amount_3)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_4)s AND ledger.amount < %(amount_4)s) THEN -ledger.amount ELSE %(param_2)s END), %(nullif_1)s) AS ratio, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_1)s END) - sum(CASE WHEN (ledger.ledger_description = %(ledger_description_3)s AND ledger.amount > %(amount_3)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_4)s AND ledger.amount < %(amount_4)s) THEN -ledger.amount ELSE %(param_2)s END) AS roi 
FROM ledger INNER JOIN fund ON ledger.fund_id = fund.fund_id GROUP BY fund.fund_description ORDER BY roi DESC
2025-02-24 10:36:55,148 - SELECT year(ledger.general_ledger_date) AS time, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_1)s END) - sum(CASE WHEN (ledger.ledger_description = %(ledger_description_3)s AND ledger.amount > %(amount_3)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_4)s AND ledger.amount < %(amount_4)s) THEN -ledger.amount ELSE %(param_2)s END) AS net_profit 
FROM ledger GROUP BY year(ledger.general_ledger_date) ORDER BY year(ledger.general_ledger_date)
2025-02-24 10:36:55,149 - [cached since 517s ago] {'ledger_description_1': 'Revenues', 'amount_1': 0, 'ledger_description_2': 'Expenses', 'amount_2': 0, 'param_1': 0, 'ledger_description_3': 'Expenses', 'amount_3': 0, 'ledger_description_4': 'Revenues', 'amount_4': 0, 'param_2': 0, 'nullif_1': 0}
2025-02-24 10:36:55,150 - [cached since 516.9s ago] {'ledger_description_1': 'Revenues', 'amount_1': 0, 'ledger_description_2': 'Expenses', 'amount_2': 0, 'param_1': 0, 'ledger_description_3': 'Expenses', 'amount_3': 0, 'ledger_description_4': 'Revenues', 'amount_4': 0, 'param_2': 0}
2025-02-24 10:36:55,366 - BEGIN (implicit)
2025-02-24 10:36:55,368 - SELECT department.department_id AS department_department_id, department.department_name AS department_department_name 
FROM department
2025-02-24 10:36:55,368 - [cached since 517s ago] {}
2025-02-24 10:36:55,371 - SELECT min(ledger.general_ledger_date) AS min_1 
FROM ledger
2025-02-24 10:36:55,372 - [cached since 517s ago] {}
2025-02-24 10:36:55,374 - SELECT max(ledger.general_ledger_date) AS max_1 
FROM ledger
2025-02-24 10:36:55,375 - [cached since 517s ago] {}
2025-02-24 10:36:55,387 - ROLLBACK
2025-02-24 10:36:55,389 - GET http://127.0.0.1:8000/api/initialise - 0.04 ms
2025-02-24 10:36:55,400 - BEGIN (implicit)
2025-02-24 10:36:55,401 - SELECT department.department_id AS department_department_id, department.department_name AS department_department_name 
FROM department
2025-02-24 10:36:55,402 - [cached since 517s ago] {}
2025-02-24 10:36:55,405 - SELECT min(ledger.general_ledger_date) AS min_1 
FROM ledger
2025-02-24 10:36:55,405 - [cached since 517s ago] {}
2025-02-24 10:36:55,407 - SELECT max(ledger.general_ledger_date) AS max_1 
FROM ledger
2025-02-24 10:36:55,409 - [cached since 517s ago] {}
2025-02-24 10:36:55,420 - ROLLBACK
2025-02-24 10:36:55,425 - GET http://127.0.0.1:8000/api/initialise - 0.03 ms
2025-02-24 10:36:56,874 - ROLLBACK
2025-02-24 10:36:56,876 - ROLLBACK
2025-02-24 10:36:56,878 - GET http://127.0.0.1:8000/api/net-profit/ - 1.75 ms
2025-02-24 10:36:56,879 - GET http://127.0.0.1:8000/api/revenue-expenses/ - 1.75 ms
2025-02-24 10:36:56,886 - BEGIN (implicit)
2025-02-24 10:36:56,887 - SELECT year(ledger.general_ledger_date) AS time, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_1)s END) - sum(CASE WHEN (ledger.ledger_description = %(ledger_description_3)s AND ledger.amount > %(amount_3)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_4)s AND ledger.amount < %(amount_4)s) THEN -ledger.amount ELSE %(param_2)s END) AS net_profit 
FROM ledger GROUP BY year(ledger.general_ledger_date) ORDER BY year(ledger.general_ledger_date)
2025-02-24 10:36:56,888 - [cached since 518.7s ago] {'ledger_description_1': 'Revenues', 'amount_1': 0, 'ledger_description_2': 'Expenses', 'amount_2': 0, 'param_1': 0, 'ledger_description_3': 'Expenses', 'amount_3': 0, 'ledger_description_4': 'Revenues', 'amount_4': 0, 'param_2': 0}
2025-02-24 10:36:56,891 - BEGIN (implicit)
2025-02-24 10:36:56,892 - SELECT year(ledger.general_ledger_date) AS time, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_1)s END) AS total_revenue, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_3)s AND ledger.amount > %(amount_3)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_4)s AND ledger.amount < %(amount_4)s) THEN -ledger.amount ELSE %(param_2)s END) AS total_expenses 
FROM ledger GROUP BY year(ledger.general_ledger_date) ORDER BY year(ledger.general_ledger_date)
2025-02-24 10:36:56,893 - [cached since 518.7s ago] {'ledger_description_1': 'Revenues', 'amount_1': 0, 'ledger_description_2': 'Expenses', 'amount_2': 0, 'param_1': 0, 'ledger_description_3': 'Expenses', 'amount_3': 0, 'ledger_description_4': 'Revenues', 'amount_4': 0, 'param_2': 0}
2025-02-24 10:36:58,096 - ROLLBACK
2025-02-24 10:36:58,098 - GET http://127.0.0.1:8000/api/top-roi/ - 2.98 ms
2025-02-24 10:36:58,276 - ROLLBACK
2025-02-24 10:36:58,277 - GET http://127.0.0.1:8000/api/top-budget/ - 3.15 ms
2025-02-24 10:36:58,617 - ROLLBACK
2025-02-24 10:36:58,619 - GET http://127.0.0.1:8000/api/net-profit/ - 1.74 ms
2025-02-24 10:36:58,628 - ROLLBACK
2025-02-24 10:36:58,635 - GET http://127.0.0.1:8000/api/revenue-expenses/ - 1.75 ms
2025-02-24 10:36:59,298 - ROLLBACK
2025-02-24 10:36:59,300 - GET http://127.0.0.1:8000/api/fund-table/ - 4.17 ms
2025-02-24 10:37:08,781 - POST http://127.0.0.1:8000/login - 0.28 ms
2025-02-24 10:37:08,786 - GET http://127.0.0.1:8000/api/initialise/ - 0.00 ms
2025-02-24 10:37:08,791 - BEGIN (implicit)
2025-02-24 10:37:08,792 - BEGIN (implicit)
2025-02-24 10:37:08,798 - GET http://127.0.0.1:8000/api/initialise/ - 0.01 ms
2025-02-24 10:37:08,793 - BEGIN (implicit)
2025-02-24 10:37:08,794 - BEGIN (implicit)
2025-02-24 10:37:08,794 - SELECT department.department_name AS department_department_name, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount ELSE %(param_1)s END + CASE WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_2)s END) AS total_expenditure 
FROM ledger INNER JOIN department ON ledger.department_id = department.department_id GROUP BY department.department_name ORDER BY sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount ELSE %(param_1)s END + CASE WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_2)s END) DESC 
 LIMIT %(param_3)s
2025-02-24 10:37:08,798 - BEGIN (implicit)
2025-02-24 10:37:08,799 - SELECT year(ledger.general_ledger_date) AS time, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_1)s END) AS total_revenue, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_3)s AND ledger.amount > %(amount_3)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_4)s AND ledger.amount < %(amount_4)s) THEN -ledger.amount ELSE %(param_2)s END) AS total_expenses 
FROM ledger GROUP BY year(ledger.general_ledger_date) ORDER BY year(ledger.general_ledger_date)
2025-02-24 10:37:08,800 - SELECT year(ledger.general_ledger_date) AS time, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_1)s END) - sum(CASE WHEN (ledger.ledger_description = %(ledger_description_3)s AND ledger.amount > %(amount_3)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_4)s AND ledger.amount < %(amount_4)s) THEN -ledger.amount ELSE %(param_2)s END) AS net_profit 
FROM ledger GROUP BY year(ledger.general_ledger_date) ORDER BY year(ledger.general_ledger_date)
2025-02-24 10:37:08,801 - SELECT department.department_name AS department_department_name, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s) THEN ledger.amount ELSE %(param_1)s END) - sum(CASE WHEN (ledger.ledger_description = %(ledger_description_2)s) THEN ledger.amount ELSE %(param_2)s END) AS roi 
FROM ledger INNER JOIN department ON ledger.department_id = department.department_id GROUP BY department.department_name ORDER BY sum(ledger.amount) DESC 
 LIMIT %(param_3)s
2025-02-24 10:37:08,801 - [cached since 530.6s ago] {'ledger_description_1': 'Expenses', 'amount_1': 0, 'param_1': 0, 'ledger_description_2': 'Revenues', 'amount_2': 0, 'param_2': 0, 'param_3': 10}
2025-02-24 10:37:08,801 - SELECT fund.fund_description AS fund_fund_description, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_1)s END) AS total_revenue, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_3)s AND ledger.amount > %(amount_3)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_4)s AND ledger.amount < %(amount_4)s) THEN -ledger.amount ELSE %(param_2)s END) AS total_expenses, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_1)s END) / nullif(sum(CASE WHEN (ledger.ledger_description = %(ledger_description_3)s AND ledger.amount > %(amount_3)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_4)s AND ledger.amount < %(amount_4)s) THEN -ledger.amount ELSE %(param_2)s END), %(nullif_1)s) AS ratio, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_1)s END) - sum(CASE WHEN (ledger.ledger_description = %(ledger_description_3)s AND ledger.amount > %(amount_3)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_4)s AND ledger.amount < %(amount_4)s) THEN -ledger.amount ELSE %(param_2)s END) AS roi 
FROM ledger INNER JOIN fund ON ledger.fund_id = fund.fund_id GROUP BY fund.fund_description ORDER BY roi DESC
2025-02-24 10:37:08,803 - [cached since 530.6s ago] {'ledger_description_1': 'Revenues', 'amount_1': 0, 'ledger_description_2': 'Expenses', 'amount_2': 0, 'param_1': 0, 'ledger_description_3': 'Expenses', 'amount_3': 0, 'ledger_description_4': 'Revenues', 'amount_4': 0, 'param_2': 0}
2025-02-24 10:37:08,804 - [cached since 530.6s ago] {'ledger_description_1': 'Revenues', 'amount_1': 0, 'ledger_description_2': 'Expenses', 'amount_2': 0, 'param_1': 0, 'ledger_description_3': 'Expenses', 'amount_3': 0, 'ledger_description_4': 'Revenues', 'amount_4': 0, 'param_2': 0}
2025-02-24 10:37:08,804 - [cached since 530.6s ago] {'ledger_description_1': 'Revenues', 'param_1': 0, 'ledger_description_2': 'Expenses', 'param_2': 0, 'param_3': 5}
2025-02-24 10:37:08,807 - [cached since 530.6s ago] {'ledger_description_1': 'Revenues', 'amount_1': 0, 'ledger_description_2': 'Expenses', 'amount_2': 0, 'param_1': 0, 'ledger_description_3': 'Expenses', 'amount_3': 0, 'ledger_description_4': 'Revenues', 'amount_4': 0, 'param_2': 0, 'nullif_1': 0}
2025-02-24 10:37:08,810 - BEGIN (implicit)
2025-02-24 10:37:08,810 - SELECT department.department_id AS department_department_id, department.department_name AS department_department_name 
FROM department
2025-02-24 10:37:08,811 - [cached since 530.4s ago] {}
2025-02-24 10:37:08,814 - SELECT min(ledger.general_ledger_date) AS min_1 
FROM ledger
2025-02-24 10:37:08,815 - [cached since 530.4s ago] {}
2025-02-24 10:37:08,817 - SELECT max(ledger.general_ledger_date) AS max_1 
FROM ledger
2025-02-24 10:37:08,817 - [cached since 530.4s ago] {}
2025-02-24 10:37:08,827 - ROLLBACK
2025-02-24 10:37:08,830 - GET http://127.0.0.1:8000/api/initialise - 0.03 ms
2025-02-24 10:37:08,837 - BEGIN (implicit)
2025-02-24 10:37:08,838 - SELECT department.department_id AS department_department_id, department.department_name AS department_department_name 
FROM department
2025-02-24 10:37:08,838 - [cached since 530.5s ago] {}
2025-02-24 10:37:08,841 - SELECT min(ledger.general_ledger_date) AS min_1 
FROM ledger
2025-02-24 10:37:08,841 - [cached since 530.5s ago] {}
2025-02-24 10:37:08,845 - SELECT max(ledger.general_ledger_date) AS max_1 
FROM ledger
2025-02-24 10:37:08,846 - [cached since 530.5s ago] {}
2025-02-24 10:37:08,850 - ROLLBACK
2025-02-24 10:37:08,853 - GET http://127.0.0.1:8000/api/initialise - 0.02 ms
2025-02-24 10:37:10,404 - ROLLBACK
2025-02-24 10:37:10,406 - GET http://127.0.0.1:8000/api/revenue-expenses/ - 1.62 ms
2025-02-24 10:37:10,410 - ROLLBACK
2025-02-24 10:37:10,412 - BEGIN (implicit)
2025-02-24 10:37:10,413 - SELECT year(ledger.general_ledger_date) AS time, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_1)s END) AS total_revenue, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_3)s AND ledger.amount > %(amount_3)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_4)s AND ledger.amount < %(amount_4)s) THEN -ledger.amount ELSE %(param_2)s END) AS total_expenses 
FROM ledger GROUP BY year(ledger.general_ledger_date) ORDER BY year(ledger.general_ledger_date)
2025-02-24 10:37:10,414 - GET http://127.0.0.1:8000/api/net-profit/ - 1.63 ms
2025-02-24 10:37:10,414 - [cached since 532.2s ago] {'ledger_description_1': 'Revenues', 'amount_1': 0, 'ledger_description_2': 'Expenses', 'amount_2': 0, 'param_1': 0, 'ledger_description_3': 'Expenses', 'amount_3': 0, 'ledger_description_4': 'Revenues', 'amount_4': 0, 'param_2': 0}
2025-02-24 10:37:10,420 - BEGIN (implicit)
2025-02-24 10:37:10,421 - SELECT year(ledger.general_ledger_date) AS time, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_1)s END) - sum(CASE WHEN (ledger.ledger_description = %(ledger_description_3)s AND ledger.amount > %(amount_3)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_4)s AND ledger.amount < %(amount_4)s) THEN -ledger.amount ELSE %(param_2)s END) AS net_profit 
FROM ledger GROUP BY year(ledger.general_ledger_date) ORDER BY year(ledger.general_ledger_date)
2025-02-24 10:37:10,423 - [cached since 532.2s ago] {'ledger_description_1': 'Revenues', 'amount_1': 0, 'ledger_description_2': 'Expenses', 'amount_2': 0, 'param_1': 0, 'ledger_description_3': 'Expenses', 'amount_3': 0, 'ledger_description_4': 'Revenues', 'amount_4': 0, 'param_2': 0}
2025-02-24 10:37:11,550 - ROLLBACK
2025-02-24 10:37:11,552 - GET http://127.0.0.1:8000/api/top-roi/ - 2.77 ms
2025-02-24 10:37:11,558 - BEGIN (implicit)
2025-02-24 10:37:11,559 - SELECT department.department_name AS department_department_name, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s) THEN ledger.amount ELSE %(param_1)s END) - sum(CASE WHEN (ledger.ledger_description = %(ledger_description_2)s) THEN ledger.amount ELSE %(param_2)s END) AS roi 
FROM ledger INNER JOIN department ON ledger.department_id = department.department_id GROUP BY department.department_name ORDER BY sum(ledger.amount) DESC 
 LIMIT %(param_3)s
2025-02-24 10:37:11,560 - [cached since 533.4s ago] {'ledger_description_1': 'Revenues', 'param_1': 0, 'ledger_description_2': 'Expenses', 'param_2': 0, 'param_3': 5}
2025-02-24 10:37:11,730 - ROLLBACK
2025-02-24 10:37:11,732 - GET http://127.0.0.1:8000/api/top-budget/ - 2.95 ms
2025-02-24 10:37:11,737 - BEGIN (implicit)
2025-02-24 10:37:11,738 - SELECT department.department_name AS department_department_name, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount ELSE %(param_1)s END + CASE WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_2)s END) AS total_expenditure 
FROM ledger INNER JOIN department ON ledger.department_id = department.department_id GROUP BY department.department_name ORDER BY sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount ELSE %(param_1)s END + CASE WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_2)s END) DESC 
 LIMIT %(param_3)s
2025-02-24 10:37:11,739 - [cached since 533.5s ago] {'ledger_description_1': 'Expenses', 'amount_1': 0, 'param_1': 0, 'ledger_description_2': 'Revenues', 'amount_2': 0, 'param_2': 0, 'param_3': 10}
2025-02-24 10:37:11,984 - ROLLBACK
2025-02-24 10:37:11,986 - GET http://127.0.0.1:8000/api/revenue-expenses/ - 1.58 ms
2025-02-24 10:37:11,990 - ROLLBACK
2025-02-24 10:37:11,992 - GET http://127.0.0.1:8000/api/net-profit/ - 1.58 ms
2025-02-24 10:37:12,566 - ROLLBACK
2025-02-24 10:37:12,568 - GET http://127.0.0.1:8000/api/fund-table/ - 3.78 ms
2025-02-24 10:37:12,573 - BEGIN (implicit)
2025-02-24 10:37:12,574 - SELECT fund.fund_description AS fund_fund_description, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_1)s END) AS total_revenue, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_3)s AND ledger.amount > %(amount_3)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_4)s AND ledger.amount < %(amount_4)s) THEN -ledger.amount ELSE %(param_2)s END) AS total_expenses, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_1)s END) / nullif(sum(CASE WHEN (ledger.ledger_description = %(ledger_description_3)s AND ledger.amount > %(amount_3)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_4)s AND ledger.amount < %(amount_4)s) THEN -ledger.amount ELSE %(param_2)s END), %(nullif_1)s) AS ratio, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_1)s END) - sum(CASE WHEN (ledger.ledger_description = %(ledger_description_3)s AND ledger.amount > %(amount_3)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_4)s AND ledger.amount < %(amount_4)s) THEN -ledger.amount ELSE %(param_2)s END) AS roi 
FROM ledger INNER JOIN fund ON ledger.fund_id = fund.fund_id GROUP BY fund.fund_description ORDER BY roi DESC
2025-02-24 10:37:12,575 - [cached since 534.4s ago] {'ledger_description_1': 'Revenues', 'amount_1': 0, 'ledger_description_2': 'Expenses', 'amount_2': 0, 'param_1': 0, 'ledger_description_3': 'Expenses', 'amount_3': 0, 'ledger_description_4': 'Revenues', 'amount_4': 0, 'param_2': 0, 'nullif_1': 0}
2025-02-24 10:37:13,789 - ROLLBACK
2025-02-24 10:37:13,791 - GET http://127.0.0.1:8000/api/top-roi/ - 2.24 ms
2025-02-24 10:37:14,094 - ROLLBACK
2025-02-24 10:37:14,095 - GET http://127.0.0.1:8000/api/top-budget/ - 2.36 ms
2025-02-24 10:37:15,275 - ROLLBACK
2025-02-24 10:37:15,277 - GET http://127.0.0.1:8000/api/fund-table/ - 2.71 ms
2025-02-24 10:37:16,488 - GET http://127.0.0.1:8000/api/initialise/ - 0.00 ms
2025-02-24 10:37:16,558 - BEGIN (implicit)
2025-02-24 10:37:16,560 - BEGIN (implicit)
2025-02-24 10:37:16,565 - GET http://127.0.0.1:8000/api/initialise/ - 0.00 ms
2025-02-24 10:37:16,561 - BEGIN (implicit)
2025-02-24 10:37:16,562 - BEGIN (implicit)
2025-02-24 10:37:16,563 - BEGIN (implicit)
2025-02-24 10:37:16,563 - SELECT fund.fund_description AS fund_fund_description, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_1)s END) AS total_revenue, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_3)s AND ledger.amount > %(amount_3)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_4)s AND ledger.amount < %(amount_4)s) THEN -ledger.amount ELSE %(param_2)s END) AS total_expenses, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_1)s END) / nullif(sum(CASE WHEN (ledger.ledger_description = %(ledger_description_3)s AND ledger.amount > %(amount_3)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_4)s AND ledger.amount < %(amount_4)s) THEN -ledger.amount ELSE %(param_2)s END), %(nullif_1)s) AS ratio, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_1)s END) - sum(CASE WHEN (ledger.ledger_description = %(ledger_description_3)s AND ledger.amount > %(amount_3)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_4)s AND ledger.amount < %(amount_4)s) THEN -ledger.amount ELSE %(param_2)s END) AS roi 
FROM ledger INNER JOIN fund ON ledger.fund_id = fund.fund_id GROUP BY fund.fund_description ORDER BY roi DESC
2025-02-24 10:37:16,565 - SELECT department.department_name AS department_department_name, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s) THEN ledger.amount ELSE %(param_1)s END) - sum(CASE WHEN (ledger.ledger_description = %(ledger_description_2)s) THEN ledger.amount ELSE %(param_2)s END) AS roi 
FROM ledger INNER JOIN department ON ledger.department_id = department.department_id GROUP BY department.department_name ORDER BY sum(ledger.amount) DESC 
 LIMIT %(param_3)s
2025-02-24 10:37:16,566 - SELECT year(ledger.general_ledger_date) AS time, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_1)s END) - sum(CASE WHEN (ledger.ledger_description = %(ledger_description_3)s AND ledger.amount > %(amount_3)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_4)s AND ledger.amount < %(amount_4)s) THEN -ledger.amount ELSE %(param_2)s END) AS net_profit 
FROM ledger GROUP BY year(ledger.general_ledger_date) ORDER BY year(ledger.general_ledger_date)
2025-02-24 10:37:16,567 - SELECT department.department_name AS department_department_name, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount ELSE %(param_1)s END + CASE WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_2)s END) AS total_expenditure 
FROM ledger INNER JOIN department ON ledger.department_id = department.department_id GROUP BY department.department_name ORDER BY sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount ELSE %(param_1)s END + CASE WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_2)s END) DESC 
 LIMIT %(param_3)s
2025-02-24 10:37:16,568 - SELECT year(ledger.general_ledger_date) AS time, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_1)s END) AS total_revenue, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_3)s AND ledger.amount > %(amount_3)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_4)s AND ledger.amount < %(amount_4)s) THEN -ledger.amount ELSE %(param_2)s END) AS total_expenses 
FROM ledger GROUP BY year(ledger.general_ledger_date) ORDER BY year(ledger.general_ledger_date)
2025-02-24 10:37:16,569 - [cached since 538.4s ago] {'ledger_description_1': 'Revenues', 'amount_1': 0, 'ledger_description_2': 'Expenses', 'amount_2': 0, 'param_1': 0, 'ledger_description_3': 'Expenses', 'amount_3': 0, 'ledger_description_4': 'Revenues', 'amount_4': 0, 'param_2': 0, 'nullif_1': 0}
2025-02-24 10:37:16,569 - [cached since 538.4s ago] {'ledger_description_1': 'Revenues', 'param_1': 0, 'ledger_description_2': 'Expenses', 'param_2': 0, 'param_3': 5}
2025-02-24 10:37:16,570 - [cached since 538.4s ago] {'ledger_description_1': 'Revenues', 'amount_1': 0, 'ledger_description_2': 'Expenses', 'amount_2': 0, 'param_1': 0, 'ledger_description_3': 'Expenses', 'amount_3': 0, 'ledger_description_4': 'Revenues', 'amount_4': 0, 'param_2': 0}
2025-02-24 10:37:16,570 - [cached since 538.4s ago] {'ledger_description_1': 'Expenses', 'amount_1': 0, 'param_1': 0, 'ledger_description_2': 'Revenues', 'amount_2': 0, 'param_2': 0, 'param_3': 10}
2025-02-24 10:37:16,570 - [cached since 538.4s ago] {'ledger_description_1': 'Revenues', 'amount_1': 0, 'ledger_description_2': 'Expenses', 'amount_2': 0, 'param_1': 0, 'ledger_description_3': 'Expenses', 'amount_3': 0, 'ledger_description_4': 'Revenues', 'amount_4': 0, 'param_2': 0}
2025-02-24 10:37:16,756 - BEGIN (implicit)
2025-02-24 10:37:16,757 - SELECT department.department_id AS department_department_id, department.department_name AS department_department_name 
FROM department
2025-02-24 10:37:16,758 - [cached since 538.4s ago] {}
2025-02-24 10:37:16,760 - SELECT min(ledger.general_ledger_date) AS min_1 
FROM ledger
2025-02-24 10:37:16,761 - [cached since 538.4s ago] {}
2025-02-24 10:37:16,763 - SELECT max(ledger.general_ledger_date) AS max_1 
FROM ledger
2025-02-24 10:37:16,765 - [cached since 538.4s ago] {}
2025-02-24 10:37:16,768 - ROLLBACK
2025-02-24 10:37:16,770 - GET http://127.0.0.1:8000/api/initialise - 0.02 ms
2025-02-24 10:37:16,780 - BEGIN (implicit)
2025-02-24 10:37:16,781 - SELECT department.department_id AS department_department_id, department.department_name AS department_department_name 
FROM department
2025-02-24 10:37:16,781 - [cached since 538.4s ago] {}
2025-02-24 10:37:16,784 - SELECT min(ledger.general_ledger_date) AS min_1 
FROM ledger
2025-02-24 10:37:16,785 - [cached since 538.4s ago] {}
2025-02-24 10:37:16,786 - SELECT max(ledger.general_ledger_date) AS max_1 
FROM ledger
2025-02-24 10:37:16,787 - [cached since 538.4s ago] {}
2025-02-24 10:37:16,790 - ROLLBACK
2025-02-24 10:37:16,791 - GET http://127.0.0.1:8000/api/initialise - 0.02 ms
2025-02-24 10:37:18,512 - ROLLBACK
2025-02-24 10:37:18,513 - ROLLBACK
2025-02-24 10:37:18,514 - GET http://127.0.0.1:8000/api/revenue-expenses/ - 1.96 ms
2025-02-24 10:37:18,516 - GET http://127.0.0.1:8000/api/net-profit/ - 1.96 ms
2025-02-24 10:37:18,522 - BEGIN (implicit)
2025-02-24 10:37:18,523 - SELECT year(ledger.general_ledger_date) AS time, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_1)s END) AS total_revenue, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_3)s AND ledger.amount > %(amount_3)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_4)s AND ledger.amount < %(amount_4)s) THEN -ledger.amount ELSE %(param_2)s END) AS total_expenses 
FROM ledger GROUP BY year(ledger.general_ledger_date) ORDER BY year(ledger.general_ledger_date)
2025-02-24 10:37:18,525 - BEGIN (implicit)
2025-02-24 10:37:18,526 - [cached since 540.3s ago] {'ledger_description_1': 'Revenues', 'amount_1': 0, 'ledger_description_2': 'Expenses', 'amount_2': 0, 'param_1': 0, 'ledger_description_3': 'Expenses', 'amount_3': 0, 'ledger_description_4': 'Revenues', 'amount_4': 0, 'param_2': 0}
2025-02-24 10:37:18,527 - SELECT year(ledger.general_ledger_date) AS time, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_1)s END) - sum(CASE WHEN (ledger.ledger_description = %(ledger_description_3)s AND ledger.amount > %(amount_3)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_4)s AND ledger.amount < %(amount_4)s) THEN -ledger.amount ELSE %(param_2)s END) AS net_profit 
FROM ledger GROUP BY year(ledger.general_ledger_date) ORDER BY year(ledger.general_ledger_date)
2025-02-24 10:37:18,527 - [cached since 540.3s ago] {'ledger_description_1': 'Revenues', 'amount_1': 0, 'ledger_description_2': 'Expenses', 'amount_2': 0, 'param_1': 0, 'ledger_description_3': 'Expenses', 'amount_3': 0, 'ledger_description_4': 'Revenues', 'amount_4': 0, 'param_2': 0}
2025-02-24 10:37:19,616 - GET http://127.0.0.1:8000/api/initialise/ - 0.00 ms
2025-02-24 10:37:19,734 - BEGIN (implicit)
2025-02-24 10:37:19,736 - SELECT department.department_name AS department_department_name, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s) THEN ledger.amount ELSE %(param_1)s END) - sum(CASE WHEN (ledger.ledger_description = %(ledger_description_2)s) THEN ledger.amount ELSE %(param_2)s END) AS roi 
FROM ledger INNER JOIN department ON ledger.department_id = department.department_id GROUP BY department.department_name ORDER BY sum(ledger.amount) DESC 
 LIMIT %(param_3)s
2025-02-24 10:37:19,737 - [cached since 541.6s ago] {'ledger_description_1': 'Revenues', 'param_1': 0, 'ledger_description_2': 'Expenses', 'param_2': 0, 'param_3': 5}
2025-02-24 10:37:19,751 - BEGIN (implicit)
2025-02-24 10:37:19,757 - SELECT department.department_name AS department_department_name, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount ELSE %(param_1)s END + CASE WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_2)s END) AS total_expenditure 
FROM ledger INNER JOIN department ON ledger.department_id = department.department_id GROUP BY department.department_name ORDER BY sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount ELSE %(param_1)s END + CASE WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_2)s END) DESC 
 LIMIT %(param_3)s
2025-02-24 10:37:19,758 - [cached since 541.6s ago] {'ledger_description_1': 'Expenses', 'amount_1': 0, 'param_1': 0, 'ledger_description_2': 'Revenues', 'amount_2': 0, 'param_2': 0, 'param_3': 10}
2025-02-24 10:37:19,760 - BEGIN (implicit)
2025-02-24 10:37:19,762 - SELECT year(ledger.general_ledger_date) AS time, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_1)s END) AS total_revenue, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_3)s AND ledger.amount > %(amount_3)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_4)s AND ledger.amount < %(amount_4)s) THEN -ledger.amount ELSE %(param_2)s END) AS total_expenses 
FROM ledger GROUP BY year(ledger.general_ledger_date) ORDER BY year(ledger.general_ledger_date)
2025-02-24 10:37:19,763 - [cached since 541.6s ago] {'ledger_description_1': 'Revenues', 'amount_1': 0, 'ledger_description_2': 'Expenses', 'amount_2': 0, 'param_1': 0, 'ledger_description_3': 'Expenses', 'amount_3': 0, 'ledger_description_4': 'Revenues', 'amount_4': 0, 'param_2': 0}
2025-02-24 10:37:19,768 - GET http://127.0.0.1:8000/api/initialise/ - 0.02 ms
2025-02-24 10:37:19,769 - BEGIN (implicit)
2025-02-24 10:37:19,771 - SELECT year(ledger.general_ledger_date) AS time, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_1)s END) - sum(CASE WHEN (ledger.ledger_description = %(ledger_description_3)s AND ledger.amount > %(amount_3)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_4)s AND ledger.amount < %(amount_4)s) THEN -ledger.amount ELSE %(param_2)s END) AS net_profit 
FROM ledger GROUP BY year(ledger.general_ledger_date) ORDER BY year(ledger.general_ledger_date)
2025-02-24 10:37:19,771 - [cached since 541.6s ago] {'ledger_description_1': 'Revenues', 'amount_1': 0, 'ledger_description_2': 'Expenses', 'amount_2': 0, 'param_1': 0, 'ledger_description_3': 'Expenses', 'amount_3': 0, 'ledger_description_4': 'Revenues', 'amount_4': 0, 'param_2': 0}
2025-02-24 10:37:19,788 - BEGIN (implicit)
2025-02-24 10:37:19,790 - SELECT fund.fund_description AS fund_fund_description, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_1)s END) AS total_revenue, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_3)s AND ledger.amount > %(amount_3)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_4)s AND ledger.amount < %(amount_4)s) THEN -ledger.amount ELSE %(param_2)s END) AS total_expenses, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_1)s END) / nullif(sum(CASE WHEN (ledger.ledger_description = %(ledger_description_3)s AND ledger.amount > %(amount_3)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_4)s AND ledger.amount < %(amount_4)s) THEN -ledger.amount ELSE %(param_2)s END), %(nullif_1)s) AS ratio, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_1)s END) - sum(CASE WHEN (ledger.ledger_description = %(ledger_description_3)s AND ledger.amount > %(amount_3)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_4)s AND ledger.amount < %(amount_4)s) THEN -ledger.amount ELSE %(param_2)s END) AS roi 
FROM ledger INNER JOIN fund ON ledger.fund_id = fund.fund_id GROUP BY fund.fund_description ORDER BY roi DESC
2025-02-24 10:37:19,791 - [cached since 541.6s ago] {'ledger_description_1': 'Revenues', 'amount_1': 0, 'ledger_description_2': 'Expenses', 'amount_2': 0, 'param_1': 0, 'ledger_description_3': 'Expenses', 'amount_3': 0, 'ledger_description_4': 'Revenues', 'amount_4': 0, 'param_2': 0, 'nullif_1': 0}
2025-02-24 10:37:19,827 - ROLLBACK
2025-02-24 10:37:19,829 - GET http://127.0.0.1:8000/api/top-roi/ - 3.28 ms
2025-02-24 10:37:19,944 - BEGIN (implicit)
2025-02-24 10:37:19,945 - SELECT department.department_id AS department_department_id, department.department_name AS department_department_name 
FROM department
2025-02-24 10:37:19,946 - [cached since 541.6s ago] {}
2025-02-24 10:37:19,950 - SELECT min(ledger.general_ledger_date) AS min_1 
FROM ledger
2025-02-24 10:37:19,950 - [cached since 541.6s ago] {}
2025-02-24 10:37:19,954 - SELECT max(ledger.general_ledger_date) AS max_1 
FROM ledger
2025-02-24 10:37:19,955 - [cached since 541.6s ago] {}
2025-02-24 10:37:19,959 - ROLLBACK
2025-02-24 10:37:19,962 - GET http://127.0.0.1:8000/api/initialise - 0.02 ms
2025-02-24 10:37:19,986 - BEGIN (implicit)
2025-02-24 10:37:19,987 - SELECT department.department_id AS department_department_id, department.department_name AS department_department_name 
FROM department
2025-02-24 10:37:19,988 - [cached since 541.6s ago] {}
2025-02-24 10:37:20,004 - SELECT min(ledger.general_ledger_date) AS min_1 
FROM ledger
2025-02-24 10:37:20,004 - [cached since 541.6s ago] {}
2025-02-24 10:37:20,006 - SELECT max(ledger.general_ledger_date) AS max_1 
FROM ledger
2025-02-24 10:37:20,007 - [cached since 541.6s ago] {}
2025-02-24 10:37:20,021 - ROLLBACK
2025-02-24 10:37:20,042 - GET http://127.0.0.1:8000/api/initialise - 0.06 ms
2025-02-24 10:37:20,108 - ROLLBACK
2025-02-24 10:37:20,125 - GET http://127.0.0.1:8000/api/top-budget/ - 3.57 ms
2025-02-24 10:37:20,648 - ROLLBACK
2025-02-24 10:37:20,653 - GET http://127.0.0.1:8000/api/revenue-expenses/ - 2.13 ms
2025-02-24 10:37:20,723 - ROLLBACK
2025-02-24 10:37:20,725 - GET http://127.0.0.1:8000/api/net-profit/ - 2.20 ms
2025-02-24 10:37:21,763 - ROLLBACK
2025-02-24 10:37:21,765 - GET http://127.0.0.1:8000/api/fund-table/ - 5.21 ms
2025-02-24 10:37:22,074 - ROLLBACK
2025-02-24 10:37:22,077 - GET http://127.0.0.1:8000/api/revenue-expenses/ - 2.34 ms
2025-02-24 10:37:22,084 - BEGIN (implicit)
2025-02-24 10:37:22,085 - SELECT year(ledger.general_ledger_date) AS time, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_1)s END) AS total_revenue, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_3)s AND ledger.amount > %(amount_3)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_4)s AND ledger.amount < %(amount_4)s) THEN -ledger.amount ELSE %(param_2)s END) AS total_expenses 
FROM ledger GROUP BY year(ledger.general_ledger_date) ORDER BY year(ledger.general_ledger_date)
2025-02-24 10:37:22,086 - [cached since 543.9s ago] {'ledger_description_1': 'Revenues', 'amount_1': 0, 'ledger_description_2': 'Expenses', 'amount_2': 0, 'param_1': 0, 'ledger_description_3': 'Expenses', 'amount_3': 0, 'ledger_description_4': 'Revenues', 'amount_4': 0, 'param_2': 0}
2025-02-24 10:37:22,096 - ROLLBACK
2025-02-24 10:37:22,099 - GET http://127.0.0.1:8000/api/net-profit/ - 2.36 ms
2025-02-24 10:37:22,106 - BEGIN (implicit)
2025-02-24 10:37:22,108 - SELECT year(ledger.general_ledger_date) AS time, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_1)s END) - sum(CASE WHEN (ledger.ledger_description = %(ledger_description_3)s AND ledger.amount > %(amount_3)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_4)s AND ledger.amount < %(amount_4)s) THEN -ledger.amount ELSE %(param_2)s END) AS net_profit 
FROM ledger GROUP BY year(ledger.general_ledger_date) ORDER BY year(ledger.general_ledger_date)
2025-02-24 10:37:22,108 - [cached since 543.9s ago] {'ledger_description_1': 'Revenues', 'amount_1': 0, 'ledger_description_2': 'Expenses', 'amount_2': 0, 'param_1': 0, 'ledger_description_3': 'Expenses', 'amount_3': 0, 'ledger_description_4': 'Revenues', 'amount_4': 0, 'param_2': 0}
2025-02-24 10:37:23,244 - ROLLBACK
2025-02-24 10:37:23,246 - GET http://127.0.0.1:8000/api/top-roi/ - 3.52 ms
2025-02-24 10:37:23,252 - BEGIN (implicit)
2025-02-24 10:37:23,254 - SELECT department.department_name AS department_department_name, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s) THEN ledger.amount ELSE %(param_1)s END) - sum(CASE WHEN (ledger.ledger_description = %(ledger_description_2)s) THEN ledger.amount ELSE %(param_2)s END) AS roi 
FROM ledger INNER JOIN department ON ledger.department_id = department.department_id GROUP BY department.department_name ORDER BY sum(ledger.amount) DESC 
 LIMIT %(param_3)s
2025-02-24 10:37:23,255 - [cached since 545.1s ago] {'ledger_description_1': 'Revenues', 'param_1': 0, 'ledger_description_2': 'Expenses', 'param_2': 0, 'param_3': 5}
2025-02-24 10:37:23,629 - ROLLBACK
2025-02-24 10:37:23,631 - GET http://127.0.0.1:8000/api/top-budget/ - 3.90 ms
2025-02-24 10:37:23,638 - BEGIN (implicit)
2025-02-24 10:37:23,640 - SELECT department.department_name AS department_department_name, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount ELSE %(param_1)s END + CASE WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_2)s END) AS total_expenditure 
FROM ledger INNER JOIN department ON ledger.department_id = department.department_id GROUP BY department.department_name ORDER BY sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount ELSE %(param_1)s END + CASE WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_2)s END) DESC 
 LIMIT %(param_3)s
2025-02-24 10:37:23,640 - [cached since 545.4s ago] {'ledger_description_1': 'Expenses', 'amount_1': 0, 'param_1': 0, 'ledger_description_2': 'Revenues', 'amount_2': 0, 'param_2': 0, 'param_3': 10}
2025-02-24 10:37:24,010 - ROLLBACK
2025-02-24 10:37:24,011 - ROLLBACK
2025-02-24 10:37:24,013 - GET http://127.0.0.1:8000/api/revenue-expenses/ - 1.93 ms
2025-02-24 10:37:24,015 - GET http://127.0.0.1:8000/api/net-profit/ - 1.91 ms
2025-02-24 10:37:24,658 - ROLLBACK
2025-02-24 10:37:24,660 - GET http://127.0.0.1:8000/api/fund-table/ - 4.92 ms
2025-02-24 10:37:25,530 - ROLLBACK
2025-02-24 10:37:25,532 - GET http://127.0.0.1:8000/api/top-roi/ - 2.28 ms
2025-02-24 10:37:25,813 - ROLLBACK
2025-02-24 10:37:25,815 - GET http://127.0.0.1:8000/api/top-budget/ - 2.18 ms
2025-02-24 10:37:36,196 - GET http://127.0.0.1:8000/api/initialise/ - 0.00 ms
2025-02-24 10:37:36,287 - GET http://127.0.0.1:8000/api/initialise/ - 0.01 ms
2025-02-24 10:37:36,293 - SELECT DATABASE()
2025-02-24 10:37:36,293 - [raw sql] {}
2025-02-24 10:37:36,294 - SELECT @@sql_mode
2025-02-24 10:37:36,295 - [raw sql] {}
2025-02-24 10:37:36,296 - SELECT @@lower_case_table_names
2025-02-24 10:37:36,296 - [raw sql] {}
2025-02-24 10:37:36,298 - BEGIN (implicit)
2025-02-24 10:37:36,298 - BEGIN (implicit)
2025-02-24 10:37:36,313 - SELECT department.department_name AS department_department_name, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s) THEN ledger.amount ELSE %(param_1)s END) - sum(CASE WHEN (ledger.ledger_description = %(ledger_description_2)s) THEN ledger.amount ELSE %(param_2)s END) AS roi 
FROM ledger INNER JOIN department ON ledger.department_id = department.department_id GROUP BY department.department_name ORDER BY sum(ledger.amount) DESC 
 LIMIT %(param_3)s
2025-02-24 10:37:36,313 - BEGIN (implicit)
2025-02-24 10:37:36,317 - SELECT year(ledger.general_ledger_date) AS time, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_1)s END) - sum(CASE WHEN (ledger.ledger_description = %(ledger_description_3)s AND ledger.amount > %(amount_3)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_4)s AND ledger.amount < %(amount_4)s) THEN -ledger.amount ELSE %(param_2)s END) AS net_profit 
FROM ledger GROUP BY year(ledger.general_ledger_date) ORDER BY year(ledger.general_ledger_date)
2025-02-24 10:37:36,318 - [generated in 0.00516s] {'ledger_description_1': 'Revenues', 'param_1': 0, 'ledger_description_2': 'Expenses', 'param_2': 0, 'param_3': 5}
2025-02-24 10:37:36,318 - BEGIN (implicit)
2025-02-24 10:37:36,324 - SELECT department.department_name AS department_department_name, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount ELSE %(param_1)s END + CASE WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_2)s END) AS total_expenditure 
FROM ledger INNER JOIN department ON ledger.department_id = department.department_id GROUP BY department.department_name ORDER BY sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount ELSE %(param_1)s END + CASE WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_2)s END) DESC 
 LIMIT %(param_3)s
2025-02-24 10:37:36,325 - [generated in 0.00714s] {'ledger_description_1': 'Revenues', 'amount_1': 0, 'ledger_description_2': 'Expenses', 'amount_2': 0, 'param_1': 0, 'ledger_description_3': 'Expenses', 'amount_3': 0, 'ledger_description_4': 'Revenues', 'amount_4': 0, 'param_2': 0}
2025-02-24 10:37:36,325 - BEGIN (implicit)
2025-02-24 10:37:36,328 - SELECT year(ledger.general_ledger_date) AS time, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_1)s END) AS total_revenue, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_3)s AND ledger.amount > %(amount_3)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_4)s AND ledger.amount < %(amount_4)s) THEN -ledger.amount ELSE %(param_2)s END) AS total_expenses 
FROM ledger GROUP BY year(ledger.general_ledger_date) ORDER BY year(ledger.general_ledger_date)
2025-02-24 10:37:36,329 - [generated in 0.00494s] {'ledger_description_1': 'Expenses', 'amount_1': 0, 'param_1': 0, 'ledger_description_2': 'Revenues', 'amount_2': 0, 'param_2': 0, 'param_3': 10}
2025-02-24 10:37:36,335 - SELECT fund.fund_description AS fund_fund_description, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_1)s END) AS total_revenue, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_3)s AND ledger.amount > %(amount_3)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_4)s AND ledger.amount < %(amount_4)s) THEN -ledger.amount ELSE %(param_2)s END) AS total_expenses, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_1)s END) / nullif(sum(CASE WHEN (ledger.ledger_description = %(ledger_description_3)s AND ledger.amount > %(amount_3)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_4)s AND ledger.amount < %(amount_4)s) THEN -ledger.amount ELSE %(param_2)s END), %(nullif_1)s) AS ratio, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_1)s END) - sum(CASE WHEN (ledger.ledger_description = %(ledger_description_3)s AND ledger.amount > %(amount_3)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_4)s AND ledger.amount < %(amount_4)s) THEN -ledger.amount ELSE %(param_2)s END) AS roi 
FROM ledger INNER JOIN fund ON ledger.fund_id = fund.fund_id GROUP BY fund.fund_description ORDER BY roi DESC
2025-02-24 10:37:36,336 - [generated in 0.00799s] {'ledger_description_1': 'Revenues', 'amount_1': 0, 'ledger_description_2': 'Expenses', 'amount_2': 0, 'param_1': 0, 'ledger_description_3': 'Expenses', 'amount_3': 0, 'ledger_description_4': 'Revenues', 'amount_4': 0, 'param_2': 0}
2025-02-24 10:37:36,338 - [generated in 0.00204s] {'ledger_description_1': 'Revenues', 'amount_1': 0, 'ledger_description_2': 'Expenses', 'amount_2': 0, 'param_1': 0, 'ledger_description_3': 'Expenses', 'amount_3': 0, 'ledger_description_4': 'Revenues', 'amount_4': 0, 'param_2': 0, 'nullif_1': 0}
2025-02-24 10:37:36,475 - BEGIN (implicit)
2025-02-24 10:37:36,477 - SELECT department.department_id AS department_department_id, department.department_name AS department_department_name 
FROM department
2025-02-24 10:37:36,478 - [generated in 0.00081s] {}
2025-02-24 10:37:36,482 - SELECT min(ledger.general_ledger_date) AS min_1 
FROM ledger
2025-02-24 10:37:36,482 - [generated in 0.00065s] {}
2025-02-24 10:37:36,486 - SELECT max(ledger.general_ledger_date) AS max_1 
FROM ledger
2025-02-24 10:37:36,487 - [generated in 0.00080s] {}
2025-02-24 10:37:36,493 - ROLLBACK
2025-02-24 10:37:36,496 - GET http://127.0.0.1:8000/api/initialise - 0.03 ms
2025-02-24 10:37:36,511 - BEGIN (implicit)
2025-02-24 10:37:36,512 - SELECT department.department_id AS department_department_id, department.department_name AS department_department_name 
FROM department
2025-02-24 10:37:36,513 - [cached since 0.0354s ago] {}
2025-02-24 10:37:36,516 - SELECT min(ledger.general_ledger_date) AS min_1 
FROM ledger
2025-02-24 10:37:36,516 - [cached since 0.03368s ago] {}
2025-02-24 10:37:36,518 - SELECT max(ledger.general_ledger_date) AS max_1 
FROM ledger
2025-02-24 10:37:36,518 - [cached since 0.0315s ago] {}
2025-02-24 10:37:36,521 - ROLLBACK
2025-02-24 10:37:36,523 - GET http://127.0.0.1:8000/api/initialise - 0.01 ms
2025-02-24 10:37:38,046 - ROLLBACK
2025-02-24 10:37:38,048 - GET http://127.0.0.1:8000/api/revenue-expenses/ - 1.78 ms
2025-02-24 10:37:38,055 - BEGIN (implicit)
2025-02-24 10:37:38,055 - ROLLBACK
2025-02-24 10:37:38,056 - SELECT year(ledger.general_ledger_date) AS time, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_1)s END) AS total_revenue, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_3)s AND ledger.amount > %(amount_3)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_4)s AND ledger.amount < %(amount_4)s) THEN -ledger.amount ELSE %(param_2)s END) AS total_expenses 
FROM ledger GROUP BY year(ledger.general_ledger_date) ORDER BY year(ledger.general_ledger_date)
2025-02-24 10:37:38,057 - [cached since 1.729s ago] {'ledger_description_1': 'Revenues', 'amount_1': 0, 'ledger_description_2': 'Expenses', 'amount_2': 0, 'param_1': 0, 'ledger_description_3': 'Expenses', 'amount_3': 0, 'ledger_description_4': 'Revenues', 'amount_4': 0, 'param_2': 0}
2025-02-24 10:37:38,059 - GET http://127.0.0.1:8000/api/net-profit/ - 1.78 ms
2025-02-24 10:37:38,066 - BEGIN (implicit)
2025-02-24 10:37:38,068 - SELECT year(ledger.general_ledger_date) AS time, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_1)s END) - sum(CASE WHEN (ledger.ledger_description = %(ledger_description_3)s AND ledger.amount > %(amount_3)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_4)s AND ledger.amount < %(amount_4)s) THEN -ledger.amount ELSE %(param_2)s END) AS net_profit 
FROM ledger GROUP BY year(ledger.general_ledger_date) ORDER BY year(ledger.general_ledger_date)
2025-02-24 10:37:38,068 - [cached since 1.751s ago] {'ledger_description_1': 'Revenues', 'amount_1': 0, 'ledger_description_2': 'Expenses', 'amount_2': 0, 'param_1': 0, 'ledger_description_3': 'Expenses', 'amount_3': 0, 'ledger_description_4': 'Revenues', 'amount_4': 0, 'param_2': 0}
2025-02-24 10:37:39,122 - ROLLBACK
2025-02-24 10:37:39,123 - GET http://127.0.0.1:8000/api/top-roi/ - 2.85 ms
2025-02-24 10:37:39,130 - BEGIN (implicit)
2025-02-24 10:37:39,131 - SELECT department.department_name AS department_department_name, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s) THEN ledger.amount ELSE %(param_1)s END) - sum(CASE WHEN (ledger.ledger_description = %(ledger_description_2)s) THEN ledger.amount ELSE %(param_2)s END) AS roi 
FROM ledger INNER JOIN department ON ledger.department_id = department.department_id GROUP BY department.department_name ORDER BY sum(ledger.amount) DESC 
 LIMIT %(param_3)s
2025-02-24 10:37:39,132 - [cached since 2.819s ago] {'ledger_description_1': 'Revenues', 'param_1': 0, 'ledger_description_2': 'Expenses', 'param_2': 0, 'param_3': 5}
2025-02-24 10:37:39,458 - ROLLBACK
2025-02-24 10:37:39,460 - GET http://127.0.0.1:8000/api/top-budget/ - 3.19 ms
2025-02-24 10:37:39,467 - BEGIN (implicit)
2025-02-24 10:37:39,468 - SELECT department.department_name AS department_department_name, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount ELSE %(param_1)s END + CASE WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_2)s END) AS total_expenditure 
FROM ledger INNER JOIN department ON ledger.department_id = department.department_id GROUP BY department.department_name ORDER BY sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount ELSE %(param_1)s END + CASE WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_2)s END) DESC 
 LIMIT %(param_3)s
2025-02-24 10:37:39,469 - [cached since 3.145s ago] {'ledger_description_1': 'Expenses', 'amount_1': 0, 'param_1': 0, 'ledger_description_2': 'Revenues', 'amount_2': 0, 'param_2': 0, 'param_3': 10}
2025-02-24 10:37:39,923 - ROLLBACK
2025-02-24 10:37:39,925 - GET http://127.0.0.1:8000/api/net-profit/ - 1.86 ms
2025-02-24 10:37:39,934 - ROLLBACK
2025-02-24 10:37:39,937 - GET http://127.0.0.1:8000/api/revenue-expenses/ - 1.89 ms
2025-02-24 10:37:40,556 - ROLLBACK
2025-02-24 10:37:40,558 - GET http://127.0.0.1:8000/api/fund-table/ - 4.28 ms
2025-02-24 10:37:40,563 - BEGIN (implicit)
2025-02-24 10:37:40,564 - SELECT fund.fund_description AS fund_fund_description, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_1)s END) AS total_revenue, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_3)s AND ledger.amount > %(amount_3)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_4)s AND ledger.amount < %(amount_4)s) THEN -ledger.amount ELSE %(param_2)s END) AS total_expenses, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_1)s END) / nullif(sum(CASE WHEN (ledger.ledger_description = %(ledger_description_3)s AND ledger.amount > %(amount_3)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_4)s AND ledger.amount < %(amount_4)s) THEN -ledger.amount ELSE %(param_2)s END), %(nullif_1)s) AS ratio, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_1)s END) - sum(CASE WHEN (ledger.ledger_description = %(ledger_description_3)s AND ledger.amount > %(amount_3)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_4)s AND ledger.amount < %(amount_4)s) THEN -ledger.amount ELSE %(param_2)s END) AS roi 
FROM ledger INNER JOIN fund ON ledger.fund_id = fund.fund_id GROUP BY fund.fund_description ORDER BY roi DESC
2025-02-24 10:37:40,566 - [cached since 4.23s ago] {'ledger_description_1': 'Revenues', 'amount_1': 0, 'ledger_description_2': 'Expenses', 'amount_2': 0, 'param_1': 0, 'ledger_description_3': 'Expenses', 'amount_3': 0, 'ledger_description_4': 'Revenues', 'amount_4': 0, 'param_2': 0, 'nullif_1': 0}
2025-02-24 10:37:41,598 - ROLLBACK
2025-02-24 10:37:41,599 - GET http://127.0.0.1:8000/api/top-roi/ - 2.47 ms
2025-02-24 10:37:41,940 - ROLLBACK
2025-02-24 10:37:41,942 - GET http://127.0.0.1:8000/api/top-budget/ - 2.48 ms
2025-02-24 10:37:43,310 - ROLLBACK
2025-02-24 10:37:43,311 - GET http://127.0.0.1:8000/api/fund-table/ - 2.75 ms
2025-02-24 10:39:49,406 - POST http://127.0.0.1:8000/login - 0.29 ms
2025-02-24 10:39:49,410 - GET http://127.0.0.1:8000/api/initialise/ - 0.00 ms
2025-02-24 10:39:49,419 - GET http://127.0.0.1:8000/api/initialise/ - 0.00 ms
2025-02-24 10:39:49,422 - BEGIN (implicit)
2025-02-24 10:39:49,423 - BEGIN (implicit)
2025-02-24 10:39:49,424 - BEGIN (implicit)
2025-02-24 10:39:49,426 - BEGIN (implicit)
2025-02-24 10:39:49,428 - BEGIN (implicit)
2025-02-24 10:39:49,429 - SELECT year(ledger.general_ledger_date) AS time, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_1)s END) - sum(CASE WHEN (ledger.ledger_description = %(ledger_description_3)s AND ledger.amount > %(amount_3)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_4)s AND ledger.amount < %(amount_4)s) THEN -ledger.amount ELSE %(param_2)s END) AS net_profit 
FROM ledger GROUP BY year(ledger.general_ledger_date) ORDER BY year(ledger.general_ledger_date)
2025-02-24 10:39:49,430 - SELECT department.department_name AS department_department_name, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s) THEN ledger.amount ELSE %(param_1)s END) - sum(CASE WHEN (ledger.ledger_description = %(ledger_description_2)s) THEN ledger.amount ELSE %(param_2)s END) AS roi 
FROM ledger INNER JOIN department ON ledger.department_id = department.department_id GROUP BY department.department_name ORDER BY sum(ledger.amount) DESC 
 LIMIT %(param_3)s
2025-02-24 10:39:49,430 - SELECT fund.fund_description AS fund_fund_description, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_1)s END) AS total_revenue, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_3)s AND ledger.amount > %(amount_3)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_4)s AND ledger.amount < %(amount_4)s) THEN -ledger.amount ELSE %(param_2)s END) AS total_expenses, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_1)s END) / nullif(sum(CASE WHEN (ledger.ledger_description = %(ledger_description_3)s AND ledger.amount > %(amount_3)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_4)s AND ledger.amount < %(amount_4)s) THEN -ledger.amount ELSE %(param_2)s END), %(nullif_1)s) AS ratio, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_1)s END) - sum(CASE WHEN (ledger.ledger_description = %(ledger_description_3)s AND ledger.amount > %(amount_3)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_4)s AND ledger.amount < %(amount_4)s) THEN -ledger.amount ELSE %(param_2)s END) AS roi 
FROM ledger INNER JOIN fund ON ledger.fund_id = fund.fund_id GROUP BY fund.fund_description ORDER BY roi DESC
2025-02-24 10:39:49,432 - SELECT year(ledger.general_ledger_date) AS time, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_1)s END) AS total_revenue, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_3)s AND ledger.amount > %(amount_3)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_4)s AND ledger.amount < %(amount_4)s) THEN -ledger.amount ELSE %(param_2)s END) AS total_expenses 
FROM ledger GROUP BY year(ledger.general_ledger_date) ORDER BY year(ledger.general_ledger_date)
2025-02-24 10:39:49,432 - SELECT department.department_name AS department_department_name, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount ELSE %(param_1)s END + CASE WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_2)s END) AS total_expenditure 
FROM ledger INNER JOIN department ON ledger.department_id = department.department_id GROUP BY department.department_name ORDER BY sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount ELSE %(param_1)s END + CASE WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_2)s END) DESC 
 LIMIT %(param_3)s
2025-02-24 10:39:49,432 - [cached since 133.1s ago] {'ledger_description_1': 'Revenues', 'amount_1': 0, 'ledger_description_2': 'Expenses', 'amount_2': 0, 'param_1': 0, 'ledger_description_3': 'Expenses', 'amount_3': 0, 'ledger_description_4': 'Revenues', 'amount_4': 0, 'param_2': 0}
2025-02-24 10:39:49,433 - [cached since 133.1s ago] {'ledger_description_1': 'Revenues', 'param_1': 0, 'ledger_description_2': 'Expenses', 'param_2': 0, 'param_3': 5}
2025-02-24 10:39:49,433 - [cached since 133.1s ago] {'ledger_description_1': 'Revenues', 'amount_1': 0, 'ledger_description_2': 'Expenses', 'amount_2': 0, 'param_1': 0, 'ledger_description_3': 'Expenses', 'amount_3': 0, 'ledger_description_4': 'Revenues', 'amount_4': 0, 'param_2': 0, 'nullif_1': 0}
2025-02-24 10:39:49,433 - [cached since 133.1s ago] {'ledger_description_1': 'Revenues', 'amount_1': 0, 'ledger_description_2': 'Expenses', 'amount_2': 0, 'param_1': 0, 'ledger_description_3': 'Expenses', 'amount_3': 0, 'ledger_description_4': 'Revenues', 'amount_4': 0, 'param_2': 0}
2025-02-24 10:39:49,434 - [cached since 133.1s ago] {'ledger_description_1': 'Expenses', 'amount_1': 0, 'param_1': 0, 'ledger_description_2': 'Revenues', 'amount_2': 0, 'param_2': 0, 'param_3': 10}
2025-02-24 10:39:49,622 - BEGIN (implicit)
2025-02-24 10:39:49,623 - SELECT department.department_id AS department_department_id, department.department_name AS department_department_name 
FROM department
2025-02-24 10:39:49,623 - [cached since 133.1s ago] {}
2025-02-24 10:39:49,627 - SELECT min(ledger.general_ledger_date) AS min_1 
FROM ledger
2025-02-24 10:39:49,627 - [cached since 133.1s ago] {}
2025-02-24 10:39:49,629 - SELECT max(ledger.general_ledger_date) AS max_1 
FROM ledger
2025-02-24 10:39:49,630 - [cached since 133.1s ago] {}
2025-02-24 10:39:49,639 - ROLLBACK
2025-02-24 10:39:49,643 - GET http://127.0.0.1:8000/api/initialise - 0.03 ms
2025-02-24 10:39:49,648 - BEGIN (implicit)
2025-02-24 10:39:49,649 - SELECT department.department_id AS department_department_id, department.department_name AS department_department_name 
FROM department
2025-02-24 10:39:49,649 - [cached since 133.2s ago] {}
2025-02-24 10:39:49,651 - SELECT min(ledger.general_ledger_date) AS min_1 
FROM ledger
2025-02-24 10:39:49,652 - [cached since 133.2s ago] {}
2025-02-24 10:39:49,653 - SELECT max(ledger.general_ledger_date) AS max_1 
FROM ledger
2025-02-24 10:39:49,654 - [cached since 133.2s ago] {}
2025-02-24 10:39:49,656 - ROLLBACK
2025-02-24 10:39:49,659 - GET http://127.0.0.1:8000/api/initialise - 0.01 ms
2025-02-24 10:39:50,996 - ROLLBACK
2025-02-24 10:39:50,997 - GET http://127.0.0.1:8000/api/net-profit/ - 1.59 ms
2025-02-24 10:39:51,003 - BEGIN (implicit)
2025-02-24 10:39:51,004 - SELECT year(ledger.general_ledger_date) AS time, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_1)s END) - sum(CASE WHEN (ledger.ledger_description = %(ledger_description_3)s AND ledger.amount > %(amount_3)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_4)s AND ledger.amount < %(amount_4)s) THEN -ledger.amount ELSE %(param_2)s END) AS net_profit 
FROM ledger GROUP BY year(ledger.general_ledger_date) ORDER BY year(ledger.general_ledger_date)
2025-02-24 10:39:51,005 - [cached since 134.7s ago] {'ledger_description_1': 'Revenues', 'amount_1': 0, 'ledger_description_2': 'Expenses', 'amount_2': 0, 'param_1': 0, 'ledger_description_3': 'Expenses', 'amount_3': 0, 'ledger_description_4': 'Revenues', 'amount_4': 0, 'param_2': 0}
2025-02-24 10:39:51,022 - ROLLBACK
2025-02-24 10:39:51,024 - GET http://127.0.0.1:8000/api/revenue-expenses/ - 1.61 ms
2025-02-24 10:39:51,031 - BEGIN (implicit)
2025-02-24 10:39:51,031 - SELECT year(ledger.general_ledger_date) AS time, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_1)s END) AS total_revenue, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_3)s AND ledger.amount > %(amount_3)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_4)s AND ledger.amount < %(amount_4)s) THEN -ledger.amount ELSE %(param_2)s END) AS total_expenses 
FROM ledger GROUP BY year(ledger.general_ledger_date) ORDER BY year(ledger.general_ledger_date)
2025-02-24 10:39:51,032 - [cached since 134.7s ago] {'ledger_description_1': 'Revenues', 'amount_1': 0, 'ledger_description_2': 'Expenses', 'amount_2': 0, 'param_1': 0, 'ledger_description_3': 'Expenses', 'amount_3': 0, 'ledger_description_4': 'Revenues', 'amount_4': 0, 'param_2': 0}
2025-02-24 10:39:51,914 - ROLLBACK
2025-02-24 10:39:51,916 - GET http://127.0.0.1:8000/api/top-roi/ - 2.50 ms
2025-02-24 10:39:51,921 - BEGIN (implicit)
2025-02-24 10:39:51,922 - SELECT department.department_name AS department_department_name, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s) THEN ledger.amount ELSE %(param_1)s END) - sum(CASE WHEN (ledger.ledger_description = %(ledger_description_2)s) THEN ledger.amount ELSE %(param_2)s END) AS roi 
FROM ledger INNER JOIN department ON ledger.department_id = department.department_id GROUP BY department.department_name ORDER BY sum(ledger.amount) DESC 
 LIMIT %(param_3)s
2025-02-24 10:39:51,923 - [cached since 135.6s ago] {'ledger_description_1': 'Revenues', 'param_1': 0, 'ledger_description_2': 'Expenses', 'param_2': 0, 'param_3': 5}
2025-02-24 10:39:52,165 - ROLLBACK
2025-02-24 10:39:52,167 - GET http://127.0.0.1:8000/api/top-budget/ - 2.75 ms
2025-02-24 10:39:52,172 - BEGIN (implicit)
2025-02-24 10:39:52,173 - SELECT department.department_name AS department_department_name, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount ELSE %(param_1)s END + CASE WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_2)s END) AS total_expenditure 
FROM ledger INNER JOIN department ON ledger.department_id = department.department_id GROUP BY department.department_name ORDER BY sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount ELSE %(param_1)s END + CASE WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_2)s END) DESC 
 LIMIT %(param_3)s
2025-02-24 10:39:52,175 - [cached since 135.9s ago] {'ledger_description_1': 'Expenses', 'amount_1': 0, 'param_1': 0, 'ledger_description_2': 'Revenues', 'amount_2': 0, 'param_2': 0, 'param_3': 10}
2025-02-24 10:39:52,482 - ROLLBACK
2025-02-24 10:39:52,484 - GET http://127.0.0.1:8000/api/revenue-expenses/ - 1.46 ms
2025-02-24 10:39:52,495 - ROLLBACK
2025-02-24 10:39:52,497 - GET http://127.0.0.1:8000/api/net-profit/ - 1.50 ms
2025-02-24 10:39:52,975 - ROLLBACK
2025-02-24 10:39:52,977 - GET http://127.0.0.1:8000/api/fund-table/ - 3.56 ms
2025-02-24 10:39:52,982 - BEGIN (implicit)
2025-02-24 10:39:52,983 - SELECT fund.fund_description AS fund_fund_description, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_1)s END) AS total_revenue, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_3)s AND ledger.amount > %(amount_3)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_4)s AND ledger.amount < %(amount_4)s) THEN -ledger.amount ELSE %(param_2)s END) AS total_expenses, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_1)s END) / nullif(sum(CASE WHEN (ledger.ledger_description = %(ledger_description_3)s AND ledger.amount > %(amount_3)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_4)s AND ledger.amount < %(amount_4)s) THEN -ledger.amount ELSE %(param_2)s END), %(nullif_1)s) AS ratio, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_1)s END) - sum(CASE WHEN (ledger.ledger_description = %(ledger_description_3)s AND ledger.amount > %(amount_3)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_4)s AND ledger.amount < %(amount_4)s) THEN -ledger.amount ELSE %(param_2)s END) AS roi 
FROM ledger INNER JOIN fund ON ledger.fund_id = fund.fund_id GROUP BY fund.fund_description ORDER BY roi DESC
2025-02-24 10:39:52,984 - [cached since 136.6s ago] {'ledger_description_1': 'Revenues', 'amount_1': 0, 'ledger_description_2': 'Expenses', 'amount_2': 0, 'param_1': 0, 'ledger_description_3': 'Expenses', 'amount_3': 0, 'ledger_description_4': 'Revenues', 'amount_4': 0, 'param_2': 0, 'nullif_1': 0}
2025-02-24 10:39:54,007 - ROLLBACK
2025-02-24 10:39:54,009 - GET http://127.0.0.1:8000/api/top-roi/ - 2.09 ms
2025-02-24 10:39:54,345 - ROLLBACK
2025-02-24 10:39:54,345 - GET http://127.0.0.1:8000/api/top-budget/ - 2.17 ms
2025-02-24 10:39:55,435 - ROLLBACK
2025-02-24 10:39:55,437 - GET http://127.0.0.1:8000/api/fund-table/ - 2.46 ms
2025-02-24 10:40:48,852 - GET http://127.0.0.1:8000/api/initialise/ - 0.00 ms
2025-02-24 10:40:48,922 - BEGIN (implicit)
2025-02-24 10:40:48,925 - SELECT department.department_name AS department_department_name, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s) THEN ledger.amount ELSE %(param_1)s END) - sum(CASE WHEN (ledger.ledger_description = %(ledger_description_2)s) THEN ledger.amount ELSE %(param_2)s END) AS roi 
FROM ledger INNER JOIN department ON ledger.department_id = department.department_id GROUP BY department.department_name ORDER BY sum(ledger.amount) DESC 
 LIMIT %(param_3)s
2025-02-24 10:40:48,927 - [cached since 192.6s ago] {'ledger_description_1': 'Revenues', 'param_1': 0, 'ledger_description_2': 'Expenses', 'param_2': 0, 'param_3': 5}
2025-02-24 10:40:48,940 - GET http://127.0.0.1:8000/api/initialise/ - 0.01 ms
2025-02-24 10:40:48,936 - BEGIN (implicit)
2025-02-24 10:40:48,939 - BEGIN (implicit)
2025-02-24 10:40:48,940 - BEGIN (implicit)
2025-02-24 10:40:48,941 - BEGIN (implicit)
2025-02-24 10:40:48,943 - SELECT department.department_name AS department_department_name, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount ELSE %(param_1)s END + CASE WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_2)s END) AS total_expenditure 
FROM ledger INNER JOIN department ON ledger.department_id = department.department_id GROUP BY department.department_name ORDER BY sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount ELSE %(param_1)s END + CASE WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_2)s END) DESC 
 LIMIT %(param_3)s
2025-02-24 10:40:48,944 - SELECT year(ledger.general_ledger_date) AS time, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_1)s END) AS total_revenue, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_3)s AND ledger.amount > %(amount_3)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_4)s AND ledger.amount < %(amount_4)s) THEN -ledger.amount ELSE %(param_2)s END) AS total_expenses 
FROM ledger GROUP BY year(ledger.general_ledger_date) ORDER BY year(ledger.general_ledger_date)
2025-02-24 10:40:48,945 - SELECT year(ledger.general_ledger_date) AS time, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_1)s END) - sum(CASE WHEN (ledger.ledger_description = %(ledger_description_3)s AND ledger.amount > %(amount_3)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_4)s AND ledger.amount < %(amount_4)s) THEN -ledger.amount ELSE %(param_2)s END) AS net_profit 
FROM ledger GROUP BY year(ledger.general_ledger_date) ORDER BY year(ledger.general_ledger_date)
2025-02-24 10:40:48,946 - SELECT fund.fund_description AS fund_fund_description, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_1)s END) AS total_revenue, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_3)s AND ledger.amount > %(amount_3)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_4)s AND ledger.amount < %(amount_4)s) THEN -ledger.amount ELSE %(param_2)s END) AS total_expenses, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_1)s END) / nullif(sum(CASE WHEN (ledger.ledger_description = %(ledger_description_3)s AND ledger.amount > %(amount_3)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_4)s AND ledger.amount < %(amount_4)s) THEN -ledger.amount ELSE %(param_2)s END), %(nullif_1)s) AS ratio, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_1)s END) - sum(CASE WHEN (ledger.ledger_description = %(ledger_description_3)s AND ledger.amount > %(amount_3)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_4)s AND ledger.amount < %(amount_4)s) THEN -ledger.amount ELSE %(param_2)s END) AS roi 
FROM ledger INNER JOIN fund ON ledger.fund_id = fund.fund_id GROUP BY fund.fund_description ORDER BY roi DESC
2025-02-24 10:40:48,947 - [cached since 192.6s ago] {'ledger_description_1': 'Expenses', 'amount_1': 0, 'param_1': 0, 'ledger_description_2': 'Revenues', 'amount_2': 0, 'param_2': 0, 'param_3': 10}
2025-02-24 10:40:48,947 - [cached since 192.6s ago] {'ledger_description_1': 'Revenues', 'amount_1': 0, 'ledger_description_2': 'Expenses', 'amount_2': 0, 'param_1': 0, 'ledger_description_3': 'Expenses', 'amount_3': 0, 'ledger_description_4': 'Revenues', 'amount_4': 0, 'param_2': 0}
2025-02-24 10:40:48,947 - [cached since 192.6s ago] {'ledger_description_1': 'Revenues', 'amount_1': 0, 'ledger_description_2': 'Expenses', 'amount_2': 0, 'param_1': 0, 'ledger_description_3': 'Expenses', 'amount_3': 0, 'ledger_description_4': 'Revenues', 'amount_4': 0, 'param_2': 0}
2025-02-24 10:40:48,948 - [cached since 192.6s ago] {'ledger_description_1': 'Revenues', 'amount_1': 0, 'ledger_description_2': 'Expenses', 'amount_2': 0, 'param_1': 0, 'ledger_description_3': 'Expenses', 'amount_3': 0, 'ledger_description_4': 'Revenues', 'amount_4': 0, 'param_2': 0, 'nullif_1': 0}
2025-02-24 10:40:49,116 - BEGIN (implicit)
2025-02-24 10:40:49,117 - SELECT department.department_id AS department_department_id, department.department_name AS department_department_name 
FROM department
2025-02-24 10:40:49,117 - [cached since 192.6s ago] {}
2025-02-24 10:40:49,120 - SELECT min(ledger.general_ledger_date) AS min_1 
FROM ledger
2025-02-24 10:40:49,121 - [cached since 192.6s ago] {}
2025-02-24 10:40:49,122 - SELECT max(ledger.general_ledger_date) AS max_1 
FROM ledger
2025-02-24 10:40:49,123 - [cached since 192.6s ago] {}
2025-02-24 10:40:49,128 - ROLLBACK
2025-02-24 10:40:49,130 - GET http://127.0.0.1:8000/api/initialise - 0.02 ms
2025-02-24 10:40:49,135 - BEGIN (implicit)
2025-02-24 10:40:49,136 - SELECT department.department_id AS department_department_id, department.department_name AS department_department_name 
FROM department
2025-02-24 10:40:49,137 - [cached since 192.7s ago] {}
2025-02-24 10:40:49,139 - SELECT min(ledger.general_ledger_date) AS min_1 
FROM ledger
2025-02-24 10:40:49,140 - [cached since 192.7s ago] {}
2025-02-24 10:40:49,142 - SELECT max(ledger.general_ledger_date) AS max_1 
FROM ledger
2025-02-24 10:40:49,142 - [cached since 192.7s ago] {}
2025-02-24 10:40:49,145 - ROLLBACK
2025-02-24 10:40:49,146 - GET http://127.0.0.1:8000/api/initialise - 0.01 ms
2025-02-24 10:40:50,533 - ROLLBACK
2025-02-24 10:40:50,535 - GET http://127.0.0.1:8000/api/revenue-expenses/ - 1.61 ms
2025-02-24 10:40:50,537 - ROLLBACK
2025-02-24 10:40:50,540 - GET http://127.0.0.1:8000/api/net-profit/ - 1.61 ms
2025-02-24 10:40:50,542 - BEGIN (implicit)
2025-02-24 10:40:50,543 - SELECT year(ledger.general_ledger_date) AS time, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_1)s END) AS total_revenue, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_3)s AND ledger.amount > %(amount_3)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_4)s AND ledger.amount < %(amount_4)s) THEN -ledger.amount ELSE %(param_2)s END) AS total_expenses 
FROM ledger GROUP BY year(ledger.general_ledger_date) ORDER BY year(ledger.general_ledger_date)
2025-02-24 10:40:50,544 - [cached since 194.2s ago] {'ledger_description_1': 'Revenues', 'amount_1': 0, 'ledger_description_2': 'Expenses', 'amount_2': 0, 'param_1': 0, 'ledger_description_3': 'Expenses', 'amount_3': 0, 'ledger_description_4': 'Revenues', 'amount_4': 0, 'param_2': 0}
2025-02-24 10:40:50,548 - BEGIN (implicit)
2025-02-24 10:40:50,549 - SELECT year(ledger.general_ledger_date) AS time, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_1)s END) - sum(CASE WHEN (ledger.ledger_description = %(ledger_description_3)s AND ledger.amount > %(amount_3)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_4)s AND ledger.amount < %(amount_4)s) THEN -ledger.amount ELSE %(param_2)s END) AS net_profit 
FROM ledger GROUP BY year(ledger.general_ledger_date) ORDER BY year(ledger.general_ledger_date)
2025-02-24 10:40:50,550 - [cached since 194.2s ago] {'ledger_description_1': 'Revenues', 'amount_1': 0, 'ledger_description_2': 'Expenses', 'amount_2': 0, 'param_1': 0, 'ledger_description_3': 'Expenses', 'amount_3': 0, 'ledger_description_4': 'Revenues', 'amount_4': 0, 'param_2': 0}
2025-02-24 10:40:51,486 - ROLLBACK
2025-02-24 10:40:51,488 - GET http://127.0.0.1:8000/api/top-roi/ - 2.57 ms
2025-02-24 10:40:51,493 - BEGIN (implicit)
2025-02-24 10:40:51,494 - SELECT department.department_name AS department_department_name, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s) THEN ledger.amount ELSE %(param_1)s END) - sum(CASE WHEN (ledger.ledger_description = %(ledger_description_2)s) THEN ledger.amount ELSE %(param_2)s END) AS roi 
FROM ledger INNER JOIN department ON ledger.department_id = department.department_id GROUP BY department.department_name ORDER BY sum(ledger.amount) DESC 
 LIMIT %(param_3)s
2025-02-24 10:40:51,495 - [cached since 195.2s ago] {'ledger_description_1': 'Revenues', 'param_1': 0, 'ledger_description_2': 'Expenses', 'param_2': 0, 'param_3': 5}
2025-02-24 10:40:51,672 - ROLLBACK
2025-02-24 10:40:51,673 - GET http://127.0.0.1:8000/api/top-budget/ - 2.75 ms
2025-02-24 10:40:51,679 - BEGIN (implicit)
2025-02-24 10:40:51,680 - SELECT department.department_name AS department_department_name, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount ELSE %(param_1)s END + CASE WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_2)s END) AS total_expenditure 
FROM ledger INNER JOIN department ON ledger.department_id = department.department_id GROUP BY department.department_name ORDER BY sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount ELSE %(param_1)s END + CASE WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_2)s END) DESC 
 LIMIT %(param_3)s
2025-02-24 10:40:51,681 - [cached since 195.4s ago] {'ledger_description_1': 'Expenses', 'amount_1': 0, 'param_1': 0, 'ledger_description_2': 'Revenues', 'amount_2': 0, 'param_2': 0, 'param_3': 10}
2025-02-24 10:40:52,026 - ROLLBACK
2025-02-24 10:40:52,027 - GET http://127.0.0.1:8000/api/revenue-expenses/ - 1.49 ms
2025-02-24 10:40:52,031 - ROLLBACK
2025-02-24 10:40:52,033 - GET http://127.0.0.1:8000/api/net-profit/ - 1.49 ms
2025-02-24 10:40:52,578 - ROLLBACK
2025-02-24 10:40:52,580 - GET http://127.0.0.1:8000/api/fund-table/ - 3.65 ms
2025-02-24 10:40:52,587 - BEGIN (implicit)
2025-02-24 10:40:52,589 - SELECT fund.fund_description AS fund_fund_description, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_1)s END) AS total_revenue, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_3)s AND ledger.amount > %(amount_3)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_4)s AND ledger.amount < %(amount_4)s) THEN -ledger.amount ELSE %(param_2)s END) AS total_expenses, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_1)s END) / nullif(sum(CASE WHEN (ledger.ledger_description = %(ledger_description_3)s AND ledger.amount > %(amount_3)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_4)s AND ledger.amount < %(amount_4)s) THEN -ledger.amount ELSE %(param_2)s END), %(nullif_1)s) AS ratio, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_1)s END) - sum(CASE WHEN (ledger.ledger_description = %(ledger_description_3)s AND ledger.amount > %(amount_3)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_4)s AND ledger.amount < %(amount_4)s) THEN -ledger.amount ELSE %(param_2)s END) AS roi 
FROM ledger INNER JOIN fund ON ledger.fund_id = fund.fund_id GROUP BY fund.fund_description ORDER BY roi DESC
2025-02-24 10:40:52,589 - [cached since 196.3s ago] {'ledger_description_1': 'Revenues', 'amount_1': 0, 'ledger_description_2': 'Expenses', 'amount_2': 0, 'param_1': 0, 'ledger_description_3': 'Expenses', 'amount_3': 0, 'ledger_description_4': 'Revenues', 'amount_4': 0, 'param_2': 0, 'nullif_1': 0}
2025-02-24 10:40:53,727 - ROLLBACK
2025-02-24 10:40:53,728 - GET http://127.0.0.1:8000/api/top-roi/ - 2.24 ms
2025-02-24 10:40:53,964 - ROLLBACK
2025-02-24 10:40:53,965 - GET http://127.0.0.1:8000/api/top-budget/ - 2.29 ms
2025-02-24 10:40:55,344 - ROLLBACK
2025-02-24 10:40:55,345 - GET http://127.0.0.1:8000/api/fund-table/ - 2.76 ms
2025-02-24 10:52:49,659 - GET http://127.0.0.1:8000/api/initialise/ - 0.00 ms
2025-02-24 10:52:49,660 - GET http://127.0.0.1:8000/api/initialise/ - 0.00 ms
2025-02-24 10:52:49,664 - BEGIN (implicit)
2025-02-24 10:52:49,665 - SELECT department.department_id AS department_department_id, department.department_name AS department_department_name 
FROM department
2025-02-24 10:52:49,665 - [cached since 913.2s ago] {}
2025-02-24 10:52:49,668 - SELECT min(ledger.general_ledger_date) AS min_1 
FROM ledger
2025-02-24 10:52:49,670 - [cached since 913.2s ago] {}
2025-02-24 10:52:49,672 - SELECT max(ledger.general_ledger_date) AS max_1 
FROM ledger
2025-02-24 10:52:49,673 - [cached since 913.2s ago] {}
2025-02-24 10:52:49,678 - ROLLBACK
2025-02-24 10:52:49,679 - GET http://127.0.0.1:8000/api/initialise - 0.02 ms
2025-02-24 10:52:49,684 - BEGIN (implicit)
2025-02-24 10:52:49,684 - SELECT department.department_id AS department_department_id, department.department_name AS department_department_name 
FROM department
2025-02-24 10:52:49,685 - [cached since 913.2s ago] {}
2025-02-24 10:52:49,686 - SELECT min(ledger.general_ledger_date) AS min_1 
FROM ledger
2025-02-24 10:52:49,687 - [cached since 913.2s ago] {}
2025-02-24 10:52:49,688 - SELECT max(ledger.general_ledger_date) AS max_1 
FROM ledger
2025-02-24 10:52:49,689 - [cached since 913.2s ago] {}
2025-02-24 10:52:49,691 - ROLLBACK
2025-02-24 10:52:49,693 - GET http://127.0.0.1:8000/api/initialise - 0.01 ms
2025-02-24 10:53:48,434 - GET http://127.0.0.1:8000/api/initialise/ - 0.00 ms
2025-02-24 10:53:48,490 - BEGIN (implicit)
2025-02-24 10:53:48,491 - SELECT department.department_name AS department_department_name, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s) THEN ledger.amount ELSE %(param_1)s END) - sum(CASE WHEN (ledger.ledger_description = %(ledger_description_2)s) THEN ledger.amount ELSE %(param_2)s END) AS roi 
FROM ledger INNER JOIN department ON ledger.department_id = department.department_id GROUP BY department.department_name ORDER BY sum(ledger.amount) DESC 
 LIMIT %(param_3)s
2025-02-24 10:53:48,491 - [cached since 972.2s ago] {'ledger_description_1': 'Revenues', 'param_1': 0, 'ledger_description_2': 'Expenses', 'param_2': 0, 'param_3': 5}
2025-02-24 10:53:48,493 - BEGIN (implicit)
2025-02-24 10:53:48,494 - SELECT department.department_name AS department_department_name, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount ELSE %(param_1)s END + CASE WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_2)s END) AS total_expenditure 
FROM ledger INNER JOIN department ON ledger.department_id = department.department_id GROUP BY department.department_name ORDER BY sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount ELSE %(param_1)s END + CASE WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_2)s END) DESC 
 LIMIT %(param_3)s
2025-02-24 10:53:48,494 - [cached since 972.2s ago] {'ledger_description_1': 'Expenses', 'amount_1': 0, 'param_1': 0, 'ledger_description_2': 'Revenues', 'amount_2': 0, 'param_2': 0, 'param_3': 10}
2025-02-24 10:53:48,497 - BEGIN (implicit)
2025-02-24 10:53:48,502 - GET http://127.0.0.1:8000/api/initialise/ - 0.01 ms
2025-02-24 10:53:48,499 - BEGIN (implicit)
2025-02-24 10:53:48,501 - SELECT year(ledger.general_ledger_date) AS time, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_1)s END) AS total_revenue, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_3)s AND ledger.amount > %(amount_3)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_4)s AND ledger.amount < %(amount_4)s) THEN -ledger.amount ELSE %(param_2)s END) AS total_expenses 
FROM ledger GROUP BY year(ledger.general_ledger_date) ORDER BY year(ledger.general_ledger_date)
2025-02-24 10:53:48,502 - BEGIN (implicit)
2025-02-24 10:53:48,504 - SELECT year(ledger.general_ledger_date) AS time, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_1)s END) - sum(CASE WHEN (ledger.ledger_description = %(ledger_description_3)s AND ledger.amount > %(amount_3)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_4)s AND ledger.amount < %(amount_4)s) THEN -ledger.amount ELSE %(param_2)s END) AS net_profit 
FROM ledger GROUP BY year(ledger.general_ledger_date) ORDER BY year(ledger.general_ledger_date)
2025-02-24 10:53:48,505 - [cached since 972.2s ago] {'ledger_description_1': 'Revenues', 'amount_1': 0, 'ledger_description_2': 'Expenses', 'amount_2': 0, 'param_1': 0, 'ledger_description_3': 'Expenses', 'amount_3': 0, 'ledger_description_4': 'Revenues', 'amount_4': 0, 'param_2': 0}
2025-02-24 10:53:48,506 - SELECT fund.fund_description AS fund_fund_description, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_1)s END) AS total_revenue, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_3)s AND ledger.amount > %(amount_3)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_4)s AND ledger.amount < %(amount_4)s) THEN -ledger.amount ELSE %(param_2)s END) AS total_expenses, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_1)s END) / nullif(sum(CASE WHEN (ledger.ledger_description = %(ledger_description_3)s AND ledger.amount > %(amount_3)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_4)s AND ledger.amount < %(amount_4)s) THEN -ledger.amount ELSE %(param_2)s END), %(nullif_1)s) AS ratio, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_1)s END) - sum(CASE WHEN (ledger.ledger_description = %(ledger_description_3)s AND ledger.amount > %(amount_3)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_4)s AND ledger.amount < %(amount_4)s) THEN -ledger.amount ELSE %(param_2)s END) AS roi 
FROM ledger INNER JOIN fund ON ledger.fund_id = fund.fund_id GROUP BY fund.fund_description ORDER BY roi DESC
2025-02-24 10:53:48,506 - [cached since 972.2s ago] {'ledger_description_1': 'Revenues', 'amount_1': 0, 'ledger_description_2': 'Expenses', 'amount_2': 0, 'param_1': 0, 'ledger_description_3': 'Expenses', 'amount_3': 0, 'ledger_description_4': 'Revenues', 'amount_4': 0, 'param_2': 0}
2025-02-24 10:53:48,507 - [cached since 972.2s ago] {'ledger_description_1': 'Revenues', 'amount_1': 0, 'ledger_description_2': 'Expenses', 'amount_2': 0, 'param_1': 0, 'ledger_description_3': 'Expenses', 'amount_3': 0, 'ledger_description_4': 'Revenues', 'amount_4': 0, 'param_2': 0, 'nullif_1': 0}
2025-02-24 10:53:48,722 - BEGIN (implicit)
2025-02-24 10:53:48,723 - SELECT department.department_id AS department_department_id, department.department_name AS department_department_name 
FROM department
2025-02-24 10:53:48,724 - [cached since 972.2s ago] {}
2025-02-24 10:53:48,726 - SELECT min(ledger.general_ledger_date) AS min_1 
FROM ledger
2025-02-24 10:53:48,727 - [cached since 972.2s ago] {}
2025-02-24 10:53:48,729 - SELECT max(ledger.general_ledger_date) AS max_1 
FROM ledger
2025-02-24 10:53:48,729 - [cached since 972.2s ago] {}
2025-02-24 10:53:48,733 - ROLLBACK
2025-02-24 10:53:48,735 - GET http://127.0.0.1:8000/api/initialise - 0.06 ms
2025-02-24 10:53:48,742 - BEGIN (implicit)
2025-02-24 10:53:48,742 - SELECT department.department_id AS department_department_id, department.department_name AS department_department_name 
FROM department
2025-02-24 10:53:48,743 - [cached since 972.3s ago] {}
2025-02-24 10:53:48,747 - SELECT min(ledger.general_ledger_date) AS min_1 
FROM ledger
2025-02-24 10:53:48,748 - [cached since 972.3s ago] {}
2025-02-24 10:53:48,753 - SELECT max(ledger.general_ledger_date) AS max_1 
FROM ledger
2025-02-24 10:53:48,754 - [cached since 972.3s ago] {}
2025-02-24 10:53:48,757 - ROLLBACK
2025-02-24 10:53:48,761 - GET http://127.0.0.1:8000/api/initialise - 0.02 ms
2025-02-24 10:53:50,284 - ROLLBACK
2025-02-24 10:53:50,285 - ROLLBACK
2025-02-24 10:53:50,286 - GET http://127.0.0.1:8000/api/revenue-expenses/ - 1.80 ms
2025-02-24 10:53:50,287 - GET http://127.0.0.1:8000/api/net-profit/ - 1.80 ms
2025-02-24 10:53:50,292 - BEGIN (implicit)
2025-02-24 10:53:50,293 - SELECT year(ledger.general_ledger_date) AS time, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_1)s END) AS total_revenue, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_3)s AND ledger.amount > %(amount_3)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_4)s AND ledger.amount < %(amount_4)s) THEN -ledger.amount ELSE %(param_2)s END) AS total_expenses 
FROM ledger GROUP BY year(ledger.general_ledger_date) ORDER BY year(ledger.general_ledger_date)
2025-02-24 10:53:50,294 - [cached since 974s ago] {'ledger_description_1': 'Revenues', 'amount_1': 0, 'ledger_description_2': 'Expenses', 'amount_2': 0, 'param_1': 0, 'ledger_description_3': 'Expenses', 'amount_3': 0, 'ledger_description_4': 'Revenues', 'amount_4': 0, 'param_2': 0}
2025-02-24 10:53:50,296 - BEGIN (implicit)
2025-02-24 10:53:50,298 - SELECT year(ledger.general_ledger_date) AS time, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_1)s END) - sum(CASE WHEN (ledger.ledger_description = %(ledger_description_3)s AND ledger.amount > %(amount_3)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_4)s AND ledger.amount < %(amount_4)s) THEN -ledger.amount ELSE %(param_2)s END) AS net_profit 
FROM ledger GROUP BY year(ledger.general_ledger_date) ORDER BY year(ledger.general_ledger_date)
2025-02-24 10:53:50,298 - [cached since 974s ago] {'ledger_description_1': 'Revenues', 'amount_1': 0, 'ledger_description_2': 'Expenses', 'amount_2': 0, 'param_1': 0, 'ledger_description_3': 'Expenses', 'amount_3': 0, 'ledger_description_4': 'Revenues', 'amount_4': 0, 'param_2': 0}
2025-02-24 10:53:51,373 - ROLLBACK
2025-02-24 10:53:51,374 - GET http://127.0.0.1:8000/api/top-roi/ - 2.89 ms
2025-02-24 10:53:51,379 - BEGIN (implicit)
2025-02-24 10:53:51,380 - SELECT department.department_name AS department_department_name, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s) THEN ledger.amount ELSE %(param_1)s END) - sum(CASE WHEN (ledger.ledger_description = %(ledger_description_2)s) THEN ledger.amount ELSE %(param_2)s END) AS roi 
FROM ledger INNER JOIN department ON ledger.department_id = department.department_id GROUP BY department.department_name ORDER BY sum(ledger.amount) DESC 
 LIMIT %(param_3)s
2025-02-24 10:53:51,381 - [cached since 975.1s ago] {'ledger_description_1': 'Revenues', 'param_1': 0, 'ledger_description_2': 'Expenses', 'param_2': 0, 'param_3': 5}
2025-02-24 10:53:51,581 - ROLLBACK
2025-02-24 10:53:51,583 - GET http://127.0.0.1:8000/api/top-budget/ - 3.10 ms
2025-02-24 10:53:51,589 - BEGIN (implicit)
2025-02-24 10:53:51,591 - SELECT department.department_name AS department_department_name, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount ELSE %(param_1)s END + CASE WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_2)s END) AS total_expenditure 
FROM ledger INNER JOIN department ON ledger.department_id = department.department_id GROUP BY department.department_name ORDER BY sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount ELSE %(param_1)s END + CASE WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_2)s END) DESC 
 LIMIT %(param_3)s
2025-02-24 10:53:51,591 - [cached since 975.3s ago] {'ledger_description_1': 'Expenses', 'amount_1': 0, 'param_1': 0, 'ledger_description_2': 'Revenues', 'amount_2': 0, 'param_2': 0, 'param_3': 10}
2025-02-24 10:53:51,917 - ROLLBACK
2025-02-24 10:53:51,919 - GET http://127.0.0.1:8000/api/revenue-expenses/ - 1.63 ms
2025-02-24 10:53:51,923 - ROLLBACK
2025-02-24 10:53:51,925 - GET http://127.0.0.1:8000/api/net-profit/ - 1.63 ms
2025-02-24 10:53:52,486 - ROLLBACK
2025-02-24 10:53:52,487 - GET http://127.0.0.1:8000/api/fund-table/ - 4.00 ms
2025-02-24 10:53:52,493 - BEGIN (implicit)
2025-02-24 10:53:52,494 - SELECT fund.fund_description AS fund_fund_description, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_1)s END) AS total_revenue, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_3)s AND ledger.amount > %(amount_3)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_4)s AND ledger.amount < %(amount_4)s) THEN -ledger.amount ELSE %(param_2)s END) AS total_expenses, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_1)s END) / nullif(sum(CASE WHEN (ledger.ledger_description = %(ledger_description_3)s AND ledger.amount > %(amount_3)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_4)s AND ledger.amount < %(amount_4)s) THEN -ledger.amount ELSE %(param_2)s END), %(nullif_1)s) AS ratio, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_1)s END) - sum(CASE WHEN (ledger.ledger_description = %(ledger_description_3)s AND ledger.amount > %(amount_3)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_4)s AND ledger.amount < %(amount_4)s) THEN -ledger.amount ELSE %(param_2)s END) AS roi 
FROM ledger INNER JOIN fund ON ledger.fund_id = fund.fund_id GROUP BY fund.fund_description ORDER BY roi DESC
2025-02-24 10:53:52,495 - [cached since 976.2s ago] {'ledger_description_1': 'Revenues', 'amount_1': 0, 'ledger_description_2': 'Expenses', 'amount_2': 0, 'param_1': 0, 'ledger_description_3': 'Expenses', 'amount_3': 0, 'ledger_description_4': 'Revenues', 'amount_4': 0, 'param_2': 0, 'nullif_1': 0}
2025-02-24 10:53:53,766 - ROLLBACK
2025-02-24 10:53:53,767 - GET http://127.0.0.1:8000/api/top-roi/ - 2.39 ms
2025-02-24 10:53:54,003 - ROLLBACK
2025-02-24 10:53:54,004 - GET http://127.0.0.1:8000/api/top-budget/ - 2.42 ms
2025-02-24 10:53:55,217 - ROLLBACK
2025-02-24 10:53:55,218 - GET http://127.0.0.1:8000/api/fund-table/ - 2.73 ms
2025-02-24 10:56:07,065 - GET http://127.0.0.1:8000/api/initialise/ - 0.00 ms
2025-02-24 10:56:07,192 - BEGIN (implicit)
2025-02-24 10:56:07,194 - BEGIN (implicit)
2025-02-24 10:56:07,195 - SELECT department.department_name AS department_department_name, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s) THEN ledger.amount ELSE %(param_1)s END) - sum(CASE WHEN (ledger.ledger_description = %(ledger_description_2)s) THEN ledger.amount ELSE %(param_2)s END) AS roi 
FROM ledger INNER JOIN department ON ledger.department_id = department.department_id GROUP BY department.department_name ORDER BY sum(ledger.amount) DESC 
 LIMIT %(param_3)s
2025-02-24 10:56:07,196 - SELECT department.department_name AS department_department_name, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount ELSE %(param_1)s END + CASE WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_2)s END) AS total_expenditure 
FROM ledger INNER JOIN department ON ledger.department_id = department.department_id GROUP BY department.department_name ORDER BY sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount ELSE %(param_1)s END + CASE WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_2)s END) DESC 
 LIMIT %(param_3)s
2025-02-24 10:56:07,198 - [cached since 1111s ago] {'ledger_description_1': 'Revenues', 'param_1': 0, 'ledger_description_2': 'Expenses', 'param_2': 0, 'param_3': 5}
2025-02-24 10:56:07,199 - [cached since 1111s ago] {'ledger_description_1': 'Expenses', 'amount_1': 0, 'param_1': 0, 'ledger_description_2': 'Revenues', 'amount_2': 0, 'param_2': 0, 'param_3': 10}
2025-02-24 10:56:07,203 - BEGIN (implicit)
2025-02-24 10:56:07,205 - BEGIN (implicit)
2025-02-24 10:56:07,211 - GET http://127.0.0.1:8000/api/initialise/ - 0.01 ms
2025-02-24 10:56:07,206 - SELECT year(ledger.general_ledger_date) AS time, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_1)s END) - sum(CASE WHEN (ledger.ledger_description = %(ledger_description_3)s AND ledger.amount > %(amount_3)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_4)s AND ledger.amount < %(amount_4)s) THEN -ledger.amount ELSE %(param_2)s END) AS net_profit 
FROM ledger GROUP BY year(ledger.general_ledger_date) ORDER BY year(ledger.general_ledger_date)
2025-02-24 10:56:07,209 - BEGIN (implicit)
2025-02-24 10:56:07,210 - SELECT year(ledger.general_ledger_date) AS time, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_1)s END) AS total_revenue, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_3)s AND ledger.amount > %(amount_3)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_4)s AND ledger.amount < %(amount_4)s) THEN -ledger.amount ELSE %(param_2)s END) AS total_expenses 
FROM ledger GROUP BY year(ledger.general_ledger_date) ORDER BY year(ledger.general_ledger_date)
2025-02-24 10:56:07,212 - [cached since 1111s ago] {'ledger_description_1': 'Revenues', 'amount_1': 0, 'ledger_description_2': 'Expenses', 'amount_2': 0, 'param_1': 0, 'ledger_description_3': 'Expenses', 'amount_3': 0, 'ledger_description_4': 'Revenues', 'amount_4': 0, 'param_2': 0}
2025-02-24 10:56:07,213 - SELECT fund.fund_description AS fund_fund_description, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_1)s END) AS total_revenue, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_3)s AND ledger.amount > %(amount_3)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_4)s AND ledger.amount < %(amount_4)s) THEN -ledger.amount ELSE %(param_2)s END) AS total_expenses, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_1)s END) / nullif(sum(CASE WHEN (ledger.ledger_description = %(ledger_description_3)s AND ledger.amount > %(amount_3)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_4)s AND ledger.amount < %(amount_4)s) THEN -ledger.amount ELSE %(param_2)s END), %(nullif_1)s) AS ratio, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_1)s END) - sum(CASE WHEN (ledger.ledger_description = %(ledger_description_3)s AND ledger.amount > %(amount_3)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_4)s AND ledger.amount < %(amount_4)s) THEN -ledger.amount ELSE %(param_2)s END) AS roi 
FROM ledger INNER JOIN fund ON ledger.fund_id = fund.fund_id GROUP BY fund.fund_description ORDER BY roi DESC
2025-02-24 10:56:07,214 - [cached since 1111s ago] {'ledger_description_1': 'Revenues', 'amount_1': 0, 'ledger_description_2': 'Expenses', 'amount_2': 0, 'param_1': 0, 'ledger_description_3': 'Expenses', 'amount_3': 0, 'ledger_description_4': 'Revenues', 'amount_4': 0, 'param_2': 0}
2025-02-24 10:56:07,217 - [cached since 1111s ago] {'ledger_description_1': 'Revenues', 'amount_1': 0, 'ledger_description_2': 'Expenses', 'amount_2': 0, 'param_1': 0, 'ledger_description_3': 'Expenses', 'amount_3': 0, 'ledger_description_4': 'Revenues', 'amount_4': 0, 'param_2': 0, 'nullif_1': 0}
2025-02-24 10:56:07,431 - BEGIN (implicit)
2025-02-24 10:56:07,432 - SELECT department.department_id AS department_department_id, department.department_name AS department_department_name 
FROM department
2025-02-24 10:56:07,433 - [cached since 1111s ago] {}
2025-02-24 10:56:07,435 - SELECT min(ledger.general_ledger_date) AS min_1 
FROM ledger
2025-02-24 10:56:07,436 - [cached since 1111s ago] {}
2025-02-24 10:56:07,438 - SELECT max(ledger.general_ledger_date) AS max_1 
FROM ledger
2025-02-24 10:56:07,439 - [cached since 1111s ago] {}
2025-02-24 10:56:07,443 - ROLLBACK
2025-02-24 10:56:07,449 - GET http://127.0.0.1:8000/api/initialise - 0.03 ms
2025-02-24 10:56:07,493 - BEGIN (implicit)
2025-02-24 10:56:07,495 - SELECT department.department_id AS department_department_id, department.department_name AS department_department_name 
FROM department
2025-02-24 10:56:07,495 - [cached since 1111s ago] {}
2025-02-24 10:56:07,501 - SELECT min(ledger.general_ledger_date) AS min_1 
FROM ledger
2025-02-24 10:56:07,502 - [cached since 1111s ago] {}
2025-02-24 10:56:07,505 - SELECT max(ledger.general_ledger_date) AS max_1 
FROM ledger
2025-02-24 10:56:07,506 - [cached since 1111s ago] {}
2025-02-24 10:56:07,508 - ROLLBACK
2025-02-24 10:56:07,510 - GET http://127.0.0.1:8000/api/initialise - 0.02 ms
2025-02-24 10:56:09,145 - ROLLBACK
2025-02-24 10:56:09,148 - GET http://127.0.0.1:8000/api/revenue-expenses/ - 1.96 ms
2025-02-24 10:56:09,150 - ROLLBACK
2025-02-24 10:56:09,153 - GET http://127.0.0.1:8000/api/net-profit/ - 1.96 ms
2025-02-24 10:56:09,157 - BEGIN (implicit)
2025-02-24 10:56:09,158 - SELECT year(ledger.general_ledger_date) AS time, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_1)s END) AS total_revenue, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_3)s AND ledger.amount > %(amount_3)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_4)s AND ledger.amount < %(amount_4)s) THEN -ledger.amount ELSE %(param_2)s END) AS total_expenses 
FROM ledger GROUP BY year(ledger.general_ledger_date) ORDER BY year(ledger.general_ledger_date)
2025-02-24 10:56:09,159 - [cached since 1113s ago] {'ledger_description_1': 'Revenues', 'amount_1': 0, 'ledger_description_2': 'Expenses', 'amount_2': 0, 'param_1': 0, 'ledger_description_3': 'Expenses', 'amount_3': 0, 'ledger_description_4': 'Revenues', 'amount_4': 0, 'param_2': 0}
2025-02-24 10:56:09,162 - BEGIN (implicit)
2025-02-24 10:56:09,164 - SELECT year(ledger.general_ledger_date) AS time, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_1)s END) - sum(CASE WHEN (ledger.ledger_description = %(ledger_description_3)s AND ledger.amount > %(amount_3)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_4)s AND ledger.amount < %(amount_4)s) THEN -ledger.amount ELSE %(param_2)s END) AS net_profit 
FROM ledger GROUP BY year(ledger.general_ledger_date) ORDER BY year(ledger.general_ledger_date)
2025-02-24 10:56:09,165 - [cached since 1113s ago] {'ledger_description_1': 'Revenues', 'amount_1': 0, 'ledger_description_2': 'Expenses', 'amount_2': 0, 'param_1': 0, 'ledger_description_3': 'Expenses', 'amount_3': 0, 'ledger_description_4': 'Revenues', 'amount_4': 0, 'param_2': 0}
2025-02-24 10:56:10,186 - ROLLBACK
2025-02-24 10:56:10,188 - GET http://127.0.0.1:8000/api/top-roi/ - 3.00 ms
2025-02-24 10:56:10,194 - BEGIN (implicit)
2025-02-24 10:56:10,195 - SELECT department.department_name AS department_department_name, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s) THEN ledger.amount ELSE %(param_1)s END) - sum(CASE WHEN (ledger.ledger_description = %(ledger_description_2)s) THEN ledger.amount ELSE %(param_2)s END) AS roi 
FROM ledger INNER JOIN department ON ledger.department_id = department.department_id GROUP BY department.department_name ORDER BY sum(ledger.amount) DESC 
 LIMIT %(param_3)s
2025-02-24 10:56:10,196 - [cached since 1114s ago] {'ledger_description_1': 'Revenues', 'param_1': 0, 'ledger_description_2': 'Expenses', 'param_2': 0, 'param_3': 5}
2025-02-24 10:56:10,602 - ROLLBACK
2025-02-24 10:56:10,604 - GET http://127.0.0.1:8000/api/top-budget/ - 3.42 ms
2025-02-24 10:56:10,624 - BEGIN (implicit)
2025-02-24 10:56:10,625 - SELECT department.department_name AS department_department_name, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount ELSE %(param_1)s END + CASE WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_2)s END) AS total_expenditure 
FROM ledger INNER JOIN department ON ledger.department_id = department.department_id GROUP BY department.department_name ORDER BY sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount ELSE %(param_1)s END + CASE WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_2)s END) DESC 
 LIMIT %(param_3)s
2025-02-24 10:56:10,626 - [cached since 1114s ago] {'ledger_description_1': 'Expenses', 'amount_1': 0, 'param_1': 0, 'ledger_description_2': 'Revenues', 'amount_2': 0, 'param_2': 0, 'param_3': 10}
2025-02-24 10:56:10,916 - ROLLBACK
2025-02-24 10:56:10,918 - GET http://127.0.0.1:8000/api/revenue-expenses/ - 1.77 ms
2025-02-24 10:56:10,936 - ROLLBACK
2025-02-24 10:56:10,938 - GET http://127.0.0.1:8000/api/net-profit/ - 1.78 ms
2025-02-24 10:56:11,528 - ROLLBACK
2025-02-24 10:56:11,529 - GET http://127.0.0.1:8000/api/fund-table/ - 4.34 ms
2025-02-24 10:56:11,535 - BEGIN (implicit)
2025-02-24 10:56:11,536 - SELECT fund.fund_description AS fund_fund_description, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_1)s END) AS total_revenue, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_3)s AND ledger.amount > %(amount_3)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_4)s AND ledger.amount < %(amount_4)s) THEN -ledger.amount ELSE %(param_2)s END) AS total_expenses, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_1)s END) / nullif(sum(CASE WHEN (ledger.ledger_description = %(ledger_description_3)s AND ledger.amount > %(amount_3)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_4)s AND ledger.amount < %(amount_4)s) THEN -ledger.amount ELSE %(param_2)s END), %(nullif_1)s) AS ratio, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_1)s END) - sum(CASE WHEN (ledger.ledger_description = %(ledger_description_3)s AND ledger.amount > %(amount_3)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_4)s AND ledger.amount < %(amount_4)s) THEN -ledger.amount ELSE %(param_2)s END) AS roi 
FROM ledger INNER JOIN fund ON ledger.fund_id = fund.fund_id GROUP BY fund.fund_description ORDER BY roi DESC
2025-02-24 10:56:11,537 - [cached since 1115s ago] {'ledger_description_1': 'Revenues', 'amount_1': 0, 'ledger_description_2': 'Expenses', 'amount_2': 0, 'param_1': 0, 'ledger_description_3': 'Expenses', 'amount_3': 0, 'ledger_description_4': 'Revenues', 'amount_4': 0, 'param_2': 0, 'nullif_1': 0}
2025-02-24 10:56:12,386 - ROLLBACK
2025-02-24 10:56:12,388 - GET http://127.0.0.1:8000/api/top-roi/ - 2.20 ms
2025-02-24 10:56:12,930 - ROLLBACK
2025-02-24 10:56:12,934 - GET http://127.0.0.1:8000/api/top-budget/ - 2.31 ms
2025-02-24 10:56:14,478 - ROLLBACK
2025-02-24 10:56:14,479 - GET http://127.0.0.1:8000/api/fund-table/ - 2.95 ms
2025-02-24 10:56:15,587 - POST http://127.0.0.1:8000/login - 0.31 ms
2025-02-24 10:56:15,591 - GET http://127.0.0.1:8000/api/initialise/ - 0.00 ms
2025-02-24 10:56:15,598 - BEGIN (implicit)
2025-02-24 10:56:15,600 - BEGIN (implicit)
2025-02-24 10:56:15,606 - GET http://127.0.0.1:8000/api/initialise/ - 0.01 ms
2025-02-24 10:56:15,601 - BEGIN (implicit)
2025-02-24 10:56:15,603 - BEGIN (implicit)
2025-02-24 10:56:15,605 - SELECT year(ledger.general_ledger_date) AS time, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_1)s END) AS total_revenue, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_3)s AND ledger.amount > %(amount_3)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_4)s AND ledger.amount < %(amount_4)s) THEN -ledger.amount ELSE %(param_2)s END) AS total_expenses 
FROM ledger GROUP BY year(ledger.general_ledger_date) ORDER BY year(ledger.general_ledger_date)
2025-02-24 10:56:15,606 - SELECT department.department_name AS department_department_name, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount ELSE %(param_1)s END + CASE WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_2)s END) AS total_expenditure 
FROM ledger INNER JOIN department ON ledger.department_id = department.department_id GROUP BY department.department_name ORDER BY sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount ELSE %(param_1)s END + CASE WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_2)s END) DESC 
 LIMIT %(param_3)s
2025-02-24 10:56:15,607 - BEGIN (implicit)
2025-02-24 10:56:15,609 - SELECT department.department_name AS department_department_name, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s) THEN ledger.amount ELSE %(param_1)s END) - sum(CASE WHEN (ledger.ledger_description = %(ledger_description_2)s) THEN ledger.amount ELSE %(param_2)s END) AS roi 
FROM ledger INNER JOIN department ON ledger.department_id = department.department_id GROUP BY department.department_name ORDER BY sum(ledger.amount) DESC 
 LIMIT %(param_3)s
2025-02-24 10:56:15,611 - SELECT year(ledger.general_ledger_date) AS time, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_1)s END) - sum(CASE WHEN (ledger.ledger_description = %(ledger_description_3)s AND ledger.amount > %(amount_3)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_4)s AND ledger.amount < %(amount_4)s) THEN -ledger.amount ELSE %(param_2)s END) AS net_profit 
FROM ledger GROUP BY year(ledger.general_ledger_date) ORDER BY year(ledger.general_ledger_date)
2025-02-24 10:56:15,614 - [cached since 1119s ago] {'ledger_description_1': 'Revenues', 'amount_1': 0, 'ledger_description_2': 'Expenses', 'amount_2': 0, 'param_1': 0, 'ledger_description_3': 'Expenses', 'amount_3': 0, 'ledger_description_4': 'Revenues', 'amount_4': 0, 'param_2': 0}
2025-02-24 10:56:15,612 - [cached since 1119s ago] {'ledger_description_1': 'Expenses', 'amount_1': 0, 'param_1': 0, 'ledger_description_2': 'Revenues', 'amount_2': 0, 'param_2': 0, 'param_3': 10}
2025-02-24 10:56:15,613 - SELECT fund.fund_description AS fund_fund_description, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_1)s END) AS total_revenue, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_3)s AND ledger.amount > %(amount_3)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_4)s AND ledger.amount < %(amount_4)s) THEN -ledger.amount ELSE %(param_2)s END) AS total_expenses, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_1)s END) / nullif(sum(CASE WHEN (ledger.ledger_description = %(ledger_description_3)s AND ledger.amount > %(amount_3)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_4)s AND ledger.amount < %(amount_4)s) THEN -ledger.amount ELSE %(param_2)s END), %(nullif_1)s) AS ratio, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_1)s END) - sum(CASE WHEN (ledger.ledger_description = %(ledger_description_3)s AND ledger.amount > %(amount_3)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_4)s AND ledger.amount < %(amount_4)s) THEN -ledger.amount ELSE %(param_2)s END) AS roi 
FROM ledger INNER JOIN fund ON ledger.fund_id = fund.fund_id GROUP BY fund.fund_description ORDER BY roi DESC
2025-02-24 10:56:15,614 - [cached since 1119s ago] {'ledger_description_1': 'Revenues', 'param_1': 0, 'ledger_description_2': 'Expenses', 'param_2': 0, 'param_3': 5}
2025-02-24 10:56:15,611 - [cached since 1119s ago] {'ledger_description_1': 'Revenues', 'amount_1': 0, 'ledger_description_2': 'Expenses', 'amount_2': 0, 'param_1': 0, 'ledger_description_3': 'Expenses', 'amount_3': 0, 'ledger_description_4': 'Revenues', 'amount_4': 0, 'param_2': 0}
2025-02-24 10:56:15,617 - [cached since 1119s ago] {'ledger_description_1': 'Revenues', 'amount_1': 0, 'ledger_description_2': 'Expenses', 'amount_2': 0, 'param_1': 0, 'ledger_description_3': 'Expenses', 'amount_3': 0, 'ledger_description_4': 'Revenues', 'amount_4': 0, 'param_2': 0, 'nullif_1': 0}
2025-02-24 10:56:15,696 - BEGIN (implicit)
2025-02-24 10:56:15,698 - SELECT department.department_id AS department_department_id, department.department_name AS department_department_name 
FROM department
2025-02-24 10:56:15,698 - [cached since 1119s ago] {}
2025-02-24 10:56:15,701 - SELECT min(ledger.general_ledger_date) AS min_1 
FROM ledger
2025-02-24 10:56:15,702 - [cached since 1119s ago] {}
2025-02-24 10:56:15,704 - SELECT max(ledger.general_ledger_date) AS max_1 
FROM ledger
2025-02-24 10:56:15,705 - [cached since 1119s ago] {}
2025-02-24 10:56:15,709 - ROLLBACK
2025-02-24 10:56:15,710 - GET http://127.0.0.1:8000/api/initialise - 0.02 ms
2025-02-24 10:56:15,787 - BEGIN (implicit)
2025-02-24 10:56:15,788 - SELECT department.department_id AS department_department_id, department.department_name AS department_department_name 
FROM department
2025-02-24 10:56:15,789 - [cached since 1119s ago] {}
2025-02-24 10:56:15,791 - SELECT min(ledger.general_ledger_date) AS min_1 
FROM ledger
2025-02-24 10:56:15,792 - [cached since 1119s ago] {}
2025-02-24 10:56:15,794 - SELECT max(ledger.general_ledger_date) AS max_1 
FROM ledger
2025-02-24 10:56:15,794 - [cached since 1119s ago] {}
2025-02-24 10:56:15,801 - ROLLBACK
2025-02-24 10:56:15,804 - GET http://127.0.0.1:8000/api/initialise - 0.02 ms
2025-02-24 10:56:17,353 - ROLLBACK
2025-02-24 10:56:17,354 - GET http://127.0.0.1:8000/api/revenue-expenses/ - 1.77 ms
2025-02-24 10:56:17,360 - BEGIN (implicit)
2025-02-24 10:56:17,361 - SELECT year(ledger.general_ledger_date) AS time, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_1)s END) AS total_revenue, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_3)s AND ledger.amount > %(amount_3)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_4)s AND ledger.amount < %(amount_4)s) THEN -ledger.amount ELSE %(param_2)s END) AS total_expenses 
FROM ledger GROUP BY year(ledger.general_ledger_date) ORDER BY year(ledger.general_ledger_date)
2025-02-24 10:56:17,362 - ROLLBACK
2025-02-24 10:56:17,362 - [cached since 1121s ago] {'ledger_description_1': 'Revenues', 'amount_1': 0, 'ledger_description_2': 'Expenses', 'amount_2': 0, 'param_1': 0, 'ledger_description_3': 'Expenses', 'amount_3': 0, 'ledger_description_4': 'Revenues', 'amount_4': 0, 'param_2': 0}
2025-02-24 10:56:17,364 - GET http://127.0.0.1:8000/api/net-profit/ - 1.78 ms
2025-02-24 10:56:17,370 - BEGIN (implicit)
2025-02-24 10:56:17,371 - SELECT year(ledger.general_ledger_date) AS time, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_1)s END) - sum(CASE WHEN (ledger.ledger_description = %(ledger_description_3)s AND ledger.amount > %(amount_3)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_4)s AND ledger.amount < %(amount_4)s) THEN -ledger.amount ELSE %(param_2)s END) AS net_profit 
FROM ledger GROUP BY year(ledger.general_ledger_date) ORDER BY year(ledger.general_ledger_date)
2025-02-24 10:56:17,371 - [cached since 1121s ago] {'ledger_description_1': 'Revenues', 'amount_1': 0, 'ledger_description_2': 'Expenses', 'amount_2': 0, 'param_1': 0, 'ledger_description_3': 'Expenses', 'amount_3': 0, 'ledger_description_4': 'Revenues', 'amount_4': 0, 'param_2': 0}
2025-02-24 10:56:18,546 - ROLLBACK
2025-02-24 10:56:18,547 - GET http://127.0.0.1:8000/api/top-roi/ - 2.96 ms
2025-02-24 10:56:18,553 - BEGIN (implicit)
2025-02-24 10:56:18,554 - SELECT department.department_name AS department_department_name, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s) THEN ledger.amount ELSE %(param_1)s END) - sum(CASE WHEN (ledger.ledger_description = %(ledger_description_2)s) THEN ledger.amount ELSE %(param_2)s END) AS roi 
FROM ledger INNER JOIN department ON ledger.department_id = department.department_id GROUP BY department.department_name ORDER BY sum(ledger.amount) DESC 
 LIMIT %(param_3)s
2025-02-24 10:56:18,555 - [cached since 1122s ago] {'ledger_description_1': 'Revenues', 'param_1': 0, 'ledger_description_2': 'Expenses', 'param_2': 0, 'param_3': 5}
2025-02-24 10:56:18,822 - ROLLBACK
2025-02-24 10:56:18,824 - GET http://127.0.0.1:8000/api/top-budget/ - 3.24 ms
2025-02-24 10:56:18,830 - BEGIN (implicit)
2025-02-24 10:56:18,832 - SELECT department.department_name AS department_department_name, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount ELSE %(param_1)s END + CASE WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_2)s END) AS total_expenditure 
FROM ledger INNER JOIN department ON ledger.department_id = department.department_id GROUP BY department.department_name ORDER BY sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount ELSE %(param_1)s END + CASE WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_2)s END) DESC 
 LIMIT %(param_3)s
2025-02-24 10:56:18,832 - [cached since 1123s ago] {'ledger_description_1': 'Expenses', 'amount_1': 0, 'param_1': 0, 'ledger_description_2': 'Revenues', 'amount_2': 0, 'param_2': 0, 'param_3': 10}
2025-02-24 10:56:19,107 - ROLLBACK
2025-02-24 10:56:19,109 - GET http://127.0.0.1:8000/api/revenue-expenses/ - 1.75 ms
2025-02-24 10:56:19,113 - ROLLBACK
2025-02-24 10:56:19,114 - GET http://127.0.0.1:8000/api/net-profit/ - 1.75 ms
2025-02-24 10:56:19,990 - ROLLBACK
2025-02-24 10:56:19,992 - GET http://127.0.0.1:8000/api/fund-table/ - 4.40 ms
2025-02-24 10:56:20,000 - BEGIN (implicit)
2025-02-24 10:56:20,002 - SELECT fund.fund_description AS fund_fund_description, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_1)s END) AS total_revenue, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_3)s AND ledger.amount > %(amount_3)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_4)s AND ledger.amount < %(amount_4)s) THEN -ledger.amount ELSE %(param_2)s END) AS total_expenses, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_1)s END) / nullif(sum(CASE WHEN (ledger.ledger_description = %(ledger_description_3)s AND ledger.amount > %(amount_3)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_4)s AND ledger.amount < %(amount_4)s) THEN -ledger.amount ELSE %(param_2)s END), %(nullif_1)s) AS ratio, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_1)s END) - sum(CASE WHEN (ledger.ledger_description = %(ledger_description_3)s AND ledger.amount > %(amount_3)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_4)s AND ledger.amount < %(amount_4)s) THEN -ledger.amount ELSE %(param_2)s END) AS roi 
FROM ledger INNER JOIN fund ON ledger.fund_id = fund.fund_id GROUP BY fund.fund_description ORDER BY roi DESC
2025-02-24 10:56:20,003 - [cached since 1124s ago] {'ledger_description_1': 'Revenues', 'amount_1': 0, 'ledger_description_2': 'Expenses', 'amount_2': 0, 'param_1': 0, 'ledger_description_3': 'Expenses', 'amount_3': 0, 'ledger_description_4': 'Revenues', 'amount_4': 0, 'param_2': 0, 'nullif_1': 0}
2025-02-24 10:56:21,123 - ROLLBACK
2025-02-24 10:56:21,125 - GET http://127.0.0.1:8000/api/top-roi/ - 2.57 ms
2025-02-24 10:56:21,532 - ROLLBACK
2025-02-24 10:56:21,534 - GET http://127.0.0.1:8000/api/top-budget/ - 2.71 ms
2025-02-24 10:56:22,144 - POST http://127.0.0.1:8000/login - 0.27 ms
2025-02-24 10:56:22,151 - GET http://127.0.0.1:8000/api/initialise/ - 0.00 ms
2025-02-24 10:56:22,157 - BEGIN (implicit)
2025-02-24 10:56:22,161 - GET http://127.0.0.1:8000/api/initialise/ - 0.01 ms
2025-02-24 10:56:22,158 - BEGIN (implicit)
2025-02-24 10:56:22,160 - BEGIN (implicit)
2025-02-24 10:56:22,163 - BEGIN (implicit)
2025-02-24 10:56:22,164 - SELECT department.department_name AS department_department_name, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s) THEN ledger.amount ELSE %(param_1)s END) - sum(CASE WHEN (ledger.ledger_description = %(ledger_description_2)s) THEN ledger.amount ELSE %(param_2)s END) AS roi 
FROM ledger INNER JOIN department ON ledger.department_id = department.department_id GROUP BY department.department_name ORDER BY sum(ledger.amount) DESC 
 LIMIT %(param_3)s
2025-02-24 10:56:22,166 - SELECT department.department_name AS department_department_name, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount ELSE %(param_1)s END + CASE WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_2)s END) AS total_expenditure 
FROM ledger INNER JOIN department ON ledger.department_id = department.department_id GROUP BY department.department_name ORDER BY sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount ELSE %(param_1)s END + CASE WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_2)s END) DESC 
 LIMIT %(param_3)s
2025-02-24 10:56:22,168 - SELECT year(ledger.general_ledger_date) AS time, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_1)s END) AS total_revenue, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_3)s AND ledger.amount > %(amount_3)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_4)s AND ledger.amount < %(amount_4)s) THEN -ledger.amount ELSE %(param_2)s END) AS total_expenses 
FROM ledger GROUP BY year(ledger.general_ledger_date) ORDER BY year(ledger.general_ledger_date)
2025-02-24 10:56:22,170 - SELECT year(ledger.general_ledger_date) AS time, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_1)s END) - sum(CASE WHEN (ledger.ledger_description = %(ledger_description_3)s AND ledger.amount > %(amount_3)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_4)s AND ledger.amount < %(amount_4)s) THEN -ledger.amount ELSE %(param_2)s END) AS net_profit 
FROM ledger GROUP BY year(ledger.general_ledger_date) ORDER BY year(ledger.general_ledger_date)
2025-02-24 10:56:22,170 - [cached since 1126s ago] {'ledger_description_1': 'Revenues', 'param_1': 0, 'ledger_description_2': 'Expenses', 'param_2': 0, 'param_3': 5}
2025-02-24 10:56:22,171 - [cached since 1126s ago] {'ledger_description_1': 'Expenses', 'amount_1': 0, 'param_1': 0, 'ledger_description_2': 'Revenues', 'amount_2': 0, 'param_2': 0, 'param_3': 10}
2025-02-24 10:56:22,172 - [cached since 1126s ago] {'ledger_description_1': 'Revenues', 'amount_1': 0, 'ledger_description_2': 'Expenses', 'amount_2': 0, 'param_1': 0, 'ledger_description_3': 'Expenses', 'amount_3': 0, 'ledger_description_4': 'Revenues', 'amount_4': 0, 'param_2': 0}
2025-02-24 10:56:22,172 - [cached since 1126s ago] {'ledger_description_1': 'Revenues', 'amount_1': 0, 'ledger_description_2': 'Expenses', 'amount_2': 0, 'param_1': 0, 'ledger_description_3': 'Expenses', 'amount_3': 0, 'ledger_description_4': 'Revenues', 'amount_4': 0, 'param_2': 0}
2025-02-24 10:56:22,348 - BEGIN (implicit)
2025-02-24 10:56:22,349 - SELECT department.department_id AS department_department_id, department.department_name AS department_department_name 
FROM department
2025-02-24 10:56:22,350 - [cached since 1126s ago] {}
2025-02-24 10:56:22,354 - SELECT min(ledger.general_ledger_date) AS min_1 
FROM ledger
2025-02-24 10:56:22,354 - [cached since 1126s ago] {}
2025-02-24 10:56:22,357 - SELECT max(ledger.general_ledger_date) AS max_1 
FROM ledger
2025-02-24 10:56:22,358 - [cached since 1126s ago] {}
2025-02-24 10:56:22,364 - ROLLBACK
2025-02-24 10:56:22,369 - GET http://127.0.0.1:8000/api/initialise - 0.02 ms
2025-02-24 10:56:22,388 - BEGIN (implicit)
2025-02-24 10:56:22,392 - SELECT department.department_id AS department_department_id, department.department_name AS department_department_name 
FROM department
2025-02-24 10:56:22,393 - [cached since 1126s ago] {}
2025-02-24 10:56:22,402 - SELECT min(ledger.general_ledger_date) AS min_1 
FROM ledger
2025-02-24 10:56:22,402 - [cached since 1126s ago] {}
2025-02-24 10:56:22,407 - SELECT max(ledger.general_ledger_date) AS max_1 
FROM ledger
2025-02-24 10:56:22,408 - [cached since 1126s ago] {}
2025-02-24 10:56:22,411 - ROLLBACK
2025-02-24 10:56:22,418 - GET http://127.0.0.1:8000/api/initialise - 0.04 ms
2025-02-24 10:56:23,635 - ROLLBACK
2025-02-24 10:56:23,637 - GET http://127.0.0.1:8000/api/fund-table/ - 3.64 ms
2025-02-24 10:56:23,645 - BEGIN (implicit)
2025-02-24 10:56:23,646 - SELECT fund.fund_description AS fund_fund_description, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_1)s END) AS total_revenue, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_3)s AND ledger.amount > %(amount_3)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_4)s AND ledger.amount < %(amount_4)s) THEN -ledger.amount ELSE %(param_2)s END) AS total_expenses, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_1)s END) / nullif(sum(CASE WHEN (ledger.ledger_description = %(ledger_description_3)s AND ledger.amount > %(amount_3)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_4)s AND ledger.amount < %(amount_4)s) THEN -ledger.amount ELSE %(param_2)s END), %(nullif_1)s) AS ratio, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_1)s END) - sum(CASE WHEN (ledger.ledger_description = %(ledger_description_3)s AND ledger.amount > %(amount_3)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_4)s AND ledger.amount < %(amount_4)s) THEN -ledger.amount ELSE %(param_2)s END) AS roi 
FROM ledger INNER JOIN fund ON ledger.fund_id = fund.fund_id GROUP BY fund.fund_description ORDER BY roi DESC
2025-02-24 10:56:23,647 - [cached since 1127s ago] {'ledger_description_1': 'Revenues', 'amount_1': 0, 'ledger_description_2': 'Expenses', 'amount_2': 0, 'param_1': 0, 'ledger_description_3': 'Expenses', 'amount_3': 0, 'ledger_description_4': 'Revenues', 'amount_4': 0, 'param_2': 0, 'nullif_1': 0}
2025-02-24 10:56:23,876 - ROLLBACK
2025-02-24 10:56:23,878 - GET http://127.0.0.1:8000/api/net-profit/ - 1.73 ms
2025-02-24 10:56:23,882 - ROLLBACK
2025-02-24 10:56:23,884 - BEGIN (implicit)
2025-02-24 10:56:23,886 - SELECT year(ledger.general_ledger_date) AS time, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_1)s END) - sum(CASE WHEN (ledger.ledger_description = %(ledger_description_3)s AND ledger.amount > %(amount_3)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_4)s AND ledger.amount < %(amount_4)s) THEN -ledger.amount ELSE %(param_2)s END) AS net_profit 
FROM ledger GROUP BY year(ledger.general_ledger_date) ORDER BY year(ledger.general_ledger_date)
2025-02-24 10:56:23,887 - GET http://127.0.0.1:8000/api/revenue-expenses/ - 1.74 ms
2025-02-24 10:56:23,887 - [cached since 1128s ago] {'ledger_description_1': 'Revenues', 'amount_1': 0, 'ledger_description_2': 'Expenses', 'amount_2': 0, 'param_1': 0, 'ledger_description_3': 'Expenses', 'amount_3': 0, 'ledger_description_4': 'Revenues', 'amount_4': 0, 'param_2': 0}
2025-02-24 10:56:23,893 - BEGIN (implicit)
2025-02-24 10:56:23,895 - SELECT year(ledger.general_ledger_date) AS time, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_1)s END) AS total_revenue, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_3)s AND ledger.amount > %(amount_3)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_4)s AND ledger.amount < %(amount_4)s) THEN -ledger.amount ELSE %(param_2)s END) AS total_expenses 
FROM ledger GROUP BY year(ledger.general_ledger_date) ORDER BY year(ledger.general_ledger_date)
2025-02-24 10:56:23,896 - [cached since 1128s ago] {'ledger_description_1': 'Revenues', 'amount_1': 0, 'ledger_description_2': 'Expenses', 'amount_2': 0, 'param_1': 0, 'ledger_description_3': 'Expenses', 'amount_3': 0, 'ledger_description_4': 'Revenues', 'amount_4': 0, 'param_2': 0}
2025-02-24 10:56:24,949 - ROLLBACK
2025-02-24 10:56:24,950 - GET http://127.0.0.1:8000/api/top-roi/ - 2.80 ms
2025-02-24 10:56:24,956 - BEGIN (implicit)
2025-02-24 10:56:24,957 - SELECT department.department_name AS department_department_name, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s) THEN ledger.amount ELSE %(param_1)s END) - sum(CASE WHEN (ledger.ledger_description = %(ledger_description_2)s) THEN ledger.amount ELSE %(param_2)s END) AS roi 
FROM ledger INNER JOIN department ON ledger.department_id = department.department_id GROUP BY department.department_name ORDER BY sum(ledger.amount) DESC 
 LIMIT %(param_3)s
2025-02-24 10:56:24,957 - [cached since 1129s ago] {'ledger_description_1': 'Revenues', 'param_1': 0, 'ledger_description_2': 'Expenses', 'param_2': 0, 'param_3': 5}
2025-02-24 10:56:25,228 - ROLLBACK
2025-02-24 10:56:25,230 - GET http://127.0.0.1:8000/api/top-budget/ - 3.08 ms
2025-02-24 10:56:25,235 - BEGIN (implicit)
2025-02-24 10:56:25,237 - SELECT department.department_name AS department_department_name, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount ELSE %(param_1)s END + CASE WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_2)s END) AS total_expenditure 
FROM ledger INNER JOIN department ON ledger.department_id = department.department_id GROUP BY department.department_name ORDER BY sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount ELSE %(param_1)s END + CASE WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_2)s END) DESC 
 LIMIT %(param_3)s
2025-02-24 10:56:25,237 - [cached since 1129s ago] {'ledger_description_1': 'Expenses', 'amount_1': 0, 'param_1': 0, 'ledger_description_2': 'Revenues', 'amount_2': 0, 'param_2': 0, 'param_3': 10}
2025-02-24 10:56:25,490 - ROLLBACK
2025-02-24 10:56:25,491 - GET http://127.0.0.1:8000/api/revenue-expenses/ - 1.60 ms
2025-02-24 10:56:25,498 - ROLLBACK
2025-02-24 10:56:25,500 - GET http://127.0.0.1:8000/api/net-profit/ - 1.62 ms
2025-02-24 10:56:27,003 - ROLLBACK
2025-02-24 10:56:27,004 - GET http://127.0.0.1:8000/api/fund-table/ - 3.36 ms
2025-02-24 10:56:27,009 - BEGIN (implicit)
2025-02-24 10:56:27,010 - SELECT fund.fund_description AS fund_fund_description, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_1)s END) AS total_revenue, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_3)s AND ledger.amount > %(amount_3)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_4)s AND ledger.amount < %(amount_4)s) THEN -ledger.amount ELSE %(param_2)s END) AS total_expenses, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_1)s END) / nullif(sum(CASE WHEN (ledger.ledger_description = %(ledger_description_3)s AND ledger.amount > %(amount_3)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_4)s AND ledger.amount < %(amount_4)s) THEN -ledger.amount ELSE %(param_2)s END), %(nullif_1)s) AS ratio, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_1)s END) - sum(CASE WHEN (ledger.ledger_description = %(ledger_description_3)s AND ledger.amount > %(amount_3)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_4)s AND ledger.amount < %(amount_4)s) THEN -ledger.amount ELSE %(param_2)s END) AS roi 
FROM ledger INNER JOIN fund ON ledger.fund_id = fund.fund_id GROUP BY fund.fund_description ORDER BY roi DESC
2025-02-24 10:56:27,011 - [cached since 1131s ago] {'ledger_description_1': 'Revenues', 'amount_1': 0, 'ledger_description_2': 'Expenses', 'amount_2': 0, 'param_1': 0, 'ledger_description_3': 'Expenses', 'amount_3': 0, 'ledger_description_4': 'Revenues', 'amount_4': 0, 'param_2': 0, 'nullif_1': 0}
2025-02-24 10:56:27,014 - ROLLBACK
2025-02-24 10:56:27,016 - GET http://127.0.0.1:8000/api/top-roi/ - 2.06 ms
2025-02-24 10:56:27,373 - ROLLBACK
2025-02-24 10:56:27,375 - GET http://127.0.0.1:8000/api/top-budget/ - 2.14 ms
2025-02-24 10:56:29,438 - ROLLBACK
2025-02-24 10:56:29,439 - GET http://127.0.0.1:8000/api/fund-table/ - 2.43 ms
2025-02-24 10:56:37,628 - BEGIN (implicit)
2025-02-24 10:56:37,633 - SELECT cost_center.cost_center_description AS cost_center_cost_center_description, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s) THEN ledger.amount ELSE %(param_1)s END) - sum(CASE WHEN (ledger.ledger_description = %(ledger_description_2)s) THEN ledger.amount ELSE %(param_2)s END) AS roi 
FROM ledger INNER JOIN cost_center ON ledger.cost_center_id = cost_center.cost_center_id 
WHERE ledger.department_id = %(department_id_1)s GROUP BY cost_center.cost_center_description ORDER BY sum(ledger.amount) DESC 
 LIMIT %(param_3)s
2025-02-24 10:56:37,635 - [generated in 0.00145s] {'ledger_description_1': 'Revenues', 'param_1': 0, 'ledger_description_2': 'Expenses', 'param_2': 0, 'department_id_1': 102, 'param_3': 5}
2025-02-24 10:56:37,641 - BEGIN (implicit)
2025-02-24 10:56:37,644 - BEGIN (implicit)
2025-02-24 10:56:37,646 - BEGIN (implicit)
2025-02-24 10:56:37,649 - SELECT cost_center.cost_center_description AS cost_center_cost_center_description, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount ELSE %(param_1)s END + CASE WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_2)s END) AS total_expenditure 
FROM ledger INNER JOIN cost_center ON ledger.cost_center_id = cost_center.cost_center_id 
WHERE ledger.department_id = %(department_id_1)s GROUP BY cost_center.cost_center_description ORDER BY sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount ELSE %(param_1)s END + CASE WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_2)s END) DESC 
 LIMIT %(param_3)s
2025-02-24 10:56:37,655 - SELECT year(ledger.general_ledger_date) AS time, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_1)s END) AS total_revenue, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_3)s AND ledger.amount > %(amount_3)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_4)s AND ledger.amount < %(amount_4)s) THEN -ledger.amount ELSE %(param_2)s END) AS total_expenses 
FROM ledger 
WHERE ledger.department_id = %(department_id_1)s GROUP BY year(ledger.general_ledger_date) ORDER BY year(ledger.general_ledger_date)
2025-02-24 10:56:37,669 - [generated in 0.01481s] {'ledger_description_1': 'Revenues', 'amount_1': 0, 'ledger_description_2': 'Expenses', 'amount_2': 0, 'param_1': 0, 'ledger_description_3': 'Expenses', 'amount_3': 0, 'ledger_description_4': 'Revenues', 'amount_4': 0, 'param_2': 0, 'department_id_1': 102}
2025-02-24 10:56:37,668 - [generated in 0.01866s] {'ledger_description_1': 'Expenses', 'amount_1': 0, 'param_1': 0, 'ledger_description_2': 'Revenues', 'amount_2': 0, 'param_2': 0, 'department_id_1': 102, 'param_3': 10}
2025-02-24 10:56:37,668 - SELECT year(ledger.general_ledger_date) AS time, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_1)s END) - sum(CASE WHEN (ledger.ledger_description = %(ledger_description_3)s AND ledger.amount > %(amount_3)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_4)s AND ledger.amount < %(amount_4)s) THEN -ledger.amount ELSE %(param_2)s END) AS net_profit 
FROM ledger 
WHERE ledger.department_id = %(department_id_1)s GROUP BY year(ledger.general_ledger_date) ORDER BY year(ledger.general_ledger_date)
2025-02-24 10:56:37,674 - BEGIN (implicit)
2025-02-24 10:56:37,677 - [generated in 0.01000s] {'ledger_description_1': 'Revenues', 'amount_1': 0, 'ledger_description_2': 'Expenses', 'amount_2': 0, 'param_1': 0, 'ledger_description_3': 'Expenses', 'amount_3': 0, 'ledger_description_4': 'Revenues', 'amount_4': 0, 'param_2': 0, 'department_id_1': 102}
2025-02-24 10:56:37,688 - SELECT fund.fund_description AS fund_fund_description, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_1)s END) AS total_revenue, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_3)s AND ledger.amount > %(amount_3)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_4)s AND ledger.amount < %(amount_4)s) THEN -ledger.amount ELSE %(param_2)s END) AS total_expenses, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_1)s END) / nullif(sum(CASE WHEN (ledger.ledger_description = %(ledger_description_3)s AND ledger.amount > %(amount_3)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_4)s AND ledger.amount < %(amount_4)s) THEN -ledger.amount ELSE %(param_2)s END), %(nullif_1)s) AS ratio, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_1)s END) - sum(CASE WHEN (ledger.ledger_description = %(ledger_description_3)s AND ledger.amount > %(amount_3)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_4)s AND ledger.amount < %(amount_4)s) THEN -ledger.amount ELSE %(param_2)s END) AS roi 
FROM ledger INNER JOIN fund ON ledger.fund_id = fund.fund_id 
WHERE ledger.department_id = %(department_id_1)s GROUP BY fund.fund_description ORDER BY roi DESC
2025-02-24 10:56:37,689 - [generated in 0.00127s] {'ledger_description_1': 'Revenues', 'amount_1': 0, 'ledger_description_2': 'Expenses', 'amount_2': 0, 'param_1': 0, 'ledger_description_3': 'Expenses', 'amount_3': 0, 'ledger_description_4': 'Revenues', 'amount_4': 0, 'param_2': 0, 'nullif_1': 0, 'department_id_1': 102}
2025-02-24 10:56:37,761 - ROLLBACK
2025-02-24 10:56:37,764 - GET http://127.0.0.1:8000/api/net-profit/?department=102 - 0.14 ms
2025-02-24 10:56:37,767 - ROLLBACK
2025-02-24 10:56:37,769 - GET http://127.0.0.1:8000/api/revenue-expenses/?department=102 - 0.14 ms
2025-02-24 10:56:37,822 - ROLLBACK
2025-02-24 10:56:37,824 - GET http://127.0.0.1:8000/api/fund-table/?department=102 - 0.19 ms
2025-02-24 10:56:38,264 - ROLLBACK
2025-02-24 10:56:38,265 - ROLLBACK
2025-02-24 10:56:38,266 - GET http://127.0.0.1:8000/api/top-budget/?department=102 - 0.64 ms
2025-02-24 10:56:38,267 - GET http://127.0.0.1:8000/api/top-roi/?department=102 - 0.65 ms
2025-02-24 10:59:24,591 - GET http://127.0.0.1:8000/api/initialise/ - 0.00 ms
2025-02-24 10:59:24,742 - BEGIN (implicit)
2025-02-24 10:59:24,744 - SELECT department.department_name AS department_department_name, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s) THEN ledger.amount ELSE %(param_1)s END) - sum(CASE WHEN (ledger.ledger_description = %(ledger_description_2)s) THEN ledger.amount ELSE %(param_2)s END) AS roi 
FROM ledger INNER JOIN department ON ledger.department_id = department.department_id GROUP BY department.department_name ORDER BY sum(ledger.amount) DESC 
 LIMIT %(param_3)s
2025-02-24 10:59:24,745 - [cached since 1308s ago] {'ledger_description_1': 'Revenues', 'param_1': 0, 'ledger_description_2': 'Expenses', 'param_2': 0, 'param_3': 5}
2025-02-24 10:59:24,755 - BEGIN (implicit)
2025-02-24 10:59:24,761 - BEGIN (implicit)
2025-02-24 10:59:24,763 - BEGIN (implicit)
2025-02-24 10:59:24,768 - GET http://127.0.0.1:8000/api/initialise/ - 0.01 ms
2025-02-24 10:59:24,765 - SELECT department.department_name AS department_department_name, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount ELSE %(param_1)s END + CASE WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_2)s END) AS total_expenditure 
FROM ledger INNER JOIN department ON ledger.department_id = department.department_id GROUP BY department.department_name ORDER BY sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount ELSE %(param_1)s END + CASE WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_2)s END) DESC 
 LIMIT %(param_3)s
2025-02-24 10:59:24,766 - SELECT year(ledger.general_ledger_date) AS time, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_1)s END) - sum(CASE WHEN (ledger.ledger_description = %(ledger_description_3)s AND ledger.amount > %(amount_3)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_4)s AND ledger.amount < %(amount_4)s) THEN -ledger.amount ELSE %(param_2)s END) AS net_profit 
FROM ledger GROUP BY year(ledger.general_ledger_date) ORDER BY year(ledger.general_ledger_date)
2025-02-24 10:59:24,768 - BEGIN (implicit)
2025-02-24 10:59:24,769 - SELECT year(ledger.general_ledger_date) AS time, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_1)s END) AS total_revenue, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_3)s AND ledger.amount > %(amount_3)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_4)s AND ledger.amount < %(amount_4)s) THEN -ledger.amount ELSE %(param_2)s END) AS total_expenses 
FROM ledger GROUP BY year(ledger.general_ledger_date) ORDER BY year(ledger.general_ledger_date)
2025-02-24 10:59:24,770 - [cached since 1308s ago] {'ledger_description_1': 'Expenses', 'amount_1': 0, 'param_1': 0, 'ledger_description_2': 'Revenues', 'amount_2': 0, 'param_2': 0, 'param_3': 10}
2025-02-24 10:59:24,771 - [cached since 1308s ago] {'ledger_description_1': 'Revenues', 'amount_1': 0, 'ledger_description_2': 'Expenses', 'amount_2': 0, 'param_1': 0, 'ledger_description_3': 'Expenses', 'amount_3': 0, 'ledger_description_4': 'Revenues', 'amount_4': 0, 'param_2': 0}
2025-02-24 10:59:24,774 - SELECT fund.fund_description AS fund_fund_description, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_1)s END) AS total_revenue, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_3)s AND ledger.amount > %(amount_3)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_4)s AND ledger.amount < %(amount_4)s) THEN -ledger.amount ELSE %(param_2)s END) AS total_expenses, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_1)s END) / nullif(sum(CASE WHEN (ledger.ledger_description = %(ledger_description_3)s AND ledger.amount > %(amount_3)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_4)s AND ledger.amount < %(amount_4)s) THEN -ledger.amount ELSE %(param_2)s END), %(nullif_1)s) AS ratio, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_1)s END) - sum(CASE WHEN (ledger.ledger_description = %(ledger_description_3)s AND ledger.amount > %(amount_3)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_4)s AND ledger.amount < %(amount_4)s) THEN -ledger.amount ELSE %(param_2)s END) AS roi 
FROM ledger INNER JOIN fund ON ledger.fund_id = fund.fund_id GROUP BY fund.fund_description ORDER BY roi DESC
2025-02-24 10:59:24,777 - [cached since 1308s ago] {'ledger_description_1': 'Revenues', 'amount_1': 0, 'ledger_description_2': 'Expenses', 'amount_2': 0, 'param_1': 0, 'ledger_description_3': 'Expenses', 'amount_3': 0, 'ledger_description_4': 'Revenues', 'amount_4': 0, 'param_2': 0, 'nullif_1': 0}
2025-02-24 10:59:24,775 - [cached since 1308s ago] {'ledger_description_1': 'Revenues', 'amount_1': 0, 'ledger_description_2': 'Expenses', 'amount_2': 0, 'param_1': 0, 'ledger_description_3': 'Expenses', 'amount_3': 0, 'ledger_description_4': 'Revenues', 'amount_4': 0, 'param_2': 0}
2025-02-24 10:59:25,001 - BEGIN (implicit)
2025-02-24 10:59:25,007 - SELECT department.department_id AS department_department_id, department.department_name AS department_department_name 
FROM department
2025-02-24 10:59:25,007 - [cached since 1309s ago] {}
2025-02-24 10:59:25,033 - SELECT min(ledger.general_ledger_date) AS min_1 
FROM ledger
2025-02-24 10:59:25,033 - [cached since 1309s ago] {}
2025-02-24 10:59:25,049 - SELECT max(ledger.general_ledger_date) AS max_1 
FROM ledger
2025-02-24 10:59:25,050 - [cached since 1309s ago] {}
2025-02-24 10:59:25,056 - ROLLBACK
2025-02-24 10:59:25,058 - GET http://127.0.0.1:8000/api/initialise - 0.08 ms
2025-02-24 10:59:25,068 - BEGIN (implicit)
2025-02-24 10:59:25,069 - SELECT department.department_id AS department_department_id, department.department_name AS department_department_name 
FROM department
2025-02-24 10:59:25,069 - [cached since 1309s ago] {}
2025-02-24 10:59:25,074 - SELECT min(ledger.general_ledger_date) AS min_1 
FROM ledger
2025-02-24 10:59:25,075 - [cached since 1309s ago] {}
2025-02-24 10:59:25,077 - SELECT max(ledger.general_ledger_date) AS max_1 
FROM ledger
2025-02-24 10:59:25,078 - [cached since 1309s ago] {}
2025-02-24 10:59:25,084 - ROLLBACK
2025-02-24 10:59:25,092 - GET http://127.0.0.1:8000/api/initialise - 0.03 ms
2025-02-24 10:59:27,077 - ROLLBACK
2025-02-24 10:59:27,079 - GET http://127.0.0.1:8000/api/revenue-expenses/ - 2.33 ms
2025-02-24 10:59:27,082 - ROLLBACK
2025-02-24 10:59:27,087 - BEGIN (implicit)
2025-02-24 10:59:27,089 - GET http://127.0.0.1:8000/api/net-profit/ - 2.34 ms
2025-02-24 10:59:27,089 - SELECT year(ledger.general_ledger_date) AS time, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_1)s END) AS total_revenue, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_3)s AND ledger.amount > %(amount_3)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_4)s AND ledger.amount < %(amount_4)s) THEN -ledger.amount ELSE %(param_2)s END) AS total_expenses 
FROM ledger GROUP BY year(ledger.general_ledger_date) ORDER BY year(ledger.general_ledger_date)
2025-02-24 10:59:27,090 - [cached since 1311s ago] {'ledger_description_1': 'Revenues', 'amount_1': 0, 'ledger_description_2': 'Expenses', 'amount_2': 0, 'param_1': 0, 'ledger_description_3': 'Expenses', 'amount_3': 0, 'ledger_description_4': 'Revenues', 'amount_4': 0, 'param_2': 0}
2025-02-24 10:59:27,096 - BEGIN (implicit)
2025-02-24 10:59:27,098 - SELECT year(ledger.general_ledger_date) AS time, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_1)s END) - sum(CASE WHEN (ledger.ledger_description = %(ledger_description_3)s AND ledger.amount > %(amount_3)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_4)s AND ledger.amount < %(amount_4)s) THEN -ledger.amount ELSE %(param_2)s END) AS net_profit 
FROM ledger GROUP BY year(ledger.general_ledger_date) ORDER BY year(ledger.general_ledger_date)
2025-02-24 10:59:27,099 - [cached since 1311s ago] {'ledger_description_1': 'Revenues', 'amount_1': 0, 'ledger_description_2': 'Expenses', 'amount_2': 0, 'param_1': 0, 'ledger_description_3': 'Expenses', 'amount_3': 0, 'ledger_description_4': 'Revenues', 'amount_4': 0, 'param_2': 0}
2025-02-24 10:59:28,265 - ROLLBACK
2025-02-24 10:59:28,267 - GET http://127.0.0.1:8000/api/top-roi/ - 3.53 ms
2025-02-24 10:59:28,273 - BEGIN (implicit)
2025-02-24 10:59:28,274 - SELECT department.department_name AS department_department_name, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s) THEN ledger.amount ELSE %(param_1)s END) - sum(CASE WHEN (ledger.ledger_description = %(ledger_description_2)s) THEN ledger.amount ELSE %(param_2)s END) AS roi 
FROM ledger INNER JOIN department ON ledger.department_id = department.department_id GROUP BY department.department_name ORDER BY sum(ledger.amount) DESC 
 LIMIT %(param_3)s
2025-02-24 10:59:28,274 - [cached since 1312s ago] {'ledger_description_1': 'Revenues', 'param_1': 0, 'ledger_description_2': 'Expenses', 'param_2': 0, 'param_3': 5}
2025-02-24 10:59:28,671 - ROLLBACK
2025-02-24 10:59:28,673 - GET http://127.0.0.1:8000/api/top-budget/ - 3.93 ms
2025-02-24 10:59:28,680 - BEGIN (implicit)
2025-02-24 10:59:28,681 - SELECT department.department_name AS department_department_name, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount ELSE %(param_1)s END + CASE WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_2)s END) AS total_expenditure 
FROM ledger INNER JOIN department ON ledger.department_id = department.department_id GROUP BY department.department_name ORDER BY sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount ELSE %(param_1)s END + CASE WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_2)s END) DESC 
 LIMIT %(param_3)s
2025-02-24 10:59:28,682 - [cached since 1312s ago] {'ledger_description_1': 'Expenses', 'amount_1': 0, 'param_1': 0, 'ledger_description_2': 'Revenues', 'amount_2': 0, 'param_2': 0, 'param_3': 10}
2025-02-24 10:59:29,082 - ROLLBACK
2025-02-24 10:59:29,085 - GET http://127.0.0.1:8000/api/revenue-expenses/ - 2.00 ms
2025-02-24 10:59:29,085 - ROLLBACK
2025-02-24 10:59:29,088 - GET http://127.0.0.1:8000/api/net-profit/ - 2.00 ms
2025-02-24 10:59:29,772 - ROLLBACK
2025-02-24 10:59:29,774 - GET http://127.0.0.1:8000/api/fund-table/ - 5.03 ms
2025-02-24 10:59:29,781 - BEGIN (implicit)
2025-02-24 10:59:29,782 - SELECT fund.fund_description AS fund_fund_description, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_1)s END) AS total_revenue, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_3)s AND ledger.amount > %(amount_3)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_4)s AND ledger.amount < %(amount_4)s) THEN -ledger.amount ELSE %(param_2)s END) AS total_expenses, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_1)s END) / nullif(sum(CASE WHEN (ledger.ledger_description = %(ledger_description_3)s AND ledger.amount > %(amount_3)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_4)s AND ledger.amount < %(amount_4)s) THEN -ledger.amount ELSE %(param_2)s END), %(nullif_1)s) AS ratio, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_1)s END) - sum(CASE WHEN (ledger.ledger_description = %(ledger_description_3)s AND ledger.amount > %(amount_3)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_4)s AND ledger.amount < %(amount_4)s) THEN -ledger.amount ELSE %(param_2)s END) AS roi 
FROM ledger INNER JOIN fund ON ledger.fund_id = fund.fund_id GROUP BY fund.fund_description ORDER BY roi DESC
2025-02-24 10:59:29,783 - [cached since 1313s ago] {'ledger_description_1': 'Revenues', 'amount_1': 0, 'ledger_description_2': 'Expenses', 'amount_2': 0, 'param_1': 0, 'ledger_description_3': 'Expenses', 'amount_3': 0, 'ledger_description_4': 'Revenues', 'amount_4': 0, 'param_2': 0, 'nullif_1': 0}
2025-02-24 10:59:30,898 - ROLLBACK
2025-02-24 10:59:30,900 - GET http://127.0.0.1:8000/api/top-roi/ - 2.63 ms
2025-02-24 10:59:31,236 - ROLLBACK
2025-02-24 10:59:31,238 - GET http://127.0.0.1:8000/api/top-budget/ - 2.56 ms
2025-02-24 10:59:32,700 - ROLLBACK
2025-02-24 10:59:32,702 - GET http://127.0.0.1:8000/api/fund-table/ - 2.92 ms
2025-02-24 10:59:44,139 - POST http://127.0.0.1:8000/login - 0.33 ms
2025-02-24 10:59:44,154 - GET http://127.0.0.1:8000/api/initialise/ - 0.01 ms
2025-02-24 10:59:44,174 - GET http://127.0.0.1:8000/api/initialise/ - 0.01 ms
2025-02-24 10:59:44,172 - BEGIN (implicit)
2025-02-24 10:59:44,173 - BEGIN (implicit)
2025-02-24 10:59:44,175 - BEGIN (implicit)
2025-02-24 10:59:44,177 - SELECT department.department_name AS department_department_name, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s) THEN ledger.amount ELSE %(param_1)s END) - sum(CASE WHEN (ledger.ledger_description = %(ledger_description_2)s) THEN ledger.amount ELSE %(param_2)s END) AS roi 
FROM ledger INNER JOIN department ON ledger.department_id = department.department_id GROUP BY department.department_name ORDER BY sum(ledger.amount) DESC 
 LIMIT %(param_3)s
2025-02-24 10:59:44,179 - SELECT department.department_name AS department_department_name, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount ELSE %(param_1)s END + CASE WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_2)s END) AS total_expenditure 
FROM ledger INNER JOIN department ON ledger.department_id = department.department_id GROUP BY department.department_name ORDER BY sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount ELSE %(param_1)s END + CASE WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_2)s END) DESC 
 LIMIT %(param_3)s
2025-02-24 10:59:44,189 - [cached since 1328s ago] {'ledger_description_1': 'Expenses', 'amount_1': 0, 'param_1': 0, 'ledger_description_2': 'Revenues', 'amount_2': 0, 'param_2': 0, 'param_3': 10}
2025-02-24 10:59:44,183 - BEGIN (implicit)
2025-02-24 10:59:44,185 - [cached since 1328s ago] {'ledger_description_1': 'Revenues', 'param_1': 0, 'ledger_description_2': 'Expenses', 'param_2': 0, 'param_3': 5}
2025-02-24 10:59:44,187 - BEGIN (implicit)
2025-02-24 10:59:44,181 - SELECT year(ledger.general_ledger_date) AS time, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_1)s END) AS total_revenue, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_3)s AND ledger.amount > %(amount_3)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_4)s AND ledger.amount < %(amount_4)s) THEN -ledger.amount ELSE %(param_2)s END) AS total_expenses 
FROM ledger GROUP BY year(ledger.general_ledger_date) ORDER BY year(ledger.general_ledger_date)
2025-02-24 10:59:44,192 - SELECT fund.fund_description AS fund_fund_description, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_1)s END) AS total_revenue, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_3)s AND ledger.amount > %(amount_3)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_4)s AND ledger.amount < %(amount_4)s) THEN -ledger.amount ELSE %(param_2)s END) AS total_expenses, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_1)s END) / nullif(sum(CASE WHEN (ledger.ledger_description = %(ledger_description_3)s AND ledger.amount > %(amount_3)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_4)s AND ledger.amount < %(amount_4)s) THEN -ledger.amount ELSE %(param_2)s END), %(nullif_1)s) AS ratio, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_1)s END) - sum(CASE WHEN (ledger.ledger_description = %(ledger_description_3)s AND ledger.amount > %(amount_3)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_4)s AND ledger.amount < %(amount_4)s) THEN -ledger.amount ELSE %(param_2)s END) AS roi 
FROM ledger INNER JOIN fund ON ledger.fund_id = fund.fund_id GROUP BY fund.fund_description ORDER BY roi DESC
2025-02-24 10:59:44,193 - SELECT year(ledger.general_ledger_date) AS time, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_1)s END) - sum(CASE WHEN (ledger.ledger_description = %(ledger_description_3)s AND ledger.amount > %(amount_3)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_4)s AND ledger.amount < %(amount_4)s) THEN -ledger.amount ELSE %(param_2)s END) AS net_profit 
FROM ledger GROUP BY year(ledger.general_ledger_date) ORDER BY year(ledger.general_ledger_date)
2025-02-24 10:59:44,194 - [cached since 1328s ago] {'ledger_description_1': 'Revenues', 'amount_1': 0, 'ledger_description_2': 'Expenses', 'amount_2': 0, 'param_1': 0, 'ledger_description_3': 'Expenses', 'amount_3': 0, 'ledger_description_4': 'Revenues', 'amount_4': 0, 'param_2': 0}
2025-02-24 10:59:44,197 - [cached since 1328s ago] {'ledger_description_1': 'Revenues', 'amount_1': 0, 'ledger_description_2': 'Expenses', 'amount_2': 0, 'param_1': 0, 'ledger_description_3': 'Expenses', 'amount_3': 0, 'ledger_description_4': 'Revenues', 'amount_4': 0, 'param_2': 0, 'nullif_1': 0}
2025-02-24 10:59:44,198 - [cached since 1328s ago] {'ledger_description_1': 'Revenues', 'amount_1': 0, 'ledger_description_2': 'Expenses', 'amount_2': 0, 'param_1': 0, 'ledger_description_3': 'Expenses', 'amount_3': 0, 'ledger_description_4': 'Revenues', 'amount_4': 0, 'param_2': 0}
2025-02-24 10:59:44,205 - BEGIN (implicit)
2025-02-24 10:59:44,206 - SELECT department.department_id AS department_department_id, department.department_name AS department_department_name 
FROM department
2025-02-24 10:59:44,207 - [cached since 1328s ago] {}
2025-02-24 10:59:44,209 - SELECT min(ledger.general_ledger_date) AS min_1 
FROM ledger
2025-02-24 10:59:44,210 - [cached since 1328s ago] {}
2025-02-24 10:59:44,211 - SELECT max(ledger.general_ledger_date) AS max_1 
FROM ledger
2025-02-24 10:59:44,212 - [cached since 1328s ago] {}
2025-02-24 10:59:44,217 - ROLLBACK
2025-02-24 10:59:44,222 - GET http://127.0.0.1:8000/api/initialise - 0.03 ms
2025-02-24 10:59:44,238 - BEGIN (implicit)
2025-02-24 10:59:44,239 - SELECT department.department_id AS department_department_id, department.department_name AS department_department_name 
FROM department
2025-02-24 10:59:44,240 - [cached since 1328s ago] {}
2025-02-24 10:59:44,245 - SELECT min(ledger.general_ledger_date) AS min_1 
FROM ledger
2025-02-24 10:59:44,246 - [cached since 1328s ago] {}
2025-02-24 10:59:44,253 - SELECT max(ledger.general_ledger_date) AS max_1 
FROM ledger
2025-02-24 10:59:44,255 - [cached since 1328s ago] {}
2025-02-24 10:59:44,260 - ROLLBACK
2025-02-24 10:59:44,264 - GET http://127.0.0.1:8000/api/initialise - 0.03 ms
2025-02-24 10:59:46,355 - ROLLBACK
2025-02-24 10:59:46,356 - ROLLBACK
2025-02-24 10:59:46,357 - GET http://127.0.0.1:8000/api/revenue-expenses/ - 2.21 ms
2025-02-24 10:59:46,359 - GET http://127.0.0.1:8000/api/net-profit/ - 2.22 ms
2025-02-24 10:59:46,367 - BEGIN (implicit)
2025-02-24 10:59:46,369 - SELECT year(ledger.general_ledger_date) AS time, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_1)s END) AS total_revenue, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_3)s AND ledger.amount > %(amount_3)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_4)s AND ledger.amount < %(amount_4)s) THEN -ledger.amount ELSE %(param_2)s END) AS total_expenses 
FROM ledger GROUP BY year(ledger.general_ledger_date) ORDER BY year(ledger.general_ledger_date)
2025-02-24 10:59:46,370 - [cached since 1330s ago] {'ledger_description_1': 'Revenues', 'amount_1': 0, 'ledger_description_2': 'Expenses', 'amount_2': 0, 'param_1': 0, 'ledger_description_3': 'Expenses', 'amount_3': 0, 'ledger_description_4': 'Revenues', 'amount_4': 0, 'param_2': 0}
2025-02-24 10:59:46,372 - BEGIN (implicit)
2025-02-24 10:59:46,373 - SELECT year(ledger.general_ledger_date) AS time, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_1)s END) - sum(CASE WHEN (ledger.ledger_description = %(ledger_description_3)s AND ledger.amount > %(amount_3)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_4)s AND ledger.amount < %(amount_4)s) THEN -ledger.amount ELSE %(param_2)s END) AS net_profit 
FROM ledger GROUP BY year(ledger.general_ledger_date) ORDER BY year(ledger.general_ledger_date)
2025-02-24 10:59:46,374 - [cached since 1330s ago] {'ledger_description_1': 'Revenues', 'amount_1': 0, 'ledger_description_2': 'Expenses', 'amount_2': 0, 'param_1': 0, 'ledger_description_3': 'Expenses', 'amount_3': 0, 'ledger_description_4': 'Revenues', 'amount_4': 0, 'param_2': 0}
2025-02-24 10:59:47,681 - ROLLBACK
2025-02-24 10:59:47,682 - GET http://127.0.0.1:8000/api/top-roi/ - 3.54 ms
2025-02-24 10:59:47,690 - BEGIN (implicit)
2025-02-24 10:59:47,692 - SELECT department.department_name AS department_department_name, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s) THEN ledger.amount ELSE %(param_1)s END) - sum(CASE WHEN (ledger.ledger_description = %(ledger_description_2)s) THEN ledger.amount ELSE %(param_2)s END) AS roi 
FROM ledger INNER JOIN department ON ledger.department_id = department.department_id GROUP BY department.department_name ORDER BY sum(ledger.amount) DESC 
 LIMIT %(param_3)s
2025-02-24 10:59:47,692 - [cached since 1331s ago] {'ledger_description_1': 'Revenues', 'param_1': 0, 'ledger_description_2': 'Expenses', 'param_2': 0, 'param_3': 5}
2025-02-24 10:59:47,848 - ROLLBACK
2025-02-24 10:59:47,850 - GET http://127.0.0.1:8000/api/top-budget/ - 3.71 ms
2025-02-24 10:59:47,857 - BEGIN (implicit)
2025-02-24 10:59:47,858 - SELECT department.department_name AS department_department_name, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount ELSE %(param_1)s END + CASE WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_2)s END) AS total_expenditure 
FROM ledger INNER JOIN department ON ledger.department_id = department.department_id GROUP BY department.department_name ORDER BY sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount ELSE %(param_1)s END + CASE WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_2)s END) DESC 
 LIMIT %(param_3)s
2025-02-24 10:59:47,859 - [cached since 1332s ago] {'ledger_description_1': 'Expenses', 'amount_1': 0, 'param_1': 0, 'ledger_description_2': 'Revenues', 'amount_2': 0, 'param_2': 0, 'param_3': 10}
2025-02-24 10:59:48,435 - ROLLBACK
2025-02-24 10:59:48,436 - ROLLBACK
2025-02-24 10:59:48,438 - GET http://127.0.0.1:8000/api/net-profit/ - 2.07 ms
2025-02-24 10:59:48,440 - GET http://127.0.0.1:8000/api/revenue-expenses/ - 2.08 ms
2025-02-24 10:59:49,255 - ROLLBACK
2025-02-24 10:59:49,257 - GET http://127.0.0.1:8000/api/fund-table/ - 5.11 ms
2025-02-24 10:59:49,263 - BEGIN (implicit)
2025-02-24 10:59:49,265 - SELECT fund.fund_description AS fund_fund_description, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_1)s END) AS total_revenue, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_3)s AND ledger.amount > %(amount_3)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_4)s AND ledger.amount < %(amount_4)s) THEN -ledger.amount ELSE %(param_2)s END) AS total_expenses, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_1)s END) / nullif(sum(CASE WHEN (ledger.ledger_description = %(ledger_description_3)s AND ledger.amount > %(amount_3)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_4)s AND ledger.amount < %(amount_4)s) THEN -ledger.amount ELSE %(param_2)s END), %(nullif_1)s) AS ratio, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_1)s END) - sum(CASE WHEN (ledger.ledger_description = %(ledger_description_3)s AND ledger.amount > %(amount_3)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_4)s AND ledger.amount < %(amount_4)s) THEN -ledger.amount ELSE %(param_2)s END) AS roi 
FROM ledger INNER JOIN fund ON ledger.fund_id = fund.fund_id GROUP BY fund.fund_description ORDER BY roi DESC
2025-02-24 10:59:49,266 - [cached since 1333s ago] {'ledger_description_1': 'Revenues', 'amount_1': 0, 'ledger_description_2': 'Expenses', 'amount_2': 0, 'param_1': 0, 'ledger_description_3': 'Expenses', 'amount_3': 0, 'ledger_description_4': 'Revenues', 'amount_4': 0, 'param_2': 0, 'nullif_1': 0}
2025-02-24 10:59:50,903 - ROLLBACK
2025-02-24 10:59:50,905 - GET http://127.0.0.1:8000/api/top-roi/ - 3.22 ms
2025-02-24 10:59:51,296 - ROLLBACK
2025-02-24 10:59:51,297 - GET http://127.0.0.1:8000/api/top-budget/ - 3.44 ms
2025-02-24 10:59:53,341 - ROLLBACK
2025-02-24 10:59:53,344 - GET http://127.0.0.1:8000/api/fund-table/ - 4.08 ms
2025-02-24 11:00:02,120 - POST http://127.0.0.1:8000/login - 0.28 ms
2025-02-24 11:00:02,128 - GET http://127.0.0.1:8000/api/initialise/ - 0.00 ms
2025-02-24 11:00:02,137 - BEGIN (implicit)
2025-02-24 11:00:02,145 - GET http://127.0.0.1:8000/api/initialise/ - 0.01 ms
2025-02-24 11:00:02,139 - BEGIN (implicit)
2025-02-24 11:00:02,141 - BEGIN (implicit)
2025-02-24 11:00:02,143 - BEGIN (implicit)
2025-02-24 11:00:02,144 - SELECT year(ledger.general_ledger_date) AS time, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_1)s END) AS total_revenue, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_3)s AND ledger.amount > %(amount_3)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_4)s AND ledger.amount < %(amount_4)s) THEN -ledger.amount ELSE %(param_2)s END) AS total_expenses 
FROM ledger GROUP BY year(ledger.general_ledger_date) ORDER BY year(ledger.general_ledger_date)
2025-02-24 11:00:02,147 - BEGIN (implicit)
2025-02-24 11:00:02,148 - SELECT department.department_name AS department_department_name, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s) THEN ledger.amount ELSE %(param_1)s END) - sum(CASE WHEN (ledger.ledger_description = %(ledger_description_2)s) THEN ledger.amount ELSE %(param_2)s END) AS roi 
FROM ledger INNER JOIN department ON ledger.department_id = department.department_id GROUP BY department.department_name ORDER BY sum(ledger.amount) DESC 
 LIMIT %(param_3)s
2025-02-24 11:00:02,149 - SELECT department.department_name AS department_department_name, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount ELSE %(param_1)s END + CASE WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_2)s END) AS total_expenditure 
FROM ledger INNER JOIN department ON ledger.department_id = department.department_id GROUP BY department.department_name ORDER BY sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount ELSE %(param_1)s END + CASE WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_2)s END) DESC 
 LIMIT %(param_3)s
2025-02-24 11:00:02,155 - SELECT year(ledger.general_ledger_date) AS time, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_1)s END) - sum(CASE WHEN (ledger.ledger_description = %(ledger_description_3)s AND ledger.amount > %(amount_3)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_4)s AND ledger.amount < %(amount_4)s) THEN -ledger.amount ELSE %(param_2)s END) AS net_profit 
FROM ledger GROUP BY year(ledger.general_ledger_date) ORDER BY year(ledger.general_ledger_date)
2025-02-24 11:00:02,155 - [cached since 1346s ago] {'ledger_description_1': 'Revenues', 'amount_1': 0, 'ledger_description_2': 'Expenses', 'amount_2': 0, 'param_1': 0, 'ledger_description_3': 'Expenses', 'amount_3': 0, 'ledger_description_4': 'Revenues', 'amount_4': 0, 'param_2': 0}
2025-02-24 11:00:02,156 - SELECT fund.fund_description AS fund_fund_description, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_1)s END) AS total_revenue, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_3)s AND ledger.amount > %(amount_3)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_4)s AND ledger.amount < %(amount_4)s) THEN -ledger.amount ELSE %(param_2)s END) AS total_expenses, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_1)s END) / nullif(sum(CASE WHEN (ledger.ledger_description = %(ledger_description_3)s AND ledger.amount > %(amount_3)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_4)s AND ledger.amount < %(amount_4)s) THEN -ledger.amount ELSE %(param_2)s END), %(nullif_1)s) AS ratio, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_1)s END) - sum(CASE WHEN (ledger.ledger_description = %(ledger_description_3)s AND ledger.amount > %(amount_3)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_4)s AND ledger.amount < %(amount_4)s) THEN -ledger.amount ELSE %(param_2)s END) AS roi 
FROM ledger INNER JOIN fund ON ledger.fund_id = fund.fund_id GROUP BY fund.fund_description ORDER BY roi DESC
2025-02-24 11:00:02,157 - [cached since 1346s ago] {'ledger_description_1': 'Revenues', 'param_1': 0, 'ledger_description_2': 'Expenses', 'param_2': 0, 'param_3': 5}
2025-02-24 11:00:02,158 - [cached since 1346s ago] {'ledger_description_1': 'Expenses', 'amount_1': 0, 'param_1': 0, 'ledger_description_2': 'Revenues', 'amount_2': 0, 'param_2': 0, 'param_3': 10}
2025-02-24 11:00:02,159 - [cached since 1346s ago] {'ledger_description_1': 'Revenues', 'amount_1': 0, 'ledger_description_2': 'Expenses', 'amount_2': 0, 'param_1': 0, 'ledger_description_3': 'Expenses', 'amount_3': 0, 'ledger_description_4': 'Revenues', 'amount_4': 0, 'param_2': 0}
2025-02-24 11:00:02,161 - [cached since 1346s ago] {'ledger_description_1': 'Revenues', 'amount_1': 0, 'ledger_description_2': 'Expenses', 'amount_2': 0, 'param_1': 0, 'ledger_description_3': 'Expenses', 'amount_3': 0, 'ledger_description_4': 'Revenues', 'amount_4': 0, 'param_2': 0, 'nullif_1': 0}
2025-02-24 11:00:02,162 - BEGIN (implicit)
2025-02-24 11:00:02,163 - SELECT department.department_id AS department_department_id, department.department_name AS department_department_name 
FROM department
2025-02-24 11:00:02,164 - [cached since 1346s ago] {}
2025-02-24 11:00:02,168 - SELECT min(ledger.general_ledger_date) AS min_1 
FROM ledger
2025-02-24 11:00:02,169 - [cached since 1346s ago] {}
2025-02-24 11:00:02,172 - SELECT max(ledger.general_ledger_date) AS max_1 
FROM ledger
2025-02-24 11:00:02,172 - [cached since 1346s ago] {}
2025-02-24 11:00:02,176 - ROLLBACK
2025-02-24 11:00:02,178 - GET http://127.0.0.1:8000/api/initialise - 0.03 ms
2025-02-24 11:00:02,189 - BEGIN (implicit)
2025-02-24 11:00:02,190 - SELECT department.department_id AS department_department_id, department.department_name AS department_department_name 
FROM department
2025-02-24 11:00:02,190 - [cached since 1346s ago] {}
2025-02-24 11:00:02,197 - SELECT min(ledger.general_ledger_date) AS min_1 
FROM ledger
2025-02-24 11:00:02,198 - [cached since 1346s ago] {}
2025-02-24 11:00:02,205 - SELECT max(ledger.general_ledger_date) AS max_1 
FROM ledger
2025-02-24 11:00:02,205 - [cached since 1346s ago] {}
2025-02-24 11:00:02,209 - ROLLBACK
2025-02-24 11:00:02,211 - GET http://127.0.0.1:8000/api/initialise - 0.03 ms
2025-02-24 11:00:04,172 - ROLLBACK
2025-02-24 11:00:04,175 - GET http://127.0.0.1:8000/api/net-profit/ - 2.05 ms
2025-02-24 11:00:04,183 - BEGIN (implicit)
2025-02-24 11:00:04,185 - SELECT year(ledger.general_ledger_date) AS time, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_1)s END) - sum(CASE WHEN (ledger.ledger_description = %(ledger_description_3)s AND ledger.amount > %(amount_3)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_4)s AND ledger.amount < %(amount_4)s) THEN -ledger.amount ELSE %(param_2)s END) AS net_profit 
FROM ledger GROUP BY year(ledger.general_ledger_date) ORDER BY year(ledger.general_ledger_date)
2025-02-24 11:00:04,186 - [cached since 1348s ago] {'ledger_description_1': 'Revenues', 'amount_1': 0, 'ledger_description_2': 'Expenses', 'amount_2': 0, 'param_1': 0, 'ledger_description_3': 'Expenses', 'amount_3': 0, 'ledger_description_4': 'Revenues', 'amount_4': 0, 'param_2': 0}
2025-02-24 11:00:04,187 - ROLLBACK
2025-02-24 11:00:04,189 - GET http://127.0.0.1:8000/api/revenue-expenses/ - 2.06 ms
2025-02-24 11:00:04,198 - BEGIN (implicit)
2025-02-24 11:00:04,200 - SELECT year(ledger.general_ledger_date) AS time, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_1)s END) AS total_revenue, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_3)s AND ledger.amount > %(amount_3)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_4)s AND ledger.amount < %(amount_4)s) THEN -ledger.amount ELSE %(param_2)s END) AS total_expenses 
FROM ledger GROUP BY year(ledger.general_ledger_date) ORDER BY year(ledger.general_ledger_date)
2025-02-24 11:00:04,205 - [cached since 1348s ago] {'ledger_description_1': 'Revenues', 'amount_1': 0, 'ledger_description_2': 'Expenses', 'amount_2': 0, 'param_1': 0, 'ledger_description_3': 'Expenses', 'amount_3': 0, 'ledger_description_4': 'Revenues', 'amount_4': 0, 'param_2': 0}
2025-02-24 11:00:05,612 - ROLLBACK
2025-02-24 11:00:05,614 - GET http://127.0.0.1:8000/api/top-roi/ - 3.49 ms
2025-02-24 11:00:05,623 - BEGIN (implicit)
2025-02-24 11:00:05,624 - SELECT department.department_name AS department_department_name, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s) THEN ledger.amount ELSE %(param_1)s END) - sum(CASE WHEN (ledger.ledger_description = %(ledger_description_2)s) THEN ledger.amount ELSE %(param_2)s END) AS roi 
FROM ledger INNER JOIN department ON ledger.department_id = department.department_id GROUP BY department.department_name ORDER BY sum(ledger.amount) DESC 
 LIMIT %(param_3)s
2025-02-24 11:00:05,625 - [cached since 1349s ago] {'ledger_description_1': 'Revenues', 'param_1': 0, 'ledger_description_2': 'Expenses', 'param_2': 0, 'param_3': 5}
2025-02-24 11:00:06,129 - ROLLBACK
2025-02-24 11:00:06,133 - GET http://127.0.0.1:8000/api/top-budget/ - 4.01 ms
2025-02-24 11:00:06,142 - BEGIN (implicit)
2025-02-24 11:00:06,143 - SELECT department.department_name AS department_department_name, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount ELSE %(param_1)s END + CASE WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_2)s END) AS total_expenditure 
FROM ledger INNER JOIN department ON ledger.department_id = department.department_id GROUP BY department.department_name ORDER BY sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount ELSE %(param_1)s END + CASE WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_2)s END) DESC 
 LIMIT %(param_3)s
2025-02-24 11:00:06,144 - [cached since 1350s ago] {'ledger_description_1': 'Expenses', 'amount_1': 0, 'param_1': 0, 'ledger_description_2': 'Revenues', 'amount_2': 0, 'param_2': 0, 'param_3': 10}
2025-02-24 11:00:06,658 - ROLLBACK
2025-02-24 11:00:06,660 - GET http://127.0.0.1:8000/api/revenue-expenses/ - 2.47 ms
2025-02-24 11:00:06,672 - ROLLBACK
2025-02-24 11:00:06,673 - GET http://127.0.0.1:8000/api/net-profit/ - 2.49 ms
2025-02-24 11:00:07,491 - ROLLBACK
2025-02-24 11:00:07,493 - GET http://127.0.0.1:8000/api/fund-table/ - 5.37 ms
2025-02-24 11:00:07,500 - BEGIN (implicit)
2025-02-24 11:00:07,502 - SELECT fund.fund_description AS fund_fund_description, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_1)s END) AS total_revenue, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_3)s AND ledger.amount > %(amount_3)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_4)s AND ledger.amount < %(amount_4)s) THEN -ledger.amount ELSE %(param_2)s END) AS total_expenses, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_1)s END) / nullif(sum(CASE WHEN (ledger.ledger_description = %(ledger_description_3)s AND ledger.amount > %(amount_3)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_4)s AND ledger.amount < %(amount_4)s) THEN -ledger.amount ELSE %(param_2)s END), %(nullif_1)s) AS ratio, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_1)s END) - sum(CASE WHEN (ledger.ledger_description = %(ledger_description_3)s AND ledger.amount > %(amount_3)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_4)s AND ledger.amount < %(amount_4)s) THEN -ledger.amount ELSE %(param_2)s END) AS roi 
FROM ledger INNER JOIN fund ON ledger.fund_id = fund.fund_id GROUP BY fund.fund_description ORDER BY roi DESC
2025-02-24 11:00:07,503 - [cached since 1351s ago] {'ledger_description_1': 'Revenues', 'amount_1': 0, 'ledger_description_2': 'Expenses', 'amount_2': 0, 'param_1': 0, 'ledger_description_3': 'Expenses', 'amount_3': 0, 'ledger_description_4': 'Revenues', 'amount_4': 0, 'param_2': 0, 'nullif_1': 0}
2025-02-24 11:00:08,967 - ROLLBACK
2025-02-24 11:00:08,974 - GET http://127.0.0.1:8000/api/top-roi/ - 3.35 ms
2025-02-24 11:00:09,643 - ROLLBACK
2025-02-24 11:00:09,644 - GET http://127.0.0.1:8000/api/top-budget/ - 3.51 ms
2025-02-24 11:00:11,476 - ROLLBACK
2025-02-24 11:00:11,477 - GET http://127.0.0.1:8000/api/fund-table/ - 3.98 ms
2025-02-24 11:00:27,924 - GET http://127.0.0.1:8000/api/initialise/ - 0.00 ms
2025-02-24 11:00:28,054 - BEGIN (implicit)
2025-02-24 11:00:28,056 - SELECT department.department_name AS department_department_name, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s) THEN ledger.amount ELSE %(param_1)s END) - sum(CASE WHEN (ledger.ledger_description = %(ledger_description_2)s) THEN ledger.amount ELSE %(param_2)s END) AS roi 
FROM ledger INNER JOIN department ON ledger.department_id = department.department_id GROUP BY department.department_name ORDER BY sum(ledger.amount) DESC 
 LIMIT %(param_3)s
2025-02-24 11:00:28,057 - [cached since 1372s ago] {'ledger_description_1': 'Revenues', 'param_1': 0, 'ledger_description_2': 'Expenses', 'param_2': 0, 'param_3': 5}
2025-02-24 11:00:28,060 - BEGIN (implicit)
2025-02-24 11:00:28,062 - SELECT department.department_name AS department_department_name, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount ELSE %(param_1)s END + CASE WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_2)s END) AS total_expenditure 
FROM ledger INNER JOIN department ON ledger.department_id = department.department_id GROUP BY department.department_name ORDER BY sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount ELSE %(param_1)s END + CASE WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_2)s END) DESC 
 LIMIT %(param_3)s
2025-02-24 11:00:28,063 - [cached since 1372s ago] {'ledger_description_1': 'Expenses', 'amount_1': 0, 'param_1': 0, 'ledger_description_2': 'Revenues', 'amount_2': 0, 'param_2': 0, 'param_3': 10}
2025-02-24 11:00:28,065 - BEGIN (implicit)
2025-02-24 11:00:28,068 - BEGIN (implicit)
2025-02-24 11:00:28,069 - SELECT year(ledger.general_ledger_date) AS time, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_1)s END) - sum(CASE WHEN (ledger.ledger_description = %(ledger_description_3)s AND ledger.amount > %(amount_3)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_4)s AND ledger.amount < %(amount_4)s) THEN -ledger.amount ELSE %(param_2)s END) AS net_profit 
FROM ledger GROUP BY year(ledger.general_ledger_date) ORDER BY year(ledger.general_ledger_date)
2025-02-24 11:00:28,075 - GET http://127.0.0.1:8000/api/initialise/ - 0.00 ms
2025-02-24 11:00:28,072 - SELECT year(ledger.general_ledger_date) AS time, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_1)s END) AS total_revenue, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_3)s AND ledger.amount > %(amount_3)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_4)s AND ledger.amount < %(amount_4)s) THEN -ledger.amount ELSE %(param_2)s END) AS total_expenses 
FROM ledger GROUP BY year(ledger.general_ledger_date) ORDER BY year(ledger.general_ledger_date)
2025-02-24 11:00:28,075 - BEGIN (implicit)
2025-02-24 11:00:28,075 - [cached since 1372s ago] {'ledger_description_1': 'Revenues', 'amount_1': 0, 'ledger_description_2': 'Expenses', 'amount_2': 0, 'param_1': 0, 'ledger_description_3': 'Expenses', 'amount_3': 0, 'ledger_description_4': 'Revenues', 'amount_4': 0, 'param_2': 0}
2025-02-24 11:00:28,076 - [cached since 1372s ago] {'ledger_description_1': 'Revenues', 'amount_1': 0, 'ledger_description_2': 'Expenses', 'amount_2': 0, 'param_1': 0, 'ledger_description_3': 'Expenses', 'amount_3': 0, 'ledger_description_4': 'Revenues', 'amount_4': 0, 'param_2': 0}
2025-02-24 11:00:28,077 - SELECT fund.fund_description AS fund_fund_description, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_1)s END) AS total_revenue, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_3)s AND ledger.amount > %(amount_3)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_4)s AND ledger.amount < %(amount_4)s) THEN -ledger.amount ELSE %(param_2)s END) AS total_expenses, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_1)s END) / nullif(sum(CASE WHEN (ledger.ledger_description = %(ledger_description_3)s AND ledger.amount > %(amount_3)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_4)s AND ledger.amount < %(amount_4)s) THEN -ledger.amount ELSE %(param_2)s END), %(nullif_1)s) AS ratio, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_1)s END) - sum(CASE WHEN (ledger.ledger_description = %(ledger_description_3)s AND ledger.amount > %(amount_3)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_4)s AND ledger.amount < %(amount_4)s) THEN -ledger.amount ELSE %(param_2)s END) AS roi 
FROM ledger INNER JOIN fund ON ledger.fund_id = fund.fund_id GROUP BY fund.fund_description ORDER BY roi DESC
2025-02-24 11:00:28,080 - [cached since 1372s ago] {'ledger_description_1': 'Revenues', 'amount_1': 0, 'ledger_description_2': 'Expenses', 'amount_2': 0, 'param_1': 0, 'ledger_description_3': 'Expenses', 'amount_3': 0, 'ledger_description_4': 'Revenues', 'amount_4': 0, 'param_2': 0, 'nullif_1': 0}
2025-02-24 11:00:28,317 - BEGIN (implicit)
2025-02-24 11:00:28,338 - SELECT department.department_id AS department_department_id, department.department_name AS department_department_name 
FROM department
2025-02-24 11:00:28,338 - [cached since 1372s ago] {}
2025-02-24 11:00:28,342 - SELECT min(ledger.general_ledger_date) AS min_1 
FROM ledger
2025-02-24 11:00:28,343 - [cached since 1372s ago] {}
2025-02-24 11:00:28,347 - SELECT max(ledger.general_ledger_date) AS max_1 
FROM ledger
2025-02-24 11:00:28,348 - [cached since 1372s ago] {}
2025-02-24 11:00:28,357 - ROLLBACK
2025-02-24 11:00:28,358 - GET http://127.0.0.1:8000/api/initialise - 0.08 ms
2025-02-24 11:00:28,366 - BEGIN (implicit)
2025-02-24 11:00:28,366 - SELECT department.department_id AS department_department_id, department.department_name AS department_department_name 
FROM department
2025-02-24 11:00:28,368 - [cached since 1372s ago] {}
2025-02-24 11:00:28,370 - SELECT min(ledger.general_ledger_date) AS min_1 
FROM ledger
2025-02-24 11:00:28,371 - [cached since 1372s ago] {}
2025-02-24 11:00:28,376 - SELECT max(ledger.general_ledger_date) AS max_1 
FROM ledger
2025-02-24 11:00:28,377 - [cached since 1372s ago] {}
2025-02-24 11:00:28,380 - ROLLBACK
2025-02-24 11:00:28,385 - GET http://127.0.0.1:8000/api/initialise - 0.02 ms
2025-02-24 11:00:30,366 - ROLLBACK
2025-02-24 11:00:30,368 - GET http://127.0.0.1:8000/api/revenue-expenses/ - 2.32 ms
2025-02-24 11:00:30,375 - ROLLBACK
2025-02-24 11:00:30,382 - BEGIN (implicit)
2025-02-24 11:00:30,384 - SELECT year(ledger.general_ledger_date) AS time, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_1)s END) AS total_revenue, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_3)s AND ledger.amount > %(amount_3)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_4)s AND ledger.amount < %(amount_4)s) THEN -ledger.amount ELSE %(param_2)s END) AS total_expenses 
FROM ledger GROUP BY year(ledger.general_ledger_date) ORDER BY year(ledger.general_ledger_date)
2025-02-24 11:00:30,387 - [cached since 1374s ago] {'ledger_description_1': 'Revenues', 'amount_1': 0, 'ledger_description_2': 'Expenses', 'amount_2': 0, 'param_1': 0, 'ledger_description_3': 'Expenses', 'amount_3': 0, 'ledger_description_4': 'Revenues', 'amount_4': 0, 'param_2': 0}
2025-02-24 11:00:30,389 - GET http://127.0.0.1:8000/api/net-profit/ - 2.34 ms
2025-02-24 11:00:30,402 - BEGIN (implicit)
2025-02-24 11:00:30,404 - SELECT year(ledger.general_ledger_date) AS time, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_1)s END) - sum(CASE WHEN (ledger.ledger_description = %(ledger_description_3)s AND ledger.amount > %(amount_3)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_4)s AND ledger.amount < %(amount_4)s) THEN -ledger.amount ELSE %(param_2)s END) AS net_profit 
FROM ledger GROUP BY year(ledger.general_ledger_date) ORDER BY year(ledger.general_ledger_date)
2025-02-24 11:00:30,405 - [cached since 1374s ago] {'ledger_description_1': 'Revenues', 'amount_1': 0, 'ledger_description_2': 'Expenses', 'amount_2': 0, 'param_1': 0, 'ledger_description_3': 'Expenses', 'amount_3': 0, 'ledger_description_4': 'Revenues', 'amount_4': 0, 'param_2': 0}
2025-02-24 11:00:31,693 - ROLLBACK
2025-02-24 11:00:31,695 - GET http://127.0.0.1:8000/api/top-roi/ - 3.65 ms
2025-02-24 11:00:31,702 - BEGIN (implicit)
2025-02-24 11:00:31,704 - SELECT department.department_name AS department_department_name, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s) THEN ledger.amount ELSE %(param_1)s END) - sum(CASE WHEN (ledger.ledger_description = %(ledger_description_2)s) THEN ledger.amount ELSE %(param_2)s END) AS roi 
FROM ledger INNER JOIN department ON ledger.department_id = department.department_id GROUP BY department.department_name ORDER BY sum(ledger.amount) DESC 
 LIMIT %(param_3)s
2025-02-24 11:00:31,705 - [cached since 1375s ago] {'ledger_description_1': 'Revenues', 'param_1': 0, 'ledger_description_2': 'Expenses', 'param_2': 0, 'param_3': 5}
2025-02-24 11:00:32,014 - ROLLBACK
2025-02-24 11:00:32,017 - GET http://127.0.0.1:8000/api/top-budget/ - 3.97 ms
2025-02-24 11:00:32,025 - BEGIN (implicit)
2025-02-24 11:00:32,026 - SELECT department.department_name AS department_department_name, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount ELSE %(param_1)s END + CASE WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_2)s END) AS total_expenditure 
FROM ledger INNER JOIN department ON ledger.department_id = department.department_id GROUP BY department.department_name ORDER BY sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount ELSE %(param_1)s END + CASE WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_2)s END) DESC 
 LIMIT %(param_3)s
2025-02-24 11:00:32,027 - [cached since 1376s ago] {'ledger_description_1': 'Expenses', 'amount_1': 0, 'param_1': 0, 'ledger_description_2': 'Revenues', 'amount_2': 0, 'param_2': 0, 'param_3': 10}
2025-02-24 11:00:32,546 - ROLLBACK
2025-02-24 11:00:32,549 - GET http://127.0.0.1:8000/api/revenue-expenses/ - 2.18 ms
2025-02-24 11:00:32,549 - ROLLBACK
2025-02-24 11:00:32,553 - GET http://127.0.0.1:8000/api/net-profit/ - 2.16 ms
2025-02-24 11:00:33,332 - ROLLBACK
2025-02-24 11:00:33,334 - GET http://127.0.0.1:8000/api/fund-table/ - 5.28 ms
2025-02-24 11:00:33,341 - BEGIN (implicit)
2025-02-24 11:00:33,342 - SELECT fund.fund_description AS fund_fund_description, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_1)s END) AS total_revenue, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_3)s AND ledger.amount > %(amount_3)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_4)s AND ledger.amount < %(amount_4)s) THEN -ledger.amount ELSE %(param_2)s END) AS total_expenses, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_1)s END) / nullif(sum(CASE WHEN (ledger.ledger_description = %(ledger_description_3)s AND ledger.amount > %(amount_3)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_4)s AND ledger.amount < %(amount_4)s) THEN -ledger.amount ELSE %(param_2)s END), %(nullif_1)s) AS ratio, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_1)s END) - sum(CASE WHEN (ledger.ledger_description = %(ledger_description_3)s AND ledger.amount > %(amount_3)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_4)s AND ledger.amount < %(amount_4)s) THEN -ledger.amount ELSE %(param_2)s END) AS roi 
FROM ledger INNER JOIN fund ON ledger.fund_id = fund.fund_id GROUP BY fund.fund_description ORDER BY roi DESC
2025-02-24 11:00:33,343 - [cached since 1377s ago] {'ledger_description_1': 'Revenues', 'amount_1': 0, 'ledger_description_2': 'Expenses', 'amount_2': 0, 'param_1': 0, 'ledger_description_3': 'Expenses', 'amount_3': 0, 'ledger_description_4': 'Revenues', 'amount_4': 0, 'param_2': 0, 'nullif_1': 0}
2025-02-24 11:00:34,471 - ROLLBACK
2025-02-24 11:00:34,472 - GET http://127.0.0.1:8000/api/top-roi/ - 2.77 ms
2025-02-24 11:00:34,728 - ROLLBACK
2025-02-24 11:00:34,730 - GET http://127.0.0.1:8000/api/top-budget/ - 2.71 ms
2025-02-24 11:00:36,269 - ROLLBACK
2025-02-24 11:00:36,271 - GET http://127.0.0.1:8000/api/fund-table/ - 2.93 ms
2025-02-24 11:00:47,032 - GET http://127.0.0.1:8000/api/initialise/ - 0.00 ms
2025-02-24 11:00:47,135 - BEGIN (implicit)
2025-02-24 11:00:47,139 - SELECT department.department_name AS department_department_name, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s) THEN ledger.amount ELSE %(param_1)s END) - sum(CASE WHEN (ledger.ledger_description = %(ledger_description_2)s) THEN ledger.amount ELSE %(param_2)s END) AS roi 
FROM ledger INNER JOIN department ON ledger.department_id = department.department_id GROUP BY department.department_name ORDER BY sum(ledger.amount) DESC 
 LIMIT %(param_3)s
2025-02-24 11:00:47,140 - [cached since 1391s ago] {'ledger_description_1': 'Revenues', 'param_1': 0, 'ledger_description_2': 'Expenses', 'param_2': 0, 'param_3': 5}
2025-02-24 11:00:47,145 - BEGIN (implicit)
2025-02-24 11:00:47,152 - GET http://127.0.0.1:8000/api/initialise/ - 0.01 ms
2025-02-24 11:00:47,147 - BEGIN (implicit)
2025-02-24 11:00:47,149 - BEGIN (implicit)
2025-02-24 11:00:47,151 - BEGIN (implicit)
2025-02-24 11:00:47,152 - SELECT department.department_name AS department_department_name, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount ELSE %(param_1)s END + CASE WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_2)s END) AS total_expenditure 
FROM ledger INNER JOIN department ON ledger.department_id = department.department_id GROUP BY department.department_name ORDER BY sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount ELSE %(param_1)s END + CASE WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_2)s END) DESC 
 LIMIT %(param_3)s
2025-02-24 11:00:47,154 - SELECT fund.fund_description AS fund_fund_description, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_1)s END) AS total_revenue, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_3)s AND ledger.amount > %(amount_3)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_4)s AND ledger.amount < %(amount_4)s) THEN -ledger.amount ELSE %(param_2)s END) AS total_expenses, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_1)s END) / nullif(sum(CASE WHEN (ledger.ledger_description = %(ledger_description_3)s AND ledger.amount > %(amount_3)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_4)s AND ledger.amount < %(amount_4)s) THEN -ledger.amount ELSE %(param_2)s END), %(nullif_1)s) AS ratio, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_1)s END) - sum(CASE WHEN (ledger.ledger_description = %(ledger_description_3)s AND ledger.amount > %(amount_3)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_4)s AND ledger.amount < %(amount_4)s) THEN -ledger.amount ELSE %(param_2)s END) AS roi 
FROM ledger INNER JOIN fund ON ledger.fund_id = fund.fund_id GROUP BY fund.fund_description ORDER BY roi DESC
2025-02-24 11:00:47,155 - SELECT year(ledger.general_ledger_date) AS time, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_1)s END) AS total_revenue, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_3)s AND ledger.amount > %(amount_3)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_4)s AND ledger.amount < %(amount_4)s) THEN -ledger.amount ELSE %(param_2)s END) AS total_expenses 
FROM ledger GROUP BY year(ledger.general_ledger_date) ORDER BY year(ledger.general_ledger_date)
2025-02-24 11:00:47,157 - SELECT year(ledger.general_ledger_date) AS time, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_1)s END) - sum(CASE WHEN (ledger.ledger_description = %(ledger_description_3)s AND ledger.amount > %(amount_3)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_4)s AND ledger.amount < %(amount_4)s) THEN -ledger.amount ELSE %(param_2)s END) AS net_profit 
FROM ledger GROUP BY year(ledger.general_ledger_date) ORDER BY year(ledger.general_ledger_date)
2025-02-24 11:00:47,158 - [cached since 1391s ago] {'ledger_description_1': 'Expenses', 'amount_1': 0, 'param_1': 0, 'ledger_description_2': 'Revenues', 'amount_2': 0, 'param_2': 0, 'param_3': 10}
2025-02-24 11:00:47,158 - [cached since 1391s ago] {'ledger_description_1': 'Revenues', 'amount_1': 0, 'ledger_description_2': 'Expenses', 'amount_2': 0, 'param_1': 0, 'ledger_description_3': 'Expenses', 'amount_3': 0, 'ledger_description_4': 'Revenues', 'amount_4': 0, 'param_2': 0, 'nullif_1': 0}
2025-02-24 11:00:47,159 - [cached since 1391s ago] {'ledger_description_1': 'Revenues', 'amount_1': 0, 'ledger_description_2': 'Expenses', 'amount_2': 0, 'param_1': 0, 'ledger_description_3': 'Expenses', 'amount_3': 0, 'ledger_description_4': 'Revenues', 'amount_4': 0, 'param_2': 0}
2025-02-24 11:00:47,159 - [cached since 1391s ago] {'ledger_description_1': 'Revenues', 'amount_1': 0, 'ledger_description_2': 'Expenses', 'amount_2': 0, 'param_1': 0, 'ledger_description_3': 'Expenses', 'amount_3': 0, 'ledger_description_4': 'Revenues', 'amount_4': 0, 'param_2': 0}
2025-02-24 11:00:47,356 - BEGIN (implicit)
2025-02-24 11:00:47,357 - SELECT department.department_id AS department_department_id, department.department_name AS department_department_name 
FROM department
2025-02-24 11:00:47,358 - [cached since 1391s ago] {}
2025-02-24 11:00:47,361 - SELECT min(ledger.general_ledger_date) AS min_1 
FROM ledger
2025-02-24 11:00:47,363 - [cached since 1391s ago] {}
2025-02-24 11:00:47,366 - SELECT max(ledger.general_ledger_date) AS max_1 
FROM ledger
2025-02-24 11:00:47,366 - [cached since 1391s ago] {}
2025-02-24 11:00:47,373 - ROLLBACK
2025-02-24 11:00:47,375 - GET http://127.0.0.1:8000/api/initialise - 0.02 ms
2025-02-24 11:00:47,394 - BEGIN (implicit)
2025-02-24 11:00:47,395 - SELECT department.department_id AS department_department_id, department.department_name AS department_department_name 
FROM department
2025-02-24 11:00:47,403 - [cached since 1391s ago] {}
2025-02-24 11:00:47,407 - SELECT min(ledger.general_ledger_date) AS min_1 
FROM ledger
2025-02-24 11:00:47,408 - [cached since 1391s ago] {}
2025-02-24 11:00:47,412 - SELECT max(ledger.general_ledger_date) AS max_1 
FROM ledger
2025-02-24 11:00:47,413 - [cached since 1391s ago] {}
2025-02-24 11:00:47,420 - ROLLBACK
2025-02-24 11:00:47,422 - GET http://127.0.0.1:8000/api/initialise - 0.03 ms
2025-02-24 11:00:49,251 - ROLLBACK
2025-02-24 11:00:49,253 - GET http://127.0.0.1:8000/api/revenue-expenses/ - 2.12 ms
2025-02-24 11:00:49,262 - BEGIN (implicit)
2025-02-24 11:00:49,263 - SELECT year(ledger.general_ledger_date) AS time, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_1)s END) AS total_revenue, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_3)s AND ledger.amount > %(amount_3)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_4)s AND ledger.amount < %(amount_4)s) THEN -ledger.amount ELSE %(param_2)s END) AS total_expenses 
FROM ledger GROUP BY year(ledger.general_ledger_date) ORDER BY year(ledger.general_ledger_date)
2025-02-24 11:00:49,264 - [cached since 1393s ago] {'ledger_description_1': 'Revenues', 'amount_1': 0, 'ledger_description_2': 'Expenses', 'amount_2': 0, 'param_1': 0, 'ledger_description_3': 'Expenses', 'amount_3': 0, 'ledger_description_4': 'Revenues', 'amount_4': 0, 'param_2': 0}
2025-02-24 11:00:49,266 - ROLLBACK
2025-02-24 11:00:49,268 - GET http://127.0.0.1:8000/api/net-profit/ - 2.13 ms
2025-02-24 11:00:49,275 - BEGIN (implicit)
2025-02-24 11:00:49,277 - SELECT year(ledger.general_ledger_date) AS time, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_1)s END) - sum(CASE WHEN (ledger.ledger_description = %(ledger_description_3)s AND ledger.amount > %(amount_3)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_4)s AND ledger.amount < %(amount_4)s) THEN -ledger.amount ELSE %(param_2)s END) AS net_profit 
FROM ledger GROUP BY year(ledger.general_ledger_date) ORDER BY year(ledger.general_ledger_date)
2025-02-24 11:00:49,278 - [cached since 1393s ago] {'ledger_description_1': 'Revenues', 'amount_1': 0, 'ledger_description_2': 'Expenses', 'amount_2': 0, 'param_1': 0, 'ledger_description_3': 'Expenses', 'amount_3': 0, 'ledger_description_4': 'Revenues', 'amount_4': 0, 'param_2': 0}
2025-02-24 11:00:50,633 - ROLLBACK
2025-02-24 11:00:50,635 - GET http://127.0.0.1:8000/api/top-roi/ - 3.51 ms
2025-02-24 11:00:50,649 - BEGIN (implicit)
2025-02-24 11:00:50,650 - SELECT department.department_name AS department_department_name, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s) THEN ledger.amount ELSE %(param_1)s END) - sum(CASE WHEN (ledger.ledger_description = %(ledger_description_2)s) THEN ledger.amount ELSE %(param_2)s END) AS roi 
FROM ledger INNER JOIN department ON ledger.department_id = department.department_id GROUP BY department.department_name ORDER BY sum(ledger.amount) DESC 
 LIMIT %(param_3)s
2025-02-24 11:00:50,650 - [cached since 1394s ago] {'ledger_description_1': 'Revenues', 'param_1': 0, 'ledger_description_2': 'Expenses', 'param_2': 0, 'param_3': 5}
2025-02-24 11:00:50,917 - ROLLBACK
2025-02-24 11:00:50,919 - GET http://127.0.0.1:8000/api/top-budget/ - 3.79 ms
2025-02-24 11:00:50,926 - BEGIN (implicit)
2025-02-24 11:00:50,929 - SELECT department.department_name AS department_department_name, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount ELSE %(param_1)s END + CASE WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_2)s END) AS total_expenditure 
FROM ledger INNER JOIN department ON ledger.department_id = department.department_id GROUP BY department.department_name ORDER BY sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount ELSE %(param_1)s END + CASE WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_2)s END) DESC 
 LIMIT %(param_3)s
2025-02-24 11:00:50,933 - [cached since 1395s ago] {'ledger_description_1': 'Expenses', 'amount_1': 0, 'param_1': 0, 'ledger_description_2': 'Revenues', 'amount_2': 0, 'param_2': 0, 'param_3': 10}
2025-02-24 11:00:51,386 - ROLLBACK
2025-02-24 11:00:51,387 - ROLLBACK
2025-02-24 11:00:51,389 - GET http://127.0.0.1:8000/api/net-profit/ - 2.12 ms
2025-02-24 11:00:51,391 - GET http://127.0.0.1:8000/api/revenue-expenses/ - 2.13 ms
2025-02-24 11:00:52,209 - ROLLBACK
2025-02-24 11:00:52,211 - GET http://127.0.0.1:8000/api/fund-table/ - 5.08 ms
2025-02-24 11:00:52,218 - BEGIN (implicit)
2025-02-24 11:00:52,219 - SELECT fund.fund_description AS fund_fund_description, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_1)s END) AS total_revenue, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_3)s AND ledger.amount > %(amount_3)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_4)s AND ledger.amount < %(amount_4)s) THEN -ledger.amount ELSE %(param_2)s END) AS total_expenses, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_1)s END) / nullif(sum(CASE WHEN (ledger.ledger_description = %(ledger_description_3)s AND ledger.amount > %(amount_3)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_4)s AND ledger.amount < %(amount_4)s) THEN -ledger.amount ELSE %(param_2)s END), %(nullif_1)s) AS ratio, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_1)s END) - sum(CASE WHEN (ledger.ledger_description = %(ledger_description_3)s AND ledger.amount > %(amount_3)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_4)s AND ledger.amount < %(amount_4)s) THEN -ledger.amount ELSE %(param_2)s END) AS roi 
FROM ledger INNER JOIN fund ON ledger.fund_id = fund.fund_id GROUP BY fund.fund_description ORDER BY roi DESC
2025-02-24 11:00:52,220 - [cached since 1396s ago] {'ledger_description_1': 'Revenues', 'amount_1': 0, 'ledger_description_2': 'Expenses', 'amount_2': 0, 'param_1': 0, 'ledger_description_3': 'Expenses', 'amount_3': 0, 'ledger_description_4': 'Revenues', 'amount_4': 0, 'param_2': 0, 'nullif_1': 0}
2025-02-24 11:00:53,479 - ROLLBACK
2025-02-24 11:00:53,481 - GET http://127.0.0.1:8000/api/top-roi/ - 2.83 ms
2025-02-24 11:00:53,766 - GET http://127.0.0.1:8000/api/initialise/ - 0.00 ms
2025-02-24 11:00:53,884 - BEGIN (implicit)
2025-02-24 11:00:53,885 - BEGIN (implicit)
2025-02-24 11:00:53,887 - BEGIN (implicit)
2025-02-24 11:00:53,888 - SELECT department.department_name AS department_department_name, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount ELSE %(param_1)s END + CASE WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_2)s END) AS total_expenditure 
FROM ledger INNER JOIN department ON ledger.department_id = department.department_id GROUP BY department.department_name ORDER BY sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount ELSE %(param_1)s END + CASE WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_2)s END) DESC 
 LIMIT %(param_3)s
2025-02-24 11:00:53,889 - SELECT department.department_name AS department_department_name, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s) THEN ledger.amount ELSE %(param_1)s END) - sum(CASE WHEN (ledger.ledger_description = %(ledger_description_2)s) THEN ledger.amount ELSE %(param_2)s END) AS roi 
FROM ledger INNER JOIN department ON ledger.department_id = department.department_id GROUP BY department.department_name ORDER BY sum(ledger.amount) DESC 
 LIMIT %(param_3)s
2025-02-24 11:00:53,892 - SELECT fund.fund_description AS fund_fund_description, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_1)s END) AS total_revenue, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_3)s AND ledger.amount > %(amount_3)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_4)s AND ledger.amount < %(amount_4)s) THEN -ledger.amount ELSE %(param_2)s END) AS total_expenses, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_1)s END) / nullif(sum(CASE WHEN (ledger.ledger_description = %(ledger_description_3)s AND ledger.amount > %(amount_3)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_4)s AND ledger.amount < %(amount_4)s) THEN -ledger.amount ELSE %(param_2)s END), %(nullif_1)s) AS ratio, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_1)s END) - sum(CASE WHEN (ledger.ledger_description = %(ledger_description_3)s AND ledger.amount > %(amount_3)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_4)s AND ledger.amount < %(amount_4)s) THEN -ledger.amount ELSE %(param_2)s END) AS roi 
FROM ledger INNER JOIN fund ON ledger.fund_id = fund.fund_id GROUP BY fund.fund_description ORDER BY roi DESC
2025-02-24 11:00:53,894 - BEGIN (implicit)
2025-02-24 11:00:53,901 - GET http://127.0.0.1:8000/api/initialise/ - 0.01 ms
2025-02-24 11:00:53,894 - [cached since 1398s ago] {'ledger_description_1': 'Expenses', 'amount_1': 0, 'param_1': 0, 'ledger_description_2': 'Revenues', 'amount_2': 0, 'param_2': 0, 'param_3': 10}
2025-02-24 11:00:53,895 - [cached since 1398s ago] {'ledger_description_1': 'Revenues', 'param_1': 0, 'ledger_description_2': 'Expenses', 'param_2': 0, 'param_3': 5}
2025-02-24 11:00:53,899 - [cached since 1398s ago] {'ledger_description_1': 'Revenues', 'amount_1': 0, 'ledger_description_2': 'Expenses', 'amount_2': 0, 'param_1': 0, 'ledger_description_3': 'Expenses', 'amount_3': 0, 'ledger_description_4': 'Revenues', 'amount_4': 0, 'param_2': 0, 'nullif_1': 0}
2025-02-24 11:00:53,901 - SELECT year(ledger.general_ledger_date) AS time, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_1)s END) AS total_revenue, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_3)s AND ledger.amount > %(amount_3)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_4)s AND ledger.amount < %(amount_4)s) THEN -ledger.amount ELSE %(param_2)s END) AS total_expenses 
FROM ledger GROUP BY year(ledger.general_ledger_date) ORDER BY year(ledger.general_ledger_date)
2025-02-24 11:00:53,904 - [cached since 1398s ago] {'ledger_description_1': 'Revenues', 'amount_1': 0, 'ledger_description_2': 'Expenses', 'amount_2': 0, 'param_1': 0, 'ledger_description_3': 'Expenses', 'amount_3': 0, 'ledger_description_4': 'Revenues', 'amount_4': 0, 'param_2': 0}
2025-02-24 11:00:53,907 - BEGIN (implicit)
2025-02-24 11:00:53,908 - SELECT year(ledger.general_ledger_date) AS time, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_1)s END) - sum(CASE WHEN (ledger.ledger_description = %(ledger_description_3)s AND ledger.amount > %(amount_3)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_4)s AND ledger.amount < %(amount_4)s) THEN -ledger.amount ELSE %(param_2)s END) AS net_profit 
FROM ledger GROUP BY year(ledger.general_ledger_date) ORDER BY year(ledger.general_ledger_date)
2025-02-24 11:00:53,909 - [cached since 1398s ago] {'ledger_description_1': 'Revenues', 'amount_1': 0, 'ledger_description_2': 'Expenses', 'amount_2': 0, 'param_1': 0, 'ledger_description_3': 'Expenses', 'amount_3': 0, 'ledger_description_4': 'Revenues', 'amount_4': 0, 'param_2': 0}
2025-02-24 11:00:53,974 - ROLLBACK
2025-02-24 11:00:53,977 - GET http://127.0.0.1:8000/api/top-budget/ - 3.05 ms
2025-02-24 11:00:54,090 - BEGIN (implicit)
2025-02-24 11:00:54,090 - SELECT department.department_id AS department_department_id, department.department_name AS department_department_name 
FROM department
2025-02-24 11:00:54,091 - [cached since 1398s ago] {}
2025-02-24 11:00:54,103 - SELECT min(ledger.general_ledger_date) AS min_1 
FROM ledger
2025-02-24 11:00:54,103 - [cached since 1398s ago] {}
2025-02-24 11:00:54,107 - SELECT max(ledger.general_ledger_date) AS max_1 
FROM ledger
2025-02-24 11:00:54,107 - [cached since 1398s ago] {}
2025-02-24 11:00:54,122 - ROLLBACK
2025-02-24 11:00:54,124 - GET http://127.0.0.1:8000/api/initialise - 0.04 ms
2025-02-24 11:00:54,190 - BEGIN (implicit)
2025-02-24 11:00:54,193 - SELECT department.department_id AS department_department_id, department.department_name AS department_department_name 
FROM department
2025-02-24 11:00:54,206 - [cached since 1398s ago] {}
2025-02-24 11:00:54,213 - SELECT min(ledger.general_ledger_date) AS min_1 
FROM ledger
2025-02-24 11:00:54,214 - [cached since 1398s ago] {}
2025-02-24 11:00:54,219 - SELECT max(ledger.general_ledger_date) AS max_1 
FROM ledger
2025-02-24 11:00:54,219 - [cached since 1398s ago] {}
2025-02-24 11:00:54,224 - ROLLBACK
2025-02-24 11:00:54,233 - GET http://127.0.0.1:8000/api/initialise - 0.08 ms
2025-02-24 11:00:56,250 - ROLLBACK
2025-02-24 11:00:56,252 - GET http://127.0.0.1:8000/api/revenue-expenses/ - 2.38 ms
2025-02-24 11:00:56,260 - BEGIN (implicit)
2025-02-24 11:00:56,261 - SELECT year(ledger.general_ledger_date) AS time, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_1)s END) AS total_revenue, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_3)s AND ledger.amount > %(amount_3)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_4)s AND ledger.amount < %(amount_4)s) THEN -ledger.amount ELSE %(param_2)s END) AS total_expenses 
FROM ledger GROUP BY year(ledger.general_ledger_date) ORDER BY year(ledger.general_ledger_date)
2025-02-24 11:00:56,262 - [cached since 1400s ago] {'ledger_description_1': 'Revenues', 'amount_1': 0, 'ledger_description_2': 'Expenses', 'amount_2': 0, 'param_1': 0, 'ledger_description_3': 'Expenses', 'amount_3': 0, 'ledger_description_4': 'Revenues', 'amount_4': 0, 'param_2': 0}
2025-02-24 11:00:56,264 - ROLLBACK
2025-02-24 11:00:56,266 - GET http://127.0.0.1:8000/api/net-profit/ - 2.38 ms
2025-02-24 11:00:56,272 - BEGIN (implicit)
2025-02-24 11:00:56,274 - SELECT year(ledger.general_ledger_date) AS time, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_1)s END) - sum(CASE WHEN (ledger.ledger_description = %(ledger_description_3)s AND ledger.amount > %(amount_3)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_4)s AND ledger.amount < %(amount_4)s) THEN -ledger.amount ELSE %(param_2)s END) AS net_profit 
FROM ledger GROUP BY year(ledger.general_ledger_date) ORDER BY year(ledger.general_ledger_date)
2025-02-24 11:00:56,275 - [cached since 1400s ago] {'ledger_description_1': 'Revenues', 'amount_1': 0, 'ledger_description_2': 'Expenses', 'amount_2': 0, 'param_1': 0, 'ledger_description_3': 'Expenses', 'amount_3': 0, 'ledger_description_4': 'Revenues', 'amount_4': 0, 'param_2': 0}
2025-02-24 11:00:57,362 - ROLLBACK
2025-02-24 11:00:57,365 - GET http://127.0.0.1:8000/api/fund-table/ - 5.15 ms
2025-02-24 11:00:57,704 - ROLLBACK
2025-02-24 11:00:57,706 - GET http://127.0.0.1:8000/api/top-roi/ - 3.83 ms
2025-02-24 11:00:57,717 - BEGIN (implicit)
2025-02-24 11:00:57,720 - SELECT department.department_name AS department_department_name, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s) THEN ledger.amount ELSE %(param_1)s END) - sum(CASE WHEN (ledger.ledger_description = %(ledger_description_2)s) THEN ledger.amount ELSE %(param_2)s END) AS roi 
FROM ledger INNER JOIN department ON ledger.department_id = department.department_id GROUP BY department.department_name ORDER BY sum(ledger.amount) DESC 
 LIMIT %(param_3)s
2025-02-24 11:00:57,722 - [cached since 1401s ago] {'ledger_description_1': 'Revenues', 'param_1': 0, 'ledger_description_2': 'Expenses', 'param_2': 0, 'param_3': 5}
2025-02-24 11:00:57,920 - ROLLBACK
2025-02-24 11:00:57,922 - GET http://127.0.0.1:8000/api/top-budget/ - 4.05 ms
2025-02-24 11:00:57,930 - BEGIN (implicit)
2025-02-24 11:00:57,932 - SELECT department.department_name AS department_department_name, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount ELSE %(param_1)s END + CASE WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_2)s END) AS total_expenditure 
FROM ledger INNER JOIN department ON ledger.department_id = department.department_id GROUP BY department.department_name ORDER BY sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount ELSE %(param_1)s END + CASE WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_2)s END) DESC 
 LIMIT %(param_3)s
2025-02-24 11:00:57,933 - [cached since 1402s ago] {'ledger_description_1': 'Expenses', 'amount_1': 0, 'param_1': 0, 'ledger_description_2': 'Revenues', 'amount_2': 0, 'param_2': 0, 'param_3': 10}
2025-02-24 11:00:58,451 - ROLLBACK
2025-02-24 11:00:58,451 - ROLLBACK
2025-02-24 11:00:58,453 - GET http://127.0.0.1:8000/api/revenue-expenses/ - 2.20 ms
2025-02-24 11:00:58,454 - GET http://127.0.0.1:8000/api/net-profit/ - 2.19 ms
2025-02-24 11:00:59,172 - ROLLBACK
2025-02-24 11:00:59,174 - GET http://127.0.0.1:8000/api/fund-table/ - 5.30 ms
2025-02-24 11:00:59,180 - BEGIN (implicit)
2025-02-24 11:00:59,182 - SELECT fund.fund_description AS fund_fund_description, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_1)s END) AS total_revenue, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_3)s AND ledger.amount > %(amount_3)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_4)s AND ledger.amount < %(amount_4)s) THEN -ledger.amount ELSE %(param_2)s END) AS total_expenses, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_1)s END) / nullif(sum(CASE WHEN (ledger.ledger_description = %(ledger_description_3)s AND ledger.amount > %(amount_3)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_4)s AND ledger.amount < %(amount_4)s) THEN -ledger.amount ELSE %(param_2)s END), %(nullif_1)s) AS ratio, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_1)s END) - sum(CASE WHEN (ledger.ledger_description = %(ledger_description_3)s AND ledger.amount > %(amount_3)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_4)s AND ledger.amount < %(amount_4)s) THEN -ledger.amount ELSE %(param_2)s END) AS roi 
FROM ledger INNER JOIN fund ON ledger.fund_id = fund.fund_id GROUP BY fund.fund_description ORDER BY roi DESC
2025-02-24 11:00:59,182 - [cached since 1403s ago] {'ledger_description_1': 'Revenues', 'amount_1': 0, 'ledger_description_2': 'Expenses', 'amount_2': 0, 'param_1': 0, 'ledger_description_3': 'Expenses', 'amount_3': 0, 'ledger_description_4': 'Revenues', 'amount_4': 0, 'param_2': 0, 'nullif_1': 0}
2025-02-24 11:01:01,306 - ROLLBACK
2025-02-24 11:01:01,307 - GET http://127.0.0.1:8000/api/top-roi/ - 3.59 ms
2025-02-24 11:01:01,384 - ROLLBACK
2025-02-24 11:01:01,387 - GET http://127.0.0.1:8000/api/top-budget/ - 3.46 ms
2025-02-24 11:01:03,208 - ROLLBACK
2025-02-24 11:01:03,209 - GET http://127.0.0.1:8000/api/fund-table/ - 4.03 ms
2025-02-24 11:01:52,861 - GET http://127.0.0.1:8000/api/initialise/ - 0.00 ms
2025-02-24 11:01:53,008 - BEGIN (implicit)
2025-02-24 11:01:53,010 - SELECT department.department_name AS department_department_name, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s) THEN ledger.amount ELSE %(param_1)s END) - sum(CASE WHEN (ledger.ledger_description = %(ledger_description_2)s) THEN ledger.amount ELSE %(param_2)s END) AS roi 
FROM ledger INNER JOIN department ON ledger.department_id = department.department_id GROUP BY department.department_name ORDER BY sum(ledger.amount) DESC 
 LIMIT %(param_3)s
2025-02-24 11:01:53,012 - [cached since 1457s ago] {'ledger_description_1': 'Revenues', 'param_1': 0, 'ledger_description_2': 'Expenses', 'param_2': 0, 'param_3': 5}
2025-02-24 11:01:53,025 - BEGIN (implicit)
2025-02-24 11:01:53,028 - BEGIN (implicit)
2025-02-24 11:01:53,030 - SELECT department.department_name AS department_department_name, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount ELSE %(param_1)s END + CASE WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_2)s END) AS total_expenditure 
FROM ledger INNER JOIN department ON ledger.department_id = department.department_id GROUP BY department.department_name ORDER BY sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount ELSE %(param_1)s END + CASE WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_2)s END) DESC 
 LIMIT %(param_3)s
2025-02-24 11:01:53,039 - GET http://127.0.0.1:8000/api/initialise/ - 0.00 ms
2025-02-24 11:01:53,031 - SELECT year(ledger.general_ledger_date) AS time, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_1)s END) AS total_revenue, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_3)s AND ledger.amount > %(amount_3)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_4)s AND ledger.amount < %(amount_4)s) THEN -ledger.amount ELSE %(param_2)s END) AS total_expenses 
FROM ledger GROUP BY year(ledger.general_ledger_date) ORDER BY year(ledger.general_ledger_date)
2025-02-24 11:01:53,035 - BEGIN (implicit)
2025-02-24 11:01:53,045 - BEGIN (implicit)
2025-02-24 11:01:53,045 - [cached since 1457s ago] {'ledger_description_1': 'Expenses', 'amount_1': 0, 'param_1': 0, 'ledger_description_2': 'Revenues', 'amount_2': 0, 'param_2': 0, 'param_3': 10}
2025-02-24 11:01:53,048 - [cached since 1457s ago] {'ledger_description_1': 'Revenues', 'amount_1': 0, 'ledger_description_2': 'Expenses', 'amount_2': 0, 'param_1': 0, 'ledger_description_3': 'Expenses', 'amount_3': 0, 'ledger_description_4': 'Revenues', 'amount_4': 0, 'param_2': 0}
2025-02-24 11:01:53,050 - SELECT fund.fund_description AS fund_fund_description, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_1)s END) AS total_revenue, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_3)s AND ledger.amount > %(amount_3)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_4)s AND ledger.amount < %(amount_4)s) THEN -ledger.amount ELSE %(param_2)s END) AS total_expenses, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_1)s END) / nullif(sum(CASE WHEN (ledger.ledger_description = %(ledger_description_3)s AND ledger.amount > %(amount_3)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_4)s AND ledger.amount < %(amount_4)s) THEN -ledger.amount ELSE %(param_2)s END), %(nullif_1)s) AS ratio, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_1)s END) - sum(CASE WHEN (ledger.ledger_description = %(ledger_description_3)s AND ledger.amount > %(amount_3)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_4)s AND ledger.amount < %(amount_4)s) THEN -ledger.amount ELSE %(param_2)s END) AS roi 
FROM ledger INNER JOIN fund ON ledger.fund_id = fund.fund_id GROUP BY fund.fund_description ORDER BY roi DESC
2025-02-24 11:01:53,052 - SELECT year(ledger.general_ledger_date) AS time, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_1)s END) - sum(CASE WHEN (ledger.ledger_description = %(ledger_description_3)s AND ledger.amount > %(amount_3)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_4)s AND ledger.amount < %(amount_4)s) THEN -ledger.amount ELSE %(param_2)s END) AS net_profit 
FROM ledger GROUP BY year(ledger.general_ledger_date) ORDER BY year(ledger.general_ledger_date)
2025-02-24 11:01:53,054 - [cached since 1457s ago] {'ledger_description_1': 'Revenues', 'amount_1': 0, 'ledger_description_2': 'Expenses', 'amount_2': 0, 'param_1': 0, 'ledger_description_3': 'Expenses', 'amount_3': 0, 'ledger_description_4': 'Revenues', 'amount_4': 0, 'param_2': 0, 'nullif_1': 0}
2025-02-24 11:01:53,055 - [cached since 1457s ago] {'ledger_description_1': 'Revenues', 'amount_1': 0, 'ledger_description_2': 'Expenses', 'amount_2': 0, 'param_1': 0, 'ledger_description_3': 'Expenses', 'amount_3': 0, 'ledger_description_4': 'Revenues', 'amount_4': 0, 'param_2': 0}
2025-02-24 11:01:53,267 - BEGIN (implicit)
2025-02-24 11:01:53,269 - SELECT department.department_id AS department_department_id, department.department_name AS department_department_name 
FROM department
2025-02-24 11:01:53,270 - [cached since 1457s ago] {}
2025-02-24 11:01:53,272 - SELECT min(ledger.general_ledger_date) AS min_1 
FROM ledger
2025-02-24 11:01:53,273 - [cached since 1457s ago] {}
2025-02-24 11:01:53,274 - SELECT max(ledger.general_ledger_date) AS max_1 
FROM ledger
2025-02-24 11:01:53,275 - [cached since 1457s ago] {}
2025-02-24 11:01:53,280 - ROLLBACK
2025-02-24 11:01:53,282 - GET http://127.0.0.1:8000/api/initialise - 0.03 ms
2025-02-24 11:01:53,337 - BEGIN (implicit)
2025-02-24 11:01:53,338 - SELECT department.department_id AS department_department_id, department.department_name AS department_department_name 
FROM department
2025-02-24 11:01:53,339 - [cached since 1457s ago] {}
2025-02-24 11:01:53,342 - SELECT min(ledger.general_ledger_date) AS min_1 
FROM ledger
2025-02-24 11:01:53,343 - [cached since 1457s ago] {}
2025-02-24 11:01:53,345 - SELECT max(ledger.general_ledger_date) AS max_1 
FROM ledger
2025-02-24 11:01:53,345 - [cached since 1457s ago] {}
2025-02-24 11:01:53,349 - ROLLBACK
2025-02-24 11:01:53,351 - GET http://127.0.0.1:8000/api/initialise - 0.02 ms
2025-02-24 11:01:55,479 - GET http://127.0.0.1:8000/api/initialise/ - 0.00 ms
2025-02-24 11:01:55,733 - BEGIN (implicit)
2025-02-24 11:01:55,734 - SELECT department.department_name AS department_department_name, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s) THEN ledger.amount ELSE %(param_1)s END) - sum(CASE WHEN (ledger.ledger_description = %(ledger_description_2)s) THEN ledger.amount ELSE %(param_2)s END) AS roi 
FROM ledger INNER JOIN department ON ledger.department_id = department.department_id GROUP BY department.department_name ORDER BY sum(ledger.amount) DESC 
 LIMIT %(param_3)s
2025-02-24 11:01:55,739 - [cached since 1459s ago] {'ledger_description_1': 'Revenues', 'param_1': 0, 'ledger_description_2': 'Expenses', 'param_2': 0, 'param_3': 5}
2025-02-24 11:01:55,768 - BEGIN (implicit)
2025-02-24 11:01:55,770 - SELECT department.department_name AS department_department_name, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount ELSE %(param_1)s END + CASE WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_2)s END) AS total_expenditure 
FROM ledger INNER JOIN department ON ledger.department_id = department.department_id GROUP BY department.department_name ORDER BY sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount ELSE %(param_1)s END + CASE WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_2)s END) DESC 
 LIMIT %(param_3)s
2025-02-24 11:01:55,772 - [cached since 1459s ago] {'ledger_description_1': 'Expenses', 'amount_1': 0, 'param_1': 0, 'ledger_description_2': 'Revenues', 'amount_2': 0, 'param_2': 0, 'param_3': 10}
2025-02-24 11:01:55,778 - BEGIN (implicit)
2025-02-24 11:01:55,779 - BEGIN (implicit)
2025-02-24 11:01:55,780 - SELECT year(ledger.general_ledger_date) AS time, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_1)s END) AS total_revenue, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_3)s AND ledger.amount > %(amount_3)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_4)s AND ledger.amount < %(amount_4)s) THEN -ledger.amount ELSE %(param_2)s END) AS total_expenses 
FROM ledger GROUP BY year(ledger.general_ledger_date) ORDER BY year(ledger.general_ledger_date)
2025-02-24 11:01:55,781 - SELECT year(ledger.general_ledger_date) AS time, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_1)s END) - sum(CASE WHEN (ledger.ledger_description = %(ledger_description_3)s AND ledger.amount > %(amount_3)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_4)s AND ledger.amount < %(amount_4)s) THEN -ledger.amount ELSE %(param_2)s END) AS net_profit 
FROM ledger GROUP BY year(ledger.general_ledger_date) ORDER BY year(ledger.general_ledger_date)
2025-02-24 11:01:55,781 - [cached since 1459s ago] {'ledger_description_1': 'Revenues', 'amount_1': 0, 'ledger_description_2': 'Expenses', 'amount_2': 0, 'param_1': 0, 'ledger_description_3': 'Expenses', 'amount_3': 0, 'ledger_description_4': 'Revenues', 'amount_4': 0, 'param_2': 0}
2025-02-24 11:01:55,782 - [cached since 1459s ago] {'ledger_description_1': 'Revenues', 'amount_1': 0, 'ledger_description_2': 'Expenses', 'amount_2': 0, 'param_1': 0, 'ledger_description_3': 'Expenses', 'amount_3': 0, 'ledger_description_4': 'Revenues', 'amount_4': 0, 'param_2': 0}
2025-02-24 11:01:55,837 - BEGIN (implicit)
2025-02-24 11:01:55,839 - SELECT fund.fund_description AS fund_fund_description, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_1)s END) AS total_revenue, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_3)s AND ledger.amount > %(amount_3)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_4)s AND ledger.amount < %(amount_4)s) THEN -ledger.amount ELSE %(param_2)s END) AS total_expenses, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_1)s END) / nullif(sum(CASE WHEN (ledger.ledger_description = %(ledger_description_3)s AND ledger.amount > %(amount_3)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_4)s AND ledger.amount < %(amount_4)s) THEN -ledger.amount ELSE %(param_2)s END), %(nullif_1)s) AS ratio, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_1)s END) - sum(CASE WHEN (ledger.ledger_description = %(ledger_description_3)s AND ledger.amount > %(amount_3)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_4)s AND ledger.amount < %(amount_4)s) THEN -ledger.amount ELSE %(param_2)s END) AS roi 
FROM ledger INNER JOIN fund ON ledger.fund_id = fund.fund_id GROUP BY fund.fund_description ORDER BY roi DESC
2025-02-24 11:01:55,840 - [cached since 1460s ago] {'ledger_description_1': 'Revenues', 'amount_1': 0, 'ledger_description_2': 'Expenses', 'amount_2': 0, 'param_1': 0, 'ledger_description_3': 'Expenses', 'amount_3': 0, 'ledger_description_4': 'Revenues', 'amount_4': 0, 'param_2': 0, 'nullif_1': 0}
2025-02-24 11:01:56,057 - GET http://127.0.0.1:8000/api/initialise/ - 0.00 ms
2025-02-24 11:01:56,110 - ROLLBACK
2025-02-24 11:01:56,111 - ROLLBACK
2025-02-24 11:01:56,114 - GET http://127.0.0.1:8000/api/net-profit/ - 3.10 ms
2025-02-24 11:01:56,115 - GET http://127.0.0.1:8000/api/revenue-expenses/ - 3.10 ms
2025-02-24 11:01:56,138 - BEGIN (implicit)
2025-02-24 11:01:56,140 - BEGIN (implicit)
2025-02-24 11:01:56,141 - SELECT year(ledger.general_ledger_date) AS time, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_1)s END) - sum(CASE WHEN (ledger.ledger_description = %(ledger_description_3)s AND ledger.amount > %(amount_3)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_4)s AND ledger.amount < %(amount_4)s) THEN -ledger.amount ELSE %(param_2)s END) AS net_profit 
FROM ledger GROUP BY year(ledger.general_ledger_date) ORDER BY year(ledger.general_ledger_date)
2025-02-24 11:01:56,142 - SELECT year(ledger.general_ledger_date) AS time, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_1)s END) AS total_revenue, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_3)s AND ledger.amount > %(amount_3)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_4)s AND ledger.amount < %(amount_4)s) THEN -ledger.amount ELSE %(param_2)s END) AS total_expenses 
FROM ledger GROUP BY year(ledger.general_ledger_date) ORDER BY year(ledger.general_ledger_date)
2025-02-24 11:01:56,142 - [cached since 1460s ago] {'ledger_description_1': 'Revenues', 'amount_1': 0, 'ledger_description_2': 'Expenses', 'amount_2': 0, 'param_1': 0, 'ledger_description_3': 'Expenses', 'amount_3': 0, 'ledger_description_4': 'Revenues', 'amount_4': 0, 'param_2': 0}
2025-02-24 11:01:56,143 - [cached since 1460s ago] {'ledger_description_1': 'Revenues', 'amount_1': 0, 'ledger_description_2': 'Expenses', 'amount_2': 0, 'param_1': 0, 'ledger_description_3': 'Expenses', 'amount_3': 0, 'ledger_description_4': 'Revenues', 'amount_4': 0, 'param_2': 0}
2025-02-24 11:01:58,340 - ROLLBACK
2025-02-24 11:01:58,340 - ROLLBACK
2025-02-24 11:01:58,342 - GET http://127.0.0.1:8000/api/top-budget/ - 5.33 ms
2025-02-24 11:01:58,343 - GET http://127.0.0.1:8000/api/top-roi/ - 5.34 ms
2025-02-24 11:01:59,446 - ROLLBACK
2025-02-24 11:01:59,448 - ROLLBACK
2025-02-24 11:01:59,454 - GET http://127.0.0.1:8000/api/net-profit/ - 3.70 ms
2025-02-24 11:01:59,461 - BEGIN (implicit)
2025-02-24 11:01:59,462 - SELECT year(ledger.general_ledger_date) AS time, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_1)s END) - sum(CASE WHEN (ledger.ledger_description = %(ledger_description_3)s AND ledger.amount > %(amount_3)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_4)s AND ledger.amount < %(amount_4)s) THEN -ledger.amount ELSE %(param_2)s END) AS net_profit 
FROM ledger GROUP BY year(ledger.general_ledger_date) ORDER BY year(ledger.general_ledger_date)
2025-02-24 11:01:59,463 - [cached since 1463s ago] {'ledger_description_1': 'Revenues', 'amount_1': 0, 'ledger_description_2': 'Expenses', 'amount_2': 0, 'param_1': 0, 'ledger_description_3': 'Expenses', 'amount_3': 0, 'ledger_description_4': 'Revenues', 'amount_4': 0, 'param_2': 0}
2025-02-24 11:01:59,465 - GET http://127.0.0.1:8000/api/revenue-expenses/ - 3.33 ms
2025-02-24 11:01:59,515 - ROLLBACK
2025-02-24 11:01:59,518 - GET http://127.0.0.1:8000/api/revenue-expenses/ - 3.78 ms
2025-02-24 11:01:59,525 - BEGIN (implicit)
2025-02-24 11:01:59,527 - SELECT year(ledger.general_ledger_date) AS time, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_1)s END) AS total_revenue, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_3)s AND ledger.amount > %(amount_3)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_4)s AND ledger.amount < %(amount_4)s) THEN -ledger.amount ELSE %(param_2)s END) AS total_expenses 
FROM ledger GROUP BY year(ledger.general_ledger_date) ORDER BY year(ledger.general_ledger_date)
2025-02-24 11:01:59,528 - [cached since 1463s ago] {'ledger_description_1': 'Revenues', 'amount_1': 0, 'ledger_description_2': 'Expenses', 'amount_2': 0, 'param_1': 0, 'ledger_description_3': 'Expenses', 'amount_3': 0, 'ledger_description_4': 'Revenues', 'amount_4': 0, 'param_2': 0}
2025-02-24 11:01:59,548 - ROLLBACK
2025-02-24 11:01:59,551 - GET http://127.0.0.1:8000/api/net-profit/ - 3.42 ms
2025-02-24 11:02:01,405 - BEGIN (implicit)
2025-02-24 11:02:01,406 - SELECT department.department_id AS department_department_id, department.department_name AS department_department_name 
FROM department
2025-02-24 11:02:01,406 - [cached since 1465s ago] {}
2025-02-24 11:02:01,409 - SELECT min(ledger.general_ledger_date) AS min_1 
FROM ledger
2025-02-24 11:02:01,410 - [cached since 1465s ago] {}
2025-02-24 11:02:01,413 - SELECT max(ledger.general_ledger_date) AS max_1 
FROM ledger
2025-02-24 11:02:01,413 - [cached since 1465s ago] {}
2025-02-24 11:02:01,417 - ROLLBACK
2025-02-24 11:02:01,420 - GET http://127.0.0.1:8000/api/initialise - 0.02 ms
2025-02-24 11:02:01,435 - ROLLBACK
2025-02-24 11:02:01,439 - GET http://127.0.0.1:8000/api/top-roi/ - 5.71 ms
2025-02-24 11:02:01,445 - BEGIN (implicit)
2025-02-24 11:02:01,446 - SELECT department.department_name AS department_department_name, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s) THEN ledger.amount ELSE %(param_1)s END) - sum(CASE WHEN (ledger.ledger_description = %(ledger_description_2)s) THEN ledger.amount ELSE %(param_2)s END) AS roi 
FROM ledger INNER JOIN department ON ledger.department_id = department.department_id GROUP BY department.department_name ORDER BY sum(ledger.amount) DESC 
 LIMIT %(param_3)s
2025-02-24 11:02:01,446 - [cached since 1465s ago] {'ledger_description_1': 'Revenues', 'param_1': 0, 'ledger_description_2': 'Expenses', 'param_2': 0, 'param_3': 5}
2025-02-24 11:02:01,540 - BEGIN (implicit)
2025-02-24 11:02:01,541 - SELECT department.department_id AS department_department_id, department.department_name AS department_department_name 
FROM department
2025-02-24 11:02:01,542 - [cached since 1465s ago] {}
2025-02-24 11:02:01,544 - SELECT min(ledger.general_ledger_date) AS min_1 
FROM ledger
2025-02-24 11:02:01,545 - [cached since 1465s ago] {}
2025-02-24 11:02:01,556 - ROLLBACK
2025-02-24 11:02:01,559 - GET http://127.0.0.1:8000/api/fund-table/ - 8.55 ms
2025-02-24 11:02:01,561 - SELECT max(ledger.general_ledger_date) AS max_1 
FROM ledger
2025-02-24 11:02:01,561 - [cached since 1465s ago] {}
2025-02-24 11:02:01,568 - ROLLBACK
2025-02-24 11:02:01,583 - GET http://127.0.0.1:8000/api/initialise - 0.04 ms
2025-02-24 11:02:01,610 - ROLLBACK
2025-02-24 11:02:01,614 - GET http://127.0.0.1:8000/api/top-budget/ - 5.88 ms
2025-02-24 11:02:01,624 - BEGIN (implicit)
2025-02-24 11:02:01,626 - SELECT department.department_name AS department_department_name, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount ELSE %(param_1)s END + CASE WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_2)s END) AS total_expenditure 
FROM ledger INNER JOIN department ON ledger.department_id = department.department_id GROUP BY department.department_name ORDER BY sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount ELSE %(param_1)s END + CASE WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_2)s END) DESC 
 LIMIT %(param_3)s
2025-02-24 11:02:01,626 - [cached since 1465s ago] {'ledger_description_1': 'Expenses', 'amount_1': 0, 'param_1': 0, 'ledger_description_2': 'Revenues', 'amount_2': 0, 'param_2': 0, 'param_3': 10}
2025-02-24 11:02:02,826 - POST http://127.0.0.1:8000/login - 0.29 ms
2025-02-24 11:02:02,831 - GET http://127.0.0.1:8000/api/initialise/ - 0.00 ms
2025-02-24 11:02:02,832 - ROLLBACK
2025-02-24 11:02:02,836 - GET http://127.0.0.1:8000/api/net-profit/ - 3.38 ms
2025-02-24 11:02:02,944 - ROLLBACK
2025-02-24 11:02:02,947 - GET http://127.0.0.1:8000/api/revenue-expenses/ - 3.43 ms
2025-02-24 11:02:02,990 - BEGIN (implicit)
2025-02-24 11:02:02,993 - BEGIN (implicit)
2025-02-24 11:02:02,994 - BEGIN (implicit)
2025-02-24 11:02:02,997 - SELECT department.department_name AS department_department_name, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount ELSE %(param_1)s END + CASE WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_2)s END) AS total_expenditure 
FROM ledger INNER JOIN department ON ledger.department_id = department.department_id GROUP BY department.department_name ORDER BY sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount ELSE %(param_1)s END + CASE WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_2)s END) DESC 
 LIMIT %(param_3)s
2025-02-24 11:02:03,000 - SELECT year(ledger.general_ledger_date) AS time, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_1)s END) AS total_revenue, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_3)s AND ledger.amount > %(amount_3)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_4)s AND ledger.amount < %(amount_4)s) THEN -ledger.amount ELSE %(param_2)s END) AS total_expenses 
FROM ledger GROUP BY year(ledger.general_ledger_date) ORDER BY year(ledger.general_ledger_date)
2025-02-24 11:02:03,008 - GET http://127.0.0.1:8000/api/initialise/ - 0.01 ms
2025-02-24 11:02:03,002 - SELECT department.department_name AS department_department_name, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s) THEN ledger.amount ELSE %(param_1)s END) - sum(CASE WHEN (ledger.ledger_description = %(ledger_description_2)s) THEN ledger.amount ELSE %(param_2)s END) AS roi 
FROM ledger INNER JOIN department ON ledger.department_id = department.department_id GROUP BY department.department_name ORDER BY sum(ledger.amount) DESC 
 LIMIT %(param_3)s
2025-02-24 11:02:03,004 - [cached since 1467s ago] {'ledger_description_1': 'Expenses', 'amount_1': 0, 'param_1': 0, 'ledger_description_2': 'Revenues', 'amount_2': 0, 'param_2': 0, 'param_3': 10}
2025-02-24 11:02:03,008 - BEGIN (implicit)
2025-02-24 11:02:03,011 - BEGIN (implicit)
2025-02-24 11:02:03,018 - SELECT fund.fund_description AS fund_fund_description, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_1)s END) AS total_revenue, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_3)s AND ledger.amount > %(amount_3)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_4)s AND ledger.amount < %(amount_4)s) THEN -ledger.amount ELSE %(param_2)s END) AS total_expenses, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_1)s END) / nullif(sum(CASE WHEN (ledger.ledger_description = %(ledger_description_3)s AND ledger.amount > %(amount_3)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_4)s AND ledger.amount < %(amount_4)s) THEN -ledger.amount ELSE %(param_2)s END), %(nullif_1)s) AS ratio, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_1)s END) - sum(CASE WHEN (ledger.ledger_description = %(ledger_description_3)s AND ledger.amount > %(amount_3)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_4)s AND ledger.amount < %(amount_4)s) THEN -ledger.amount ELSE %(param_2)s END) AS roi 
FROM ledger INNER JOIN fund ON ledger.fund_id = fund.fund_id GROUP BY fund.fund_description ORDER BY roi DESC
2025-02-24 11:02:03,020 - [cached since 1467s ago] {'ledger_description_1': 'Revenues', 'amount_1': 0, 'ledger_description_2': 'Expenses', 'amount_2': 0, 'param_1': 0, 'ledger_description_3': 'Expenses', 'amount_3': 0, 'ledger_description_4': 'Revenues', 'amount_4': 0, 'param_2': 0, 'nullif_1': 0}
2025-02-24 11:02:03,017 - SELECT year(ledger.general_ledger_date) AS time, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_1)s END) - sum(CASE WHEN (ledger.ledger_description = %(ledger_description_3)s AND ledger.amount > %(amount_3)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_4)s AND ledger.amount < %(amount_4)s) THEN -ledger.amount ELSE %(param_2)s END) AS net_profit 
FROM ledger GROUP BY year(ledger.general_ledger_date) ORDER BY year(ledger.general_ledger_date)
2025-02-24 11:02:03,022 - [cached since 1467s ago] {'ledger_description_1': 'Revenues', 'amount_1': 0, 'ledger_description_2': 'Expenses', 'amount_2': 0, 'param_1': 0, 'ledger_description_3': 'Expenses', 'amount_3': 0, 'ledger_description_4': 'Revenues', 'amount_4': 0, 'param_2': 0}
2025-02-24 11:02:03,014 - [cached since 1467s ago] {'ledger_description_1': 'Revenues', 'param_1': 0, 'ledger_description_2': 'Expenses', 'param_2': 0, 'param_3': 5}
2025-02-24 11:02:03,011 - [cached since 1467s ago] {'ledger_description_1': 'Revenues', 'amount_1': 0, 'ledger_description_2': 'Expenses', 'amount_2': 0, 'param_1': 0, 'ledger_description_3': 'Expenses', 'amount_3': 0, 'ledger_description_4': 'Revenues', 'amount_4': 0, 'param_2': 0}
2025-02-24 11:02:03,315 - BEGIN (implicit)
2025-02-24 11:02:03,317 - SELECT department.department_id AS department_department_id, department.department_name AS department_department_name 
FROM department
2025-02-24 11:02:03,318 - [cached since 1467s ago] {}
2025-02-24 11:02:03,325 - SELECT min(ledger.general_ledger_date) AS min_1 
FROM ledger
2025-02-24 11:02:03,326 - [cached since 1467s ago] {}
2025-02-24 11:02:03,333 - SELECT max(ledger.general_ledger_date) AS max_1 
FROM ledger
2025-02-24 11:02:03,335 - [cached since 1467s ago] {}
2025-02-24 11:02:03,340 - ROLLBACK
2025-02-24 11:02:03,342 - GET http://127.0.0.1:8000/api/initialise - 0.05 ms
2025-02-24 11:02:03,354 - BEGIN (implicit)
2025-02-24 11:02:03,355 - SELECT department.department_id AS department_department_id, department.department_name AS department_department_name 
FROM department
2025-02-24 11:02:03,356 - [cached since 1467s ago] {}
2025-02-24 11:02:03,382 - SELECT min(ledger.general_ledger_date) AS min_1 
FROM ledger
2025-02-24 11:02:03,387 - [cached since 1467s ago] {}
2025-02-24 11:02:03,393 - SELECT max(ledger.general_ledger_date) AS max_1 
FROM ledger
2025-02-24 11:02:03,393 - [cached since 1467s ago] {}
2025-02-24 11:02:03,397 - ROLLBACK
2025-02-24 11:02:03,406 - GET http://127.0.0.1:8000/api/initialise - 0.05 ms
2025-02-24 11:02:04,288 - ROLLBACK
2025-02-24 11:02:04,290 - GET http://127.0.0.1:8000/api/fund-table/ - 8.53 ms
2025-02-24 11:02:04,301 - BEGIN (implicit)
2025-02-24 11:02:04,302 - SELECT fund.fund_description AS fund_fund_description, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_1)s END) AS total_revenue, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_3)s AND ledger.amount > %(amount_3)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_4)s AND ledger.amount < %(amount_4)s) THEN -ledger.amount ELSE %(param_2)s END) AS total_expenses, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_1)s END) / nullif(sum(CASE WHEN (ledger.ledger_description = %(ledger_description_3)s AND ledger.amount > %(amount_3)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_4)s AND ledger.amount < %(amount_4)s) THEN -ledger.amount ELSE %(param_2)s END), %(nullif_1)s) AS ratio, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_1)s END) - sum(CASE WHEN (ledger.ledger_description = %(ledger_description_3)s AND ledger.amount > %(amount_3)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_4)s AND ledger.amount < %(amount_4)s) THEN -ledger.amount ELSE %(param_2)s END) AS roi 
FROM ledger INNER JOIN fund ON ledger.fund_id = fund.fund_id GROUP BY fund.fund_description ORDER BY roi DESC
2025-02-24 11:02:04,304 - [cached since 1468s ago] {'ledger_description_1': 'Revenues', 'amount_1': 0, 'ledger_description_2': 'Expenses', 'amount_2': 0, 'param_1': 0, 'ledger_description_3': 'Expenses', 'amount_3': 0, 'ledger_description_4': 'Revenues', 'amount_4': 0, 'param_2': 0, 'nullif_1': 0}
2025-02-24 11:02:05,747 - ROLLBACK
2025-02-24 11:02:05,750 - ROLLBACK
2025-02-24 11:02:05,751 - GET http://127.0.0.1:8000/api/net-profit/ - 2.77 ms
2025-02-24 11:02:05,755 - GET http://127.0.0.1:8000/api/revenue-expenses/ - 2.78 ms
2025-02-24 11:02:05,779 - BEGIN (implicit)
2025-02-24 11:02:05,782 - BEGIN (implicit)
2025-02-24 11:02:05,783 - SELECT year(ledger.general_ledger_date) AS time, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_1)s END) - sum(CASE WHEN (ledger.ledger_description = %(ledger_description_3)s AND ledger.amount > %(amount_3)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_4)s AND ledger.amount < %(amount_4)s) THEN -ledger.amount ELSE %(param_2)s END) AS net_profit 
FROM ledger GROUP BY year(ledger.general_ledger_date) ORDER BY year(ledger.general_ledger_date)
2025-02-24 11:02:05,784 - SELECT year(ledger.general_ledger_date) AS time, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_1)s END) AS total_revenue, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_3)s AND ledger.amount > %(amount_3)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_4)s AND ledger.amount < %(amount_4)s) THEN -ledger.amount ELSE %(param_2)s END) AS total_expenses 
FROM ledger GROUP BY year(ledger.general_ledger_date) ORDER BY year(ledger.general_ledger_date)
2025-02-24 11:02:05,785 - [cached since 1469s ago] {'ledger_description_1': 'Revenues', 'amount_1': 0, 'ledger_description_2': 'Expenses', 'amount_2': 0, 'param_1': 0, 'ledger_description_3': 'Expenses', 'amount_3': 0, 'ledger_description_4': 'Revenues', 'amount_4': 0, 'param_2': 0}
2025-02-24 11:02:05,786 - [cached since 1469s ago] {'ledger_description_1': 'Revenues', 'amount_1': 0, 'ledger_description_2': 'Expenses', 'amount_2': 0, 'param_1': 0, 'ledger_description_3': 'Expenses', 'amount_3': 0, 'ledger_description_4': 'Revenues', 'amount_4': 0, 'param_2': 0}
2025-02-24 11:02:06,215 - ROLLBACK
2025-02-24 11:02:06,216 - GET http://127.0.0.1:8000/api/top-roi/ - 4.77 ms
2025-02-24 11:02:06,387 - ROLLBACK
2025-02-24 11:02:06,391 - GET http://127.0.0.1:8000/api/top-budget/ - 4.77 ms
2025-02-24 11:02:07,149 - ROLLBACK
2025-02-24 11:02:07,152 - GET http://127.0.0.1:8000/api/top-roi/ - 4.18 ms
2025-02-24 11:02:07,158 - BEGIN (implicit)
2025-02-24 11:02:07,159 - SELECT department.department_name AS department_department_name, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s) THEN ledger.amount ELSE %(param_1)s END) - sum(CASE WHEN (ledger.ledger_description = %(ledger_description_2)s) THEN ledger.amount ELSE %(param_2)s END) AS roi 
FROM ledger INNER JOIN department ON ledger.department_id = department.department_id GROUP BY department.department_name ORDER BY sum(ledger.amount) DESC 
 LIMIT %(param_3)s
2025-02-24 11:02:07,160 - [cached since 1471s ago] {'ledger_description_1': 'Revenues', 'param_1': 0, 'ledger_description_2': 'Expenses', 'param_2': 0, 'param_3': 5}
2025-02-24 11:02:07,716 - ROLLBACK
2025-02-24 11:02:07,719 - GET http://127.0.0.1:8000/api/top-budget/ - 4.74 ms
2025-02-24 11:02:07,738 - BEGIN (implicit)
2025-02-24 11:02:07,750 - SELECT department.department_name AS department_department_name, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount ELSE %(param_1)s END + CASE WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_2)s END) AS total_expenditure 
FROM ledger INNER JOIN department ON ledger.department_id = department.department_id GROUP BY department.department_name ORDER BY sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount ELSE %(param_1)s END + CASE WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_2)s END) DESC 
 LIMIT %(param_3)s
2025-02-24 11:02:07,757 - [cached since 1471s ago] {'ledger_description_1': 'Expenses', 'amount_1': 0, 'param_1': 0, 'ledger_description_2': 'Revenues', 'amount_2': 0, 'param_2': 0, 'param_3': 10}
2025-02-24 11:02:08,273 - ROLLBACK
2025-02-24 11:02:08,274 - ROLLBACK
2025-02-24 11:02:08,275 - GET http://127.0.0.1:8000/api/revenue-expenses/ - 2.50 ms
2025-02-24 11:02:08,278 - GET http://127.0.0.1:8000/api/net-profit/ - 2.52 ms
2025-02-24 11:02:09,191 - ROLLBACK
2025-02-24 11:02:09,195 - GET http://127.0.0.1:8000/api/fund-table/ - 6.21 ms
2025-02-24 11:02:09,202 - BEGIN (implicit)
2025-02-24 11:02:09,204 - SELECT fund.fund_description AS fund_fund_description, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_1)s END) AS total_revenue, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_3)s AND ledger.amount > %(amount_3)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_4)s AND ledger.amount < %(amount_4)s) THEN -ledger.amount ELSE %(param_2)s END) AS total_expenses, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_1)s END) / nullif(sum(CASE WHEN (ledger.ledger_description = %(ledger_description_3)s AND ledger.amount > %(amount_3)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_4)s AND ledger.amount < %(amount_4)s) THEN -ledger.amount ELSE %(param_2)s END), %(nullif_1)s) AS ratio, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_1)s END) - sum(CASE WHEN (ledger.ledger_description = %(ledger_description_3)s AND ledger.amount > %(amount_3)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_4)s AND ledger.amount < %(amount_4)s) THEN -ledger.amount ELSE %(param_2)s END) AS roi 
FROM ledger INNER JOIN fund ON ledger.fund_id = fund.fund_id GROUP BY fund.fund_description ORDER BY roi DESC
2025-02-24 11:02:09,205 - [cached since 1473s ago] {'ledger_description_1': 'Revenues', 'amount_1': 0, 'ledger_description_2': 'Expenses', 'amount_2': 0, 'param_1': 0, 'ledger_description_3': 'Expenses', 'amount_3': 0, 'ledger_description_4': 'Revenues', 'amount_4': 0, 'param_2': 0, 'nullif_1': 0}
2025-02-24 11:02:10,157 - ROLLBACK
2025-02-24 11:02:10,159 - GET http://127.0.0.1:8000/api/fund-table/ - 5.86 ms
2025-02-24 11:02:10,736 - ROLLBACK
2025-02-24 11:02:10,739 - GET http://127.0.0.1:8000/api/top-roi/ - 3.58 ms
2025-02-24 11:02:11,447 - ROLLBACK
2025-02-24 11:02:11,450 - GET http://127.0.0.1:8000/api/top-budget/ - 3.71 ms
2025-02-24 11:02:13,259 - ROLLBACK
2025-02-24 11:02:13,260 - GET http://127.0.0.1:8000/api/fund-table/ - 4.06 ms
2025-02-24 11:02:14,984 - GET http://127.0.0.1:8000/api/initialise/ - 0.00 ms
2025-02-24 11:02:15,155 - BEGIN (implicit)
2025-02-24 11:02:15,157 - BEGIN (implicit)
2025-02-24 11:02:15,158 - SELECT department.department_name AS department_department_name, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s) THEN ledger.amount ELSE %(param_1)s END) - sum(CASE WHEN (ledger.ledger_description = %(ledger_description_2)s) THEN ledger.amount ELSE %(param_2)s END) AS roi 
FROM ledger INNER JOIN department ON ledger.department_id = department.department_id GROUP BY department.department_name ORDER BY sum(ledger.amount) DESC 
 LIMIT %(param_3)s
2025-02-24 11:02:15,160 - BEGIN (implicit)
2025-02-24 11:02:15,161 - SELECT department.department_name AS department_department_name, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount ELSE %(param_1)s END + CASE WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_2)s END) AS total_expenditure 
FROM ledger INNER JOIN department ON ledger.department_id = department.department_id GROUP BY department.department_name ORDER BY sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount ELSE %(param_1)s END + CASE WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_2)s END) DESC 
 LIMIT %(param_3)s
2025-02-24 11:02:15,162 - [cached since 1479s ago] {'ledger_description_1': 'Revenues', 'param_1': 0, 'ledger_description_2': 'Expenses', 'param_2': 0, 'param_3': 5}
2025-02-24 11:02:15,163 - SELECT year(ledger.general_ledger_date) AS time, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_1)s END) AS total_revenue, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_3)s AND ledger.amount > %(amount_3)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_4)s AND ledger.amount < %(amount_4)s) THEN -ledger.amount ELSE %(param_2)s END) AS total_expenses 
FROM ledger GROUP BY year(ledger.general_ledger_date) ORDER BY year(ledger.general_ledger_date)
2025-02-24 11:02:15,173 - GET http://127.0.0.1:8000/api/initialise/ - 0.00 ms
2025-02-24 11:02:15,164 - [cached since 1479s ago] {'ledger_description_1': 'Expenses', 'amount_1': 0, 'param_1': 0, 'ledger_description_2': 'Revenues', 'amount_2': 0, 'param_2': 0, 'param_3': 10}
2025-02-24 11:02:15,167 - BEGIN (implicit)
2025-02-24 11:02:15,172 - BEGIN (implicit)
2025-02-24 11:02:15,173 - [cached since 1479s ago] {'ledger_description_1': 'Revenues', 'amount_1': 0, 'ledger_description_2': 'Expenses', 'amount_2': 0, 'param_1': 0, 'ledger_description_3': 'Expenses', 'amount_3': 0, 'ledger_description_4': 'Revenues', 'amount_4': 0, 'param_2': 0}
2025-02-24 11:02:15,176 - SELECT year(ledger.general_ledger_date) AS time, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_1)s END) - sum(CASE WHEN (ledger.ledger_description = %(ledger_description_3)s AND ledger.amount > %(amount_3)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_4)s AND ledger.amount < %(amount_4)s) THEN -ledger.amount ELSE %(param_2)s END) AS net_profit 
FROM ledger GROUP BY year(ledger.general_ledger_date) ORDER BY year(ledger.general_ledger_date)
2025-02-24 11:02:15,177 - SELECT fund.fund_description AS fund_fund_description, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_1)s END) AS total_revenue, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_3)s AND ledger.amount > %(amount_3)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_4)s AND ledger.amount < %(amount_4)s) THEN -ledger.amount ELSE %(param_2)s END) AS total_expenses, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_1)s END) / nullif(sum(CASE WHEN (ledger.ledger_description = %(ledger_description_3)s AND ledger.amount > %(amount_3)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_4)s AND ledger.amount < %(amount_4)s) THEN -ledger.amount ELSE %(param_2)s END), %(nullif_1)s) AS ratio, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_1)s END) - sum(CASE WHEN (ledger.ledger_description = %(ledger_description_3)s AND ledger.amount > %(amount_3)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_4)s AND ledger.amount < %(amount_4)s) THEN -ledger.amount ELSE %(param_2)s END) AS roi 
FROM ledger INNER JOIN fund ON ledger.fund_id = fund.fund_id GROUP BY fund.fund_description ORDER BY roi DESC
2025-02-24 11:02:15,179 - [cached since 1479s ago] {'ledger_description_1': 'Revenues', 'amount_1': 0, 'ledger_description_2': 'Expenses', 'amount_2': 0, 'param_1': 0, 'ledger_description_3': 'Expenses', 'amount_3': 0, 'ledger_description_4': 'Revenues', 'amount_4': 0, 'param_2': 0}
2025-02-24 11:02:15,184 - [cached since 1479s ago] {'ledger_description_1': 'Revenues', 'amount_1': 0, 'ledger_description_2': 'Expenses', 'amount_2': 0, 'param_1': 0, 'ledger_description_3': 'Expenses', 'amount_3': 0, 'ledger_description_4': 'Revenues', 'amount_4': 0, 'param_2': 0, 'nullif_1': 0}
2025-02-24 11:02:15,687 - BEGIN (implicit)
2025-02-24 11:02:15,688 - SELECT department.department_id AS department_department_id, department.department_name AS department_department_name 
FROM department
2025-02-24 11:02:15,688 - [cached since 1479s ago] {}
2025-02-24 11:02:15,692 - SELECT min(ledger.general_ledger_date) AS min_1 
FROM ledger
2025-02-24 11:02:15,692 - [cached since 1479s ago] {}
2025-02-24 11:02:15,694 - SELECT max(ledger.general_ledger_date) AS max_1 
FROM ledger
2025-02-24 11:02:15,695 - [cached since 1479s ago] {}
2025-02-24 11:02:15,708 - ROLLBACK
2025-02-24 11:02:15,710 - GET http://127.0.0.1:8000/api/initialise - 0.03 ms
2025-02-24 11:02:15,772 - BEGIN (implicit)
2025-02-24 11:02:15,772 - SELECT department.department_id AS department_department_id, department.department_name AS department_department_name 
FROM department
2025-02-24 11:02:15,772 - [cached since 1479s ago] {}
2025-02-24 11:02:15,816 - SELECT min(ledger.general_ledger_date) AS min_1 
FROM ledger
2025-02-24 11:02:15,816 - [cached since 1479s ago] {}
2025-02-24 11:02:15,855 - SELECT max(ledger.general_ledger_date) AS max_1 
FROM ledger
2025-02-24 11:02:15,856 - [cached since 1479s ago] {}
2025-02-24 11:02:15,861 - ROLLBACK
2025-02-24 11:02:15,864 - GET http://127.0.0.1:8000/api/initialise - 0.09 ms
2025-02-24 11:02:17,510 - ROLLBACK
2025-02-24 11:02:17,512 - ROLLBACK
2025-02-24 11:02:17,513 - GET http://127.0.0.1:8000/api/revenue-expenses/ - 2.37 ms
2025-02-24 11:02:17,515 - GET http://127.0.0.1:8000/api/net-profit/ - 2.36 ms
2025-02-24 11:02:17,525 - BEGIN (implicit)
2025-02-24 11:02:17,527 - SELECT year(ledger.general_ledger_date) AS time, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_1)s END) AS total_revenue, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_3)s AND ledger.amount > %(amount_3)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_4)s AND ledger.amount < %(amount_4)s) THEN -ledger.amount ELSE %(param_2)s END) AS total_expenses 
FROM ledger GROUP BY year(ledger.general_ledger_date) ORDER BY year(ledger.general_ledger_date)
2025-02-24 11:02:17,533 - BEGIN (implicit)
2025-02-24 11:02:17,534 - [cached since 1481s ago] {'ledger_description_1': 'Revenues', 'amount_1': 0, 'ledger_description_2': 'Expenses', 'amount_2': 0, 'param_1': 0, 'ledger_description_3': 'Expenses', 'amount_3': 0, 'ledger_description_4': 'Revenues', 'amount_4': 0, 'param_2': 0}
2025-02-24 11:02:17,535 - SELECT year(ledger.general_ledger_date) AS time, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_1)s END) - sum(CASE WHEN (ledger.ledger_description = %(ledger_description_3)s AND ledger.amount > %(amount_3)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_4)s AND ledger.amount < %(amount_4)s) THEN -ledger.amount ELSE %(param_2)s END) AS net_profit 
FROM ledger GROUP BY year(ledger.general_ledger_date) ORDER BY year(ledger.general_ledger_date)
2025-02-24 11:02:17,536 - [cached since 1481s ago] {'ledger_description_1': 'Revenues', 'amount_1': 0, 'ledger_description_2': 'Expenses', 'amount_2': 0, 'param_1': 0, 'ledger_description_3': 'Expenses', 'amount_3': 0, 'ledger_description_4': 'Revenues', 'amount_4': 0, 'param_2': 0}
2025-02-24 11:02:18,746 - ROLLBACK
2025-02-24 11:02:18,748 - GET http://127.0.0.1:8000/api/top-roi/ - 3.60 ms
2025-02-24 11:02:18,754 - BEGIN (implicit)
2025-02-24 11:02:18,756 - SELECT department.department_name AS department_department_name, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s) THEN ledger.amount ELSE %(param_1)s END) - sum(CASE WHEN (ledger.ledger_description = %(ledger_description_2)s) THEN ledger.amount ELSE %(param_2)s END) AS roi 
FROM ledger INNER JOIN department ON ledger.department_id = department.department_id GROUP BY department.department_name ORDER BY sum(ledger.amount) DESC 
 LIMIT %(param_3)s
2025-02-24 11:02:18,757 - [cached since 1482s ago] {'ledger_description_1': 'Revenues', 'param_1': 0, 'ledger_description_2': 'Expenses', 'param_2': 0, 'param_3': 5}
2025-02-24 11:02:19,068 - ROLLBACK
2025-02-24 11:02:19,070 - GET http://127.0.0.1:8000/api/top-budget/ - 3.92 ms
2025-02-24 11:02:19,076 - BEGIN (implicit)
2025-02-24 11:02:19,077 - SELECT department.department_name AS department_department_name, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount ELSE %(param_1)s END + CASE WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_2)s END) AS total_expenditure 
FROM ledger INNER JOIN department ON ledger.department_id = department.department_id GROUP BY department.department_name ORDER BY sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount ELSE %(param_1)s END + CASE WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_2)s END) DESC 
 LIMIT %(param_3)s
2025-02-24 11:02:19,078 - [cached since 1483s ago] {'ledger_description_1': 'Expenses', 'amount_1': 0, 'param_1': 0, 'ledger_description_2': 'Revenues', 'amount_2': 0, 'param_2': 0, 'param_3': 10}
2025-02-24 11:02:19,904 - ROLLBACK
2025-02-24 11:02:19,906 - GET http://127.0.0.1:8000/api/net-profit/ - 2.38 ms
2025-02-24 11:02:19,910 - ROLLBACK
2025-02-24 11:02:19,913 - GET http://127.0.0.1:8000/api/revenue-expenses/ - 2.39 ms
2025-02-24 11:02:20,761 - GET http://127.0.0.1:8000/api/initialise/ - 0.00 ms
2025-02-24 11:02:20,956 - BEGIN (implicit)
2025-02-24 11:02:20,958 - SELECT department.department_name AS department_department_name, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s) THEN ledger.amount ELSE %(param_1)s END) - sum(CASE WHEN (ledger.ledger_description = %(ledger_description_2)s) THEN ledger.amount ELSE %(param_2)s END) AS roi 
FROM ledger INNER JOIN department ON ledger.department_id = department.department_id GROUP BY department.department_name ORDER BY sum(ledger.amount) DESC 
 LIMIT %(param_3)s
2025-02-24 11:02:20,960 - [cached since 1485s ago] {'ledger_description_1': 'Revenues', 'param_1': 0, 'ledger_description_2': 'Expenses', 'param_2': 0, 'param_3': 5}
2025-02-24 11:02:20,971 - BEGIN (implicit)
2025-02-24 11:02:20,974 - SELECT department.department_name AS department_department_name, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount ELSE %(param_1)s END + CASE WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_2)s END) AS total_expenditure 
FROM ledger INNER JOIN department ON ledger.department_id = department.department_id GROUP BY department.department_name ORDER BY sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount ELSE %(param_1)s END + CASE WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_2)s END) DESC 
 LIMIT %(param_3)s
2025-02-24 11:02:20,977 - [cached since 1485s ago] {'ledger_description_1': 'Expenses', 'amount_1': 0, 'param_1': 0, 'ledger_description_2': 'Revenues', 'amount_2': 0, 'param_2': 0, 'param_3': 10}
2025-02-24 11:02:20,982 - BEGIN (implicit)
2025-02-24 11:02:20,988 - SELECT fund.fund_description AS fund_fund_description, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_1)s END) AS total_revenue, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_3)s AND ledger.amount > %(amount_3)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_4)s AND ledger.amount < %(amount_4)s) THEN -ledger.amount ELSE %(param_2)s END) AS total_expenses, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_1)s END) / nullif(sum(CASE WHEN (ledger.ledger_description = %(ledger_description_3)s AND ledger.amount > %(amount_3)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_4)s AND ledger.amount < %(amount_4)s) THEN -ledger.amount ELSE %(param_2)s END), %(nullif_1)s) AS ratio, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_1)s END) - sum(CASE WHEN (ledger.ledger_description = %(ledger_description_3)s AND ledger.amount > %(amount_3)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_4)s AND ledger.amount < %(amount_4)s) THEN -ledger.amount ELSE %(param_2)s END) AS roi 
FROM ledger INNER JOIN fund ON ledger.fund_id = fund.fund_id GROUP BY fund.fund_description ORDER BY roi DESC
2025-02-24 11:02:20,989 - [cached since 1485s ago] {'ledger_description_1': 'Revenues', 'amount_1': 0, 'ledger_description_2': 'Expenses', 'amount_2': 0, 'param_1': 0, 'ledger_description_3': 'Expenses', 'amount_3': 0, 'ledger_description_4': 'Revenues', 'amount_4': 0, 'param_2': 0, 'nullif_1': 0}
2025-02-24 11:02:20,994 - GET http://127.0.0.1:8000/api/initialise/ - 0.01 ms
2025-02-24 11:02:21,006 - BEGIN (implicit)
2025-02-24 11:02:21,008 - SELECT year(ledger.general_ledger_date) AS time, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_1)s END) AS total_revenue, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_3)s AND ledger.amount > %(amount_3)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_4)s AND ledger.amount < %(amount_4)s) THEN -ledger.amount ELSE %(param_2)s END) AS total_expenses 
FROM ledger GROUP BY year(ledger.general_ledger_date) ORDER BY year(ledger.general_ledger_date)
2025-02-24 11:02:21,009 - [cached since 1485s ago] {'ledger_description_1': 'Revenues', 'amount_1': 0, 'ledger_description_2': 'Expenses', 'amount_2': 0, 'param_1': 0, 'ledger_description_3': 'Expenses', 'amount_3': 0, 'ledger_description_4': 'Revenues', 'amount_4': 0, 'param_2': 0}
2025-02-24 11:02:21,009 - BEGIN (implicit)
2025-02-24 11:02:21,011 - SELECT year(ledger.general_ledger_date) AS time, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_1)s END) - sum(CASE WHEN (ledger.ledger_description = %(ledger_description_3)s AND ledger.amount > %(amount_3)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_4)s AND ledger.amount < %(amount_4)s) THEN -ledger.amount ELSE %(param_2)s END) AS net_profit 
FROM ledger GROUP BY year(ledger.general_ledger_date) ORDER BY year(ledger.general_ledger_date)
2025-02-24 11:02:21,012 - [cached since 1485s ago] {'ledger_description_1': 'Revenues', 'amount_1': 0, 'ledger_description_2': 'Expenses', 'amount_2': 0, 'param_1': 0, 'ledger_description_3': 'Expenses', 'amount_3': 0, 'ledger_description_4': 'Revenues', 'amount_4': 0, 'param_2': 0}
2025-02-24 11:02:21,038 - ROLLBACK
2025-02-24 11:02:21,040 - GET http://127.0.0.1:8000/api/fund-table/ - 5.89 ms
2025-02-24 11:02:21,253 - BEGIN (implicit)
2025-02-24 11:02:21,257 - SELECT department.department_id AS department_department_id, department.department_name AS department_department_name 
FROM department
2025-02-24 11:02:21,261 - [cached since 1485s ago] {}
2025-02-24 11:02:21,284 - SELECT min(ledger.general_ledger_date) AS min_1 
FROM ledger
2025-02-24 11:02:21,285 - [cached since 1485s ago] {}
2025-02-24 11:02:21,302 - SELECT max(ledger.general_ledger_date) AS max_1 
FROM ledger
2025-02-24 11:02:21,303 - [cached since 1485s ago] {}
2025-02-24 11:02:21,329 - ROLLBACK
2025-02-24 11:02:21,331 - GET http://127.0.0.1:8000/api/initialise - 0.08 ms
2025-02-24 11:02:21,351 - BEGIN (implicit)
2025-02-24 11:02:21,351 - SELECT department.department_id AS department_department_id, department.department_name AS department_department_name 
FROM department
2025-02-24 11:02:21,352 - [cached since 1485s ago] {}
2025-02-24 11:02:21,374 - SELECT min(ledger.general_ledger_date) AS min_1 
FROM ledger
2025-02-24 11:02:21,375 - [cached since 1485s ago] {}
2025-02-24 11:02:21,383 - SELECT max(ledger.general_ledger_date) AS max_1 
FROM ledger
2025-02-24 11:02:21,383 - [cached since 1485s ago] {}
2025-02-24 11:02:21,390 - ROLLBACK
2025-02-24 11:02:21,396 - GET http://127.0.0.1:8000/api/initialise - 0.05 ms
2025-02-24 11:02:22,920 - ROLLBACK
2025-02-24 11:02:22,922 - GET http://127.0.0.1:8000/api/top-roi/ - 4.17 ms
2025-02-24 11:02:23,487 - ROLLBACK
2025-02-24 11:02:23,489 - GET http://127.0.0.1:8000/api/revenue-expenses/ - 2.53 ms
2025-02-24 11:02:23,489 - ROLLBACK
2025-02-24 11:02:23,492 - GET http://127.0.0.1:8000/api/net-profit/ - 2.53 ms
2025-02-24 11:02:23,501 - BEGIN (implicit)
2025-02-24 11:02:23,505 - SELECT year(ledger.general_ledger_date) AS time, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_1)s END) AS total_revenue, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_3)s AND ledger.amount > %(amount_3)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_4)s AND ledger.amount < %(amount_4)s) THEN -ledger.amount ELSE %(param_2)s END) AS total_expenses 
FROM ledger GROUP BY year(ledger.general_ledger_date) ORDER BY year(ledger.general_ledger_date)
2025-02-24 11:02:23,507 - BEGIN (implicit)
2025-02-24 11:02:23,508 - [cached since 1487s ago] {'ledger_description_1': 'Revenues', 'amount_1': 0, 'ledger_description_2': 'Expenses', 'amount_2': 0, 'param_1': 0, 'ledger_description_3': 'Expenses', 'amount_3': 0, 'ledger_description_4': 'Revenues', 'amount_4': 0, 'param_2': 0}
2025-02-24 11:02:23,509 - SELECT year(ledger.general_ledger_date) AS time, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_1)s END) - sum(CASE WHEN (ledger.ledger_description = %(ledger_description_3)s AND ledger.amount > %(amount_3)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_4)s AND ledger.amount < %(amount_4)s) THEN -ledger.amount ELSE %(param_2)s END) AS net_profit 
FROM ledger GROUP BY year(ledger.general_ledger_date) ORDER BY year(ledger.general_ledger_date)
2025-02-24 11:02:23,511 - [cached since 1487s ago] {'ledger_description_1': 'Revenues', 'amount_1': 0, 'ledger_description_2': 'Expenses', 'amount_2': 0, 'param_1': 0, 'ledger_description_3': 'Expenses', 'amount_3': 0, 'ledger_description_4': 'Revenues', 'amount_4': 0, 'param_2': 0}
2025-02-24 11:02:23,592 - ROLLBACK
2025-02-24 11:02:23,594 - GET http://127.0.0.1:8000/api/top-budget/ - 4.52 ms
2025-02-24 11:02:24,726 - ROLLBACK
2025-02-24 11:02:24,728 - GET http://127.0.0.1:8000/api/top-roi/ - 3.78 ms
2025-02-24 11:02:24,735 - BEGIN (implicit)
2025-02-24 11:02:24,737 - SELECT department.department_name AS department_department_name, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s) THEN ledger.amount ELSE %(param_1)s END) - sum(CASE WHEN (ledger.ledger_description = %(ledger_description_2)s) THEN ledger.amount ELSE %(param_2)s END) AS roi 
FROM ledger INNER JOIN department ON ledger.department_id = department.department_id GROUP BY department.department_name ORDER BY sum(ledger.amount) DESC 
 LIMIT %(param_3)s
2025-02-24 11:02:24,737 - [cached since 1488s ago] {'ledger_description_1': 'Revenues', 'param_1': 0, 'ledger_description_2': 'Expenses', 'param_2': 0, 'param_3': 5}
2025-02-24 11:02:25,038 - ROLLBACK
2025-02-24 11:02:25,040 - GET http://127.0.0.1:8000/api/top-budget/ - 4.09 ms
2025-02-24 11:02:25,047 - BEGIN (implicit)
2025-02-24 11:02:25,048 - SELECT department.department_name AS department_department_name, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount ELSE %(param_1)s END + CASE WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_2)s END) AS total_expenditure 
FROM ledger INNER JOIN department ON ledger.department_id = department.department_id GROUP BY department.department_name ORDER BY sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount ELSE %(param_1)s END + CASE WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_2)s END) DESC 
 LIMIT %(param_3)s
2025-02-24 11:02:25,049 - [cached since 1489s ago] {'ledger_description_1': 'Expenses', 'amount_1': 0, 'param_1': 0, 'ledger_description_2': 'Revenues', 'amount_2': 0, 'param_2': 0, 'param_3': 10}
2025-02-24 11:02:25,625 - ROLLBACK
2025-02-24 11:02:25,627 - ROLLBACK
2025-02-24 11:02:25,628 - GET http://127.0.0.1:8000/api/revenue-expenses/ - 2.13 ms
2025-02-24 11:02:25,630 - GET http://127.0.0.1:8000/api/net-profit/ - 2.13 ms
2025-02-24 11:02:26,508 - ROLLBACK
2025-02-24 11:02:26,510 - GET http://127.0.0.1:8000/api/fund-table/ - 5.55 ms
2025-02-24 11:02:26,518 - BEGIN (implicit)
2025-02-24 11:02:26,519 - SELECT fund.fund_description AS fund_fund_description, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_1)s END) AS total_revenue, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_3)s AND ledger.amount > %(amount_3)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_4)s AND ledger.amount < %(amount_4)s) THEN -ledger.amount ELSE %(param_2)s END) AS total_expenses, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_1)s END) / nullif(sum(CASE WHEN (ledger.ledger_description = %(ledger_description_3)s AND ledger.amount > %(amount_3)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_4)s AND ledger.amount < %(amount_4)s) THEN -ledger.amount ELSE %(param_2)s END), %(nullif_1)s) AS ratio, sum(CASE WHEN (ledger.ledger_description = %(ledger_description_1)s AND ledger.amount > %(amount_1)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_2)s AND ledger.amount < %(amount_2)s) THEN -ledger.amount ELSE %(param_1)s END) - sum(CASE WHEN (ledger.ledger_description = %(ledger_description_3)s AND ledger.amount > %(amount_3)s) THEN ledger.amount WHEN (ledger.ledger_description = %(ledger_description_4)s AND ledger.amount < %(amount_4)s) THEN -ledger.amount ELSE %(param_2)s END) AS roi 
FROM ledger INNER JOIN fund ON ledger.fund_id = fund.fund_id GROUP BY fund.fund_description ORDER BY roi DESC
2025-02-24 11:02:26,520 - [cached since 1490s ago] {'ledger_description_1': 'Revenues', 'amount_1': 0, 'ledger_description_2': 'Expenses', 'amount_2': 0, 'param_1': 0, 'ledger_description_3': 'Expenses', 'amount_3': 0, 'ledger_description_4': 'Revenues', 'amount_4': 0, 'param_2': 0, 'nullif_1': 0}
2025-02-24 11:02:27,508 - ROLLBACK
2025-02-24 11:02:27,509 - GET http://127.0.0.1:8000/api/top-roi/ - 2.78 ms
2025-02-24 11:02:27,765 - ROLLBACK
2025-02-24 11:02:27,766 - GET http://127.0.0.1:8000/api/top-budget/ - 2.72 ms
2025-02-24 11:02:30,144 - ROLLBACK
2025-02-24 11:02:30,146 - GET http://127.0.0.1:8000/api/fund-table/ - 3.63 ms
